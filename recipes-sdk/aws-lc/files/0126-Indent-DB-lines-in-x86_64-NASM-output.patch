From c3c6d23d4c4cf5792716cffa5272dfe28380135a Mon Sep 17 00:00:00 2001
From: David Benjamin <davidben@google.com>
Date: Tue, 17 Jan 2023 11:04:25 -0500
Subject: [PATCH] Indent DB lines in x86_64 NASM output.

This is purely cosmetic, but makes it consistent with the DW, etc.,
lines in the block above. The SEH unwind code support will emit a mix of
DW and DB directives and this makes them look more consistent.

Bug: 259
Change-Id: Ia16166ab2495aa813d6076d55af5b62511933c28
Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56125
Reviewed-by: Adam Langley <agl@google.com>
Auto-Submit: David Benjamin <davidben@google.com>
Commit-Queue: Adam Langley <agl@google.com>
Commit-Queue: David Benjamin <davidben@google.com>
(cherry picked from commit aa18fe24cdbe4d0b353cd3d82a6a5017af88ccb1)
---
 crypto/perlasm/x86_64-xlate.pl                |    4 +-
 .../crypto/chacha/chacha-x86_64.asm           |   24 +-
 .../cipher_extra/aes128gcmsiv-x86_64.asm      |    2 +-
 .../crypto/cipher_extra/aesni-sha1-x86_64.asm |  402 ++---
 .../cipher_extra/aesni-sha256-x86_64.asm      |  130 +-
 .../cipher_extra/chacha20_poly1305_x86_64.asm |   44 +-
 .../crypto/fipsmodule/aesni-gcm-x86_64.asm    |   22 +-
 .../crypto/fipsmodule/aesni-x86_64.asm        | 1336 ++++++++---------
 .../crypto/fipsmodule/ghash-ssse3-x86_64.asm  |   46 +-
 .../crypto/fipsmodule/ghash-x86_64.asm        |   94 +-
 .../crypto/fipsmodule/md5-x86_64.asm          |    2 +-
 .../crypto/fipsmodule/p256-x86_64-asm.asm     |  174 +--
 .../crypto/fipsmodule/rsaz-avx2.asm           |   74 +-
 .../crypto/fipsmodule/sha1-x86_64.asm         |  166 +-
 .../crypto/fipsmodule/sha256-x86_64.asm       |  130 +-
 .../crypto/fipsmodule/sha512-x86_64.asm       |   14 +-
 .../crypto/fipsmodule/vpaes-x86_64.asm        |   22 +-
 .../crypto/fipsmodule/x86_64-mont.asm         |   22 +-
 .../crypto/fipsmodule/x86_64-mont5.asm        |  112 +-
 .../crypto/test/trampoline-x86_64.asm         |  120 +-
 20 files changed, 1470 insertions(+), 1470 deletions(-)

diff --git a/crypto/perlasm/x86_64-xlate.pl b/crypto/perlasm/x86_64-xlate.pl
index 1b1e793f3..0f57463ef 100755
--- a/crypto/perlasm/x86_64-xlate.pl
+++ b/crypto/perlasm/x86_64-xlate.pl
@@ -909,11 +909,11 @@ my %globals;
 				    map(s/(0b[0-1]+)/oct($1)/eig,@str);
 				    map(s/0x([0-9a-f]+)/0$1h/ig,@str) if ($masm);
 				    while ($#str>15) {
-					$self->{value}.="DB\t"
+					$self->{value}.="\tDB\t"
 						.join(",",@str[0..15])."\n";
 					foreach (0..15) { shift @str; }
 				    }
-				    $self->{value}.="DB\t"
+				    $self->{value}.="\tDB\t"
 						.join(",",@str) if (@str);
 				    last;
 				  };
diff --git a/generated-src/win-x86_64/crypto/chacha/chacha-x86_64.asm b/generated-src/win-x86_64/crypto/chacha/chacha-x86_64.asm
index ba59f50f2..39d087790 100644
--- a/generated-src/win-x86_64/crypto/chacha/chacha-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/chacha/chacha-x86_64.asm
@@ -29,12 +29,12 @@ $L$incy:
 $L$eight:
 	DD	8,8,8,8,8,8,8,8
 $L$rot16:
-DB	0x2,0x3,0x0,0x1,0x6,0x7,0x4,0x5,0xa,0xb,0x8,0x9,0xe,0xf,0xc,0xd
+	DB	0x2,0x3,0x0,0x1,0x6,0x7,0x4,0x5,0xa,0xb,0x8,0x9,0xe,0xf,0xc,0xd
 $L$rot24:
-DB	0x3,0x0,0x1,0x2,0x7,0x4,0x5,0x6,0xb,0x8,0x9,0xa,0xf,0xc,0xd,0xe
+	DB	0x3,0x0,0x1,0x2,0x7,0x4,0x5,0x6,0xb,0x8,0x9,0xa,0xf,0xc,0xd,0xe
 $L$sigma:
-DB	101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107
-DB	0
+	DB	101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107
+	DB	0
 ALIGN	64
 $L$zeroz:
 	DD	0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0
@@ -44,10 +44,10 @@ $L$incz:
 	DD	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
 $L$sixteen:
 	DD	16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
-DB	67,104,97,67,104,97,50,48,32,102,111,114,32,120,56,54
-DB	95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32
-DB	98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115
-DB	108,46,111,114,103,62,0
+	DB	67,104,97,67,104,97,50,48,32,102,111,114,32,120,56,54
+	DB	95,54,52,44,32,67,82,89,80,84,79,71,65,77,83,32
+	DB	98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115
+	DB	108,46,111,114,103,62,0
 global	ChaCha20_ctr32
 
 ALIGN	64
@@ -1909,20 +1909,20 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_ChaCha20_ctr32:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 
 $L$SEH_info_ChaCha20_ssse3:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$ssse3_body wrt ..imagebase,$L$ssse3_epilogue wrt ..imagebase
 
 $L$SEH_info_ChaCha20_4x:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$4x_body wrt ..imagebase,$L$4x_epilogue wrt ..imagebase
 $L$SEH_info_ChaCha20_8x:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$8x_body wrt ..imagebase,$L$8x_epilogue wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.asm b/generated-src/win-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.asm
index 3f1b472ca..d11046ebc 100644
--- a/generated-src/win-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.asm
@@ -42,7 +42,7 @@ con1:
 con2:
 	DD	0x1b,0x1b,0x1b,0x1b
 con3:
-DB	-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,7,4,5,6,7
+	DB	-1,-1,-1,-1,-1,-1,-1,-1,4,5,6,7,4,5,6,7
 and_mask:
 	DD	0,0xffffffff,0xffffffff,0xffffffff
 section	.text code align=64
diff --git a/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha1-x86_64.asm b/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha1-x86_64.asm
index 99143e152..2a494abc0 100644
--- a/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha1-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha1-x86_64.asm
@@ -131,7 +131,7 @@ $L$oop_ssse3:
 	xorps	xmm14,xmm15
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pshufd	xmm8,xmm4,238
 	xor	esi,edx
 	movdqa	xmm12,xmm7
@@ -158,7 +158,7 @@ DB	102,15,56,220,208
 	movdqa	XMMWORD[48+rsp],xmm13
 	add	edx,edi
 	movups	xmm0,XMMWORD[((-64))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	and	esi,eax
 	movdqa	xmm3,xmm8
 	xor	eax,ebx
@@ -185,7 +185,7 @@ DB	102,15,56,220,209
 	mov	esi,ecx
 	add	ebx,DWORD[12+rsp]
 	movups	xmm1,XMMWORD[((-48))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pslld	xmm13,2
 	pxor	xmm8,xmm3
 	xor	edx,ebp
@@ -214,7 +214,7 @@ DB	102,15,56,220,208
 	add	eax,ebx
 	ror	ebx,7
 	movups	xmm0,XMMWORD[((-32))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	pxor	xmm13,xmm7
 	xor	edi,edx
 	mov	esi,eax
@@ -240,7 +240,7 @@ DB	102,15,56,220,209
 	rol	ebp,5
 	add	edx,esi
 	movups	xmm1,XMMWORD[((-16))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm3,xmm12
 	and	edi,eax
 	xor	eax,ebx
@@ -269,7 +269,7 @@ DB	102,15,56,220,208
 	mov	edi,ecx
 	add	ebx,DWORD[32+rsp]
 	movups	xmm0,XMMWORD[r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	punpcklqdq	xmm10,xmm7
 	xor	edx,ebp
 	rol	ecx,5
@@ -295,7 +295,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	ror	ebx,7
 	movups	xmm1,XMMWORD[16+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm3,xmm10
 	xor	esi,edx
 	pslldq	xmm13,12
@@ -323,7 +323,7 @@ DB	102,15,56,220,208
 	rol	ebp,5
 	add	edx,edi
 	movups	xmm0,XMMWORD[32+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	and	esi,eax
 	pxor	xmm10,xmm12
 	xor	eax,ebx
@@ -350,7 +350,7 @@ DB	102,15,56,220,209
 	mov	esi,ecx
 	add	ebx,DWORD[52+rsp]
 	movups	xmm1,XMMWORD[48+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pxor	xmm11,xmm12
 	xor	edx,ebp
 	rol	ecx,5
@@ -380,16 +380,16 @@ DB	102,15,56,220,208
 	cmp	r8d,11
 	jb	NEAR $L$aesenclast1
 	movups	xmm0,XMMWORD[64+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast1
 	movups	xmm0,XMMWORD[96+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast1:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+r15]
 	por	xmm11,xmm12
 	xor	edi,edx
@@ -421,7 +421,7 @@ DB	102,15,56,221,209
 	movups	XMMWORD[r13*1+r12],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	and	edi,eax
 	movdqa	xmm12,xmm3
 	xor	eax,ebx
@@ -447,7 +447,7 @@ DB	102,15,56,220,208
 	mov	edi,ecx
 	add	ebx,DWORD[8+rsp]
 	movups	xmm0,XMMWORD[((-64))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	por	xmm4,xmm13
 	xor	edx,ebp
 	rol	ecx,5
@@ -467,7 +467,7 @@ DB	102,15,56,220,209
 	pxor	xmm5,xmm9
 	add	ebp,DWORD[16+rsp]
 	movups	xmm1,XMMWORD[((-48))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	esi,ecx
 	punpcklqdq	xmm3,xmm4
 	mov	edi,eax
@@ -498,7 +498,7 @@ DB	102,15,56,220,208
 	rol	edx,5
 	add	ecx,esi
 	movups	xmm0,XMMWORD[((-32))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	edi,eax
 	ror	ebp,7
 	por	xmm5,xmm3
@@ -528,7 +528,7 @@ DB	102,15,56,220,209
 	pxor	xmm6,xmm12
 	add	ebp,DWORD[36+rsp]
 	movups	xmm1,XMMWORD[((-16))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	edi,ecx
 	mov	esi,eax
 	rol	eax,5
@@ -556,7 +556,7 @@ DB	102,15,56,220,208
 	rol	edx,5
 	add	ecx,edi
 	movups	xmm0,XMMWORD[r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	esi,eax
 	ror	ebp,7
 	add	ecx,edx
@@ -586,7 +586,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	add	ebp,DWORD[56+rsp]
 	movups	xmm1,XMMWORD[16+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pslld	xmm7,2
 	xor	esi,ecx
 	mov	edi,eax
@@ -615,7 +615,7 @@ DB	102,15,56,220,208
 	pxor	xmm8,xmm9
 	add	ecx,esi
 	movups	xmm0,XMMWORD[32+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	edi,eax
 	movdqa	xmm13,xmm12
 	ror	ebp,7
@@ -645,7 +645,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	add	ebp,DWORD[12+rsp]
 	movups	xmm1,XMMWORD[48+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pshufd	xmm12,xmm7,238
 	xor	edi,ecx
 	mov	esi,eax
@@ -677,16 +677,16 @@ DB	102,15,56,220,208
 	cmp	r8d,11
 	jb	NEAR $L$aesenclast2
 	movups	xmm0,XMMWORD[64+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast2
 	movups	xmm0,XMMWORD[96+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast2:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+r15]
 	xor	esi,eax
 	movdqa	XMMWORD[rsp],xmm13
@@ -720,7 +720,7 @@ DB	102,15,56,221,209
 	movups	XMMWORD[16+r12*1+r13],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	and	esi,ecx
 	xor	ecx,edx
 	ror	ebx,7
@@ -747,7 +747,7 @@ DB	102,15,56,220,208
 	rol	ebp,5
 	add	edx,edi
 	movups	xmm0,XMMWORD[((-64))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	esi,eax
 	pslld	xmm10,2
 	xor	eax,ebx
@@ -771,7 +771,7 @@ DB	102,15,56,220,209
 	xor	ebp,eax
 	ror	edx,7
 	movups	xmm1,XMMWORD[((-48))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	mov	esi,ecx
 	xor	edi,ebp
 	rol	ecx,5
@@ -798,7 +798,7 @@ DB	102,15,56,220,208
 	add	eax,ebx
 	add	ebp,DWORD[52+rsp]
 	movups	xmm0,XMMWORD[((-32))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	and	edi,ecx
 	xor	ecx,edx
 	ror	ebx,7
@@ -824,7 +824,7 @@ DB	102,15,56,220,209
 	pshufd	xmm12,xmm10,238
 	add	edx,esi
 	movups	xmm1,XMMWORD[((-16))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	edi,eax
 	xor	eax,ebx
 	add	edx,ebp
@@ -845,7 +845,7 @@ DB	102,15,56,220,208
 	xor	ebp,eax
 	ror	edx,7
 	movups	xmm0,XMMWORD[r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	punpcklqdq	xmm12,xmm11
 	mov	edi,ecx
 	xor	esi,ebp
@@ -875,7 +875,7 @@ DB	102,15,56,220,209
 	psrld	xmm12,30
 	add	ebp,DWORD[8+rsp]
 	movups	xmm1,XMMWORD[16+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	and	esi,ecx
 	xor	ecx,edx
 	por	xmm4,xmm12
@@ -897,7 +897,7 @@ DB	102,15,56,220,208
 	rol	ebp,5
 	add	edx,edi
 	movups	xmm0,XMMWORD[32+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	esi,eax
 	xor	eax,ebx
 	add	edx,ebp
@@ -923,7 +923,7 @@ DB	102,15,56,220,209
 	xor	ebp,eax
 	ror	edx,7
 	movups	xmm1,XMMWORD[48+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm13,xmm5
 	mov	esi,ecx
 	xor	edi,ebp
@@ -952,16 +952,16 @@ DB	102,15,56,220,208
 	cmp	r8d,11
 	jb	NEAR $L$aesenclast3
 	movups	xmm0,XMMWORD[64+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast3
 	movups	xmm0,XMMWORD[96+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast3:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+r15]
 	and	edi,ecx
 	xor	ecx,edx
@@ -989,7 +989,7 @@ DB	102,15,56,221,209
 	movups	XMMWORD[32+r12*1+r13],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm13,xmm12
 	xor	edi,eax
 	paddd	xmm12,xmm5
@@ -1017,7 +1017,7 @@ DB	102,15,56,220,208
 	por	xmm6,xmm3
 	ror	edx,7
 	movups	xmm0,XMMWORD[((-64))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	mov	edi,ecx
 	xor	esi,ebp
 	rol	ecx,5
@@ -1039,7 +1039,7 @@ DB	102,15,56,220,209
 	pxor	xmm7,xmm11
 	add	ebp,DWORD[48+rsp]
 	movups	xmm1,XMMWORD[((-48))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	esi,ecx
 	punpcklqdq	xmm12,xmm6
 	mov	edi,eax
@@ -1070,7 +1070,7 @@ DB	102,15,56,220,208
 	rol	edx,5
 	add	ecx,esi
 	movups	xmm0,XMMWORD[((-32))+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	edi,eax
 	ror	ebp,7
 	por	xmm7,xmm12
@@ -1095,7 +1095,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	add	ebp,DWORD[4+rsp]
 	movups	xmm1,XMMWORD[((-16))+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	edi,ecx
 	mov	esi,eax
 	rol	eax,5
@@ -1117,7 +1117,7 @@ DB	102,15,56,220,208
 	rol	edx,5
 	add	ecx,edi
 	movups	xmm0,XMMWORD[r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	esi,eax
 	ror	ebp,7
 	add	ecx,edx
@@ -1153,7 +1153,7 @@ DB	102,15,56,0,235
 	add	eax,ebx
 	add	ebp,DWORD[24+rsp]
 	movups	xmm1,XMMWORD[16+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	esi,ecx
 	mov	edi,eax
 	rol	eax,5
@@ -1176,7 +1176,7 @@ DB	102,15,56,0,243
 	rol	edx,5
 	add	ecx,esi
 	movups	xmm0,XMMWORD[32+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	edi,eax
 	ror	ebp,7
 	paddd	xmm5,xmm13
@@ -1201,7 +1201,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	add	ebp,DWORD[44+rsp]
 	movups	xmm1,XMMWORD[48+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	edi,ecx
 	mov	esi,eax
 	rol	eax,5
@@ -1228,16 +1228,16 @@ DB	102,15,56,0,251
 	cmp	r8d,11
 	jb	NEAR $L$aesenclast4
 	movups	xmm0,XMMWORD[64+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast4
 	movups	xmm0,XMMWORD[96+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast4:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+r15]
 	xor	esi,eax
 	ror	ebp,7
@@ -1296,7 +1296,7 @@ $L$done_ssse3:
 	add	eax,ebx
 	add	ebp,DWORD[24+rsp]
 	movups	xmm1,XMMWORD[16+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	esi,ecx
 	mov	edi,eax
 	rol	eax,5
@@ -1318,7 +1318,7 @@ DB	102,15,56,220,208
 	rol	edx,5
 	add	ecx,esi
 	movups	xmm0,XMMWORD[32+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	xor	edi,eax
 	ror	ebp,7
 	add	ecx,edx
@@ -1340,7 +1340,7 @@ DB	102,15,56,220,209
 	add	eax,ebx
 	add	ebp,DWORD[44+rsp]
 	movups	xmm1,XMMWORD[48+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	xor	edi,ecx
 	mov	esi,eax
 	rol	eax,5
@@ -1364,16 +1364,16 @@ DB	102,15,56,220,208
 	cmp	r8d,11
 	jb	NEAR $L$aesenclast5
 	movups	xmm0,XMMWORD[64+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast5
 	movups	xmm0,XMMWORD[96+r15]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+r15]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast5:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+r15]
 	xor	esi,eax
 	ror	ebp,7
@@ -2796,13 +2796,13 @@ K_XX_XX:
 	DD	0x8f1bbcdc,0x8f1bbcdc,0x8f1bbcdc,0x8f1bbcdc
 	DD	0xca62c1d6,0xca62c1d6,0xca62c1d6,0xca62c1d6
 	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
-DB	0xf,0xe,0xd,0xc,0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x2,0x1,0x0
+	DB	0xf,0xe,0xd,0xc,0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x2,0x1,0x0
 
-DB	65,69,83,78,73,45,67,66,67,43,83,72,65,49,32,115
-DB	116,105,116,99,104,32,102,111,114,32,120,56,54,95,54,52
-DB	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
-DB	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
-DB	114,103,62,0
+	DB	65,69,83,78,73,45,67,66,67,43,83,72,65,49,32,115
+	DB	116,105,116,99,104,32,102,111,114,32,120,56,54,95,54,52
+	DB	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
+	DB	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
+	DB	114,103,62,0
 ALIGN	64
 
 ALIGN	32
@@ -2854,14 +2854,14 @@ $L$oop_shaext:
 	xorps	xmm14,xmm15
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqu	xmm3,XMMWORD[r10]
 	movdqa	xmm12,xmm9
 DB	102,15,56,0,223
 	movdqu	xmm4,XMMWORD[16+r10]
 	movdqa	xmm11,xmm8
 	movups	xmm0,XMMWORD[((-64))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 DB	102,15,56,0,231
 
 	paddd	xmm9,xmm3
@@ -2869,253 +2869,253 @@ DB	102,15,56,0,231
 	lea	r10,[64+r10]
 	pxor	xmm3,xmm12
 	movups	xmm1,XMMWORD[((-48))+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pxor	xmm3,xmm12
 	movdqa	xmm10,xmm8
 DB	102,15,56,0,239
-DB	69,15,58,204,193,0
-DB	68,15,56,200,212
+	DB	69,15,58,204,193,0
+	DB	68,15,56,200,212
 	movups	xmm0,XMMWORD[((-32))+rcx]
-DB	102,15,56,220,209
-DB	15,56,201,220
+	DB	102,15,56,220,209
+	DB	15,56,201,220
 	movdqu	xmm6,XMMWORD[((-16))+r10]
 	movdqa	xmm9,xmm8
 DB	102,15,56,0,247
 	movups	xmm1,XMMWORD[((-16))+rcx]
-DB	102,15,56,220,208
-DB	69,15,58,204,194,0
-DB	68,15,56,200,205
+	DB	102,15,56,220,208
+	DB	69,15,58,204,194,0
+	DB	68,15,56,200,205
 	pxor	xmm3,xmm5
-DB	15,56,201,229
+	DB	15,56,201,229
 	movups	xmm0,XMMWORD[rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,0
-DB	68,15,56,200,214
+	DB	69,15,58,204,193,0
+	DB	68,15,56,200,214
 	movups	xmm1,XMMWORD[16+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,222
+	DB	102,15,56,220,208
+	DB	15,56,202,222
 	pxor	xmm4,xmm6
-DB	15,56,201,238
+	DB	15,56,201,238
 	movups	xmm0,XMMWORD[32+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,0
-DB	68,15,56,200,203
+	DB	69,15,58,204,194,0
+	DB	68,15,56,200,203
 	movups	xmm1,XMMWORD[48+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,227
+	DB	102,15,56,220,208
+	DB	15,56,202,227
 	pxor	xmm5,xmm3
-DB	15,56,201,243
+	DB	15,56,201,243
 	cmp	r11d,11
 	jb	NEAR $L$aesenclast11
 	movups	xmm0,XMMWORD[64+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast11
 	movups	xmm0,XMMWORD[96+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast11:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+rcx]
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,0
-DB	68,15,56,200,212
+	DB	69,15,58,204,193,0
+	DB	68,15,56,200,212
 	movups	xmm14,XMMWORD[16+rdi]
 	xorps	xmm14,xmm15
 	movups	XMMWORD[rdi*1+rsi],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,236
+	DB	102,15,56,220,208
+	DB	15,56,202,236
 	pxor	xmm6,xmm4
-DB	15,56,201,220
+	DB	15,56,201,220
 	movups	xmm0,XMMWORD[((-64))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,1
-DB	68,15,56,200,205
+	DB	69,15,58,204,194,1
+	DB	68,15,56,200,205
 	movups	xmm1,XMMWORD[((-48))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,245
+	DB	102,15,56,220,208
+	DB	15,56,202,245
 	pxor	xmm3,xmm5
-DB	15,56,201,229
+	DB	15,56,201,229
 	movups	xmm0,XMMWORD[((-32))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,1
-DB	68,15,56,200,214
+	DB	69,15,58,204,193,1
+	DB	68,15,56,200,214
 	movups	xmm1,XMMWORD[((-16))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,222
+	DB	102,15,56,220,208
+	DB	15,56,202,222
 	pxor	xmm4,xmm6
-DB	15,56,201,238
+	DB	15,56,201,238
 	movups	xmm0,XMMWORD[rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,1
-DB	68,15,56,200,203
+	DB	69,15,58,204,194,1
+	DB	68,15,56,200,203
 	movups	xmm1,XMMWORD[16+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,227
+	DB	102,15,56,220,208
+	DB	15,56,202,227
 	pxor	xmm5,xmm3
-DB	15,56,201,243
+	DB	15,56,201,243
 	movups	xmm0,XMMWORD[32+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,1
-DB	68,15,56,200,212
+	DB	69,15,58,204,193,1
+	DB	68,15,56,200,212
 	movups	xmm1,XMMWORD[48+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,236
+	DB	102,15,56,220,208
+	DB	15,56,202,236
 	pxor	xmm6,xmm4
-DB	15,56,201,220
+	DB	15,56,201,220
 	cmp	r11d,11
 	jb	NEAR $L$aesenclast12
 	movups	xmm0,XMMWORD[64+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast12
 	movups	xmm0,XMMWORD[96+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast12:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+rcx]
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,1
-DB	68,15,56,200,205
+	DB	69,15,58,204,194,1
+	DB	68,15,56,200,205
 	movups	xmm14,XMMWORD[32+rdi]
 	xorps	xmm14,xmm15
 	movups	XMMWORD[16+rdi*1+rsi],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,245
+	DB	102,15,56,220,208
+	DB	15,56,202,245
 	pxor	xmm3,xmm5
-DB	15,56,201,229
+	DB	15,56,201,229
 	movups	xmm0,XMMWORD[((-64))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,2
-DB	68,15,56,200,214
+	DB	69,15,58,204,193,2
+	DB	68,15,56,200,214
 	movups	xmm1,XMMWORD[((-48))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,222
+	DB	102,15,56,220,208
+	DB	15,56,202,222
 	pxor	xmm4,xmm6
-DB	15,56,201,238
+	DB	15,56,201,238
 	movups	xmm0,XMMWORD[((-32))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,2
-DB	68,15,56,200,203
+	DB	69,15,58,204,194,2
+	DB	68,15,56,200,203
 	movups	xmm1,XMMWORD[((-16))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,227
+	DB	102,15,56,220,208
+	DB	15,56,202,227
 	pxor	xmm5,xmm3
-DB	15,56,201,243
+	DB	15,56,201,243
 	movups	xmm0,XMMWORD[rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,2
-DB	68,15,56,200,212
+	DB	69,15,58,204,193,2
+	DB	68,15,56,200,212
 	movups	xmm1,XMMWORD[16+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,236
+	DB	102,15,56,220,208
+	DB	15,56,202,236
 	pxor	xmm6,xmm4
-DB	15,56,201,220
+	DB	15,56,201,220
 	movups	xmm0,XMMWORD[32+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,2
-DB	68,15,56,200,205
+	DB	69,15,58,204,194,2
+	DB	68,15,56,200,205
 	movups	xmm1,XMMWORD[48+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,245
+	DB	102,15,56,220,208
+	DB	15,56,202,245
 	pxor	xmm3,xmm5
-DB	15,56,201,229
+	DB	15,56,201,229
 	cmp	r11d,11
 	jb	NEAR $L$aesenclast13
 	movups	xmm0,XMMWORD[64+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast13
 	movups	xmm0,XMMWORD[96+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast13:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+rcx]
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,2
-DB	68,15,56,200,214
+	DB	69,15,58,204,193,2
+	DB	68,15,56,200,214
 	movups	xmm14,XMMWORD[48+rdi]
 	xorps	xmm14,xmm15
 	movups	XMMWORD[32+rdi*1+rsi],xmm2
 	xorps	xmm2,xmm14
 	movups	xmm1,XMMWORD[((-80))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,222
+	DB	102,15,56,220,208
+	DB	15,56,202,222
 	pxor	xmm4,xmm6
-DB	15,56,201,238
+	DB	15,56,201,238
 	movups	xmm0,XMMWORD[((-64))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,3
-DB	68,15,56,200,203
+	DB	69,15,58,204,194,3
+	DB	68,15,56,200,203
 	movups	xmm1,XMMWORD[((-48))+rcx]
-DB	102,15,56,220,208
-DB	15,56,202,227
+	DB	102,15,56,220,208
+	DB	15,56,202,227
 	pxor	xmm5,xmm3
-DB	15,56,201,243
+	DB	15,56,201,243
 	movups	xmm0,XMMWORD[((-32))+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,3
-DB	68,15,56,200,212
-DB	15,56,202,236
+	DB	69,15,58,204,193,3
+	DB	68,15,56,200,212
+	DB	15,56,202,236
 	pxor	xmm6,xmm4
 	movups	xmm1,XMMWORD[((-16))+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,3
-DB	68,15,56,200,205
-DB	15,56,202,245
+	DB	69,15,58,204,194,3
+	DB	68,15,56,200,205
+	DB	15,56,202,245
 	movups	xmm0,XMMWORD[rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqa	xmm5,xmm12
 	movdqa	xmm10,xmm8
-DB	69,15,58,204,193,3
-DB	68,15,56,200,214
+	DB	69,15,58,204,193,3
+	DB	68,15,56,200,214
 	movups	xmm1,XMMWORD[16+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	movdqa	xmm9,xmm8
-DB	69,15,58,204,194,3
-DB	68,15,56,200,205
+	DB	69,15,58,204,194,3
+	DB	68,15,56,200,205
 	movups	xmm0,XMMWORD[32+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[48+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	cmp	r11d,11
 	jb	NEAR $L$aesenclast14
 	movups	xmm0,XMMWORD[64+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[80+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	je	NEAR $L$aesenclast14
 	movups	xmm0,XMMWORD[96+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movups	xmm1,XMMWORD[112+rcx]
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 $L$aesenclast14:
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[((16-112))+rcx]
 	dec	rdx
 
@@ -3263,15 +3263,15 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_aesni_cbc_sha1_enc_ssse3:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_ssse3 wrt ..imagebase,$L$epilogue_ssse3 wrt ..imagebase
 $L$SEH_info_aesni_cbc_sha1_enc_avx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
 $L$SEH_info_aesni_cbc_sha1_enc_shaext:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_shaext wrt ..imagebase,$L$epilogue_shaext wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha256-x86_64.asm b/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha256-x86_64.asm
index ed2ba2db4..57f97c97c 100644
--- a/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha256-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/cipher_extra/aesni-sha256-x86_64.asm
@@ -87,11 +87,11 @@ K256:
 	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
 	DD	0,0,0,0,0,0,0,0,-1,-1,-1,-1
 	DD	0,0,0,0,0,0,0,0
-DB	65,69,83,78,73,45,67,66,67,43,83,72,65,50,53,54
-DB	32,115,116,105,116,99,104,32,102,111,114,32,120,56,54,95
-DB	54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98
-DB	121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108
-DB	46,111,114,103,62,0
+	DB	65,69,83,78,73,45,67,66,67,43,83,72,65,50,53,54
+	DB	32,115,116,105,116,99,104,32,102,111,114,32,120,56,54,95
+	DB	54,52,44,32,67,82,89,80,84,79,71,65,77,83,32,98
+	DB	121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108
+	DB	46,111,114,103,62,0
 ALIGN	64
 
 ALIGN	64
@@ -4245,11 +4245,11 @@ DB	102,68,15,56,0,219
 	xorps	xmm6,xmm14
 	movups	xmm5,XMMWORD[((-80))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movups	xmm4,XMMWORD[((-64))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((32-128))+rax]
 	paddd	xmm0,xmm11
@@ -4257,48 +4257,48 @@ DB	102,68,15,56,0,227
 	lea	r10,[64+r10]
 	movups	xmm5,XMMWORD[((-48))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movups	xmm4,XMMWORD[((-32))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((64-128))+rax]
 	paddd	xmm0,xmm12
 DB	102,68,15,56,0,235
-DB	69,15,56,204,211
+	DB	69,15,56,204,211
 	movups	xmm5,XMMWORD[((-16))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm13
 DB	102,65,15,58,15,220,4
 	paddd	xmm10,xmm3
 	movups	xmm4,XMMWORD[rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((96-128))+rax]
 	paddd	xmm0,xmm13
-DB	69,15,56,205,213
-DB	69,15,56,204,220
+	DB	69,15,56,205,213
+	DB	69,15,56,204,220
 	movups	xmm5,XMMWORD[16+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movups	xmm4,XMMWORD[32+rcx]
 	aesenc	xmm6,xmm5
 	movdqa	xmm3,xmm10
 DB	102,65,15,58,15,221,4
 	paddd	xmm11,xmm3
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((128-128))+rax]
 	paddd	xmm0,xmm10
-DB	69,15,56,205,218
-DB	69,15,56,204,229
+	DB	69,15,56,205,218
+	DB	69,15,56,204,229
 	movups	xmm5,XMMWORD[48+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm11
 DB	102,65,15,58,15,218,4
@@ -4318,7 +4318,7 @@ $L$aesenclast1:
 	aesenclast	xmm6,xmm5
 	movups	xmm4,XMMWORD[((16-112))+rcx]
 	nop
-DB	15,56,203,202
+	DB	15,56,203,202
 	movups	xmm14,XMMWORD[16+rdi]
 	xorps	xmm14,xmm15
 	movups	XMMWORD[rdi*1+rsi],xmm6
@@ -4327,53 +4327,53 @@ DB	15,56,203,202
 	aesenc	xmm6,xmm4
 	movdqa	xmm0,XMMWORD[((160-128))+rax]
 	paddd	xmm0,xmm11
-DB	69,15,56,205,227
-DB	69,15,56,204,234
+	DB	69,15,56,205,227
+	DB	69,15,56,204,234
 	movups	xmm4,XMMWORD[((-64))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm12
 DB	102,65,15,58,15,219,4
 	paddd	xmm13,xmm3
 	movups	xmm5,XMMWORD[((-48))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((192-128))+rax]
 	paddd	xmm0,xmm12
-DB	69,15,56,205,236
-DB	69,15,56,204,211
+	DB	69,15,56,205,236
+	DB	69,15,56,204,211
 	movups	xmm4,XMMWORD[((-32))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm13
 DB	102,65,15,58,15,220,4
 	paddd	xmm10,xmm3
 	movups	xmm5,XMMWORD[((-16))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((224-128))+rax]
 	paddd	xmm0,xmm13
-DB	69,15,56,205,213
-DB	69,15,56,204,220
+	DB	69,15,56,205,213
+	DB	69,15,56,204,220
 	movups	xmm4,XMMWORD[rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm10
 DB	102,65,15,58,15,221,4
 	paddd	xmm11,xmm3
 	movups	xmm5,XMMWORD[16+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((256-128))+rax]
 	paddd	xmm0,xmm10
-DB	69,15,56,205,218
-DB	69,15,56,204,229
+	DB	69,15,56,205,218
+	DB	69,15,56,204,229
 	movups	xmm4,XMMWORD[32+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm11
 DB	102,65,15,58,15,218,4
@@ -4395,7 +4395,7 @@ $L$aesenclast2:
 	aesenclast	xmm6,xmm5
 	movups	xmm4,XMMWORD[((16-112))+rcx]
 	nop
-DB	15,56,203,202
+	DB	15,56,203,202
 	movups	xmm14,XMMWORD[32+rdi]
 	xorps	xmm14,xmm15
 	movups	XMMWORD[16+rdi*1+rsi],xmm6
@@ -4404,64 +4404,64 @@ DB	15,56,203,202
 	aesenc	xmm6,xmm4
 	movdqa	xmm0,XMMWORD[((288-128))+rax]
 	paddd	xmm0,xmm11
-DB	69,15,56,205,227
-DB	69,15,56,204,234
+	DB	69,15,56,205,227
+	DB	69,15,56,204,234
 	movups	xmm4,XMMWORD[((-64))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm12
 DB	102,65,15,58,15,219,4
 	paddd	xmm13,xmm3
 	movups	xmm5,XMMWORD[((-48))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((320-128))+rax]
 	paddd	xmm0,xmm12
-DB	69,15,56,205,236
-DB	69,15,56,204,211
+	DB	69,15,56,205,236
+	DB	69,15,56,204,211
 	movups	xmm4,XMMWORD[((-32))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm13
 DB	102,65,15,58,15,220,4
 	paddd	xmm10,xmm3
 	movups	xmm5,XMMWORD[((-16))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((352-128))+rax]
 	paddd	xmm0,xmm13
-DB	69,15,56,205,213
-DB	69,15,56,204,220
+	DB	69,15,56,205,213
+	DB	69,15,56,204,220
 	movups	xmm4,XMMWORD[rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm10
 DB	102,65,15,58,15,221,4
 	paddd	xmm11,xmm3
 	movups	xmm5,XMMWORD[16+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((384-128))+rax]
 	paddd	xmm0,xmm10
-DB	69,15,56,205,218
-DB	69,15,56,204,229
+	DB	69,15,56,205,218
+	DB	69,15,56,204,229
 	movups	xmm4,XMMWORD[32+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm11
 DB	102,65,15,58,15,218,4
 	paddd	xmm12,xmm3
 	movups	xmm5,XMMWORD[48+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((416-128))+rax]
 	paddd	xmm0,xmm11
-DB	69,15,56,205,227
-DB	69,15,56,204,234
+	DB	69,15,56,205,227
+	DB	69,15,56,204,234
 	cmp	r11d,11
 	jb	NEAR $L$aesenclast3
 	movups	xmm4,XMMWORD[64+rcx]
@@ -4477,7 +4477,7 @@ $L$aesenclast3:
 	aesenclast	xmm6,xmm5
 	movups	xmm4,XMMWORD[((16-112))+rcx]
 	nop
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm3,xmm12
 DB	102,65,15,58,15,219,4
@@ -4490,19 +4490,19 @@ DB	102,65,15,58,15,219,4
 	aesenc	xmm6,xmm4
 	movups	xmm4,XMMWORD[((-64))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((448-128))+rax]
 	paddd	xmm0,xmm12
-DB	69,15,56,205,236
+	DB	69,15,56,205,236
 	movdqa	xmm3,xmm7
 	movups	xmm5,XMMWORD[((-48))+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movups	xmm4,XMMWORD[((-32))+rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((480-128))+rax]
 	paddd	xmm0,xmm13
@@ -4510,11 +4510,11 @@ DB	15,56,203,202
 	aesenc	xmm6,xmm4
 	movups	xmm4,XMMWORD[rcx]
 	aesenc	xmm6,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movups	xmm5,XMMWORD[16+rcx]
 	aesenc	xmm6,xmm4
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movups	xmm4,XMMWORD[32+rcx]
 	aesenc	xmm6,xmm5
@@ -4698,20 +4698,20 @@ section	.pdata rdata align=4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_aesni_cbc_sha256_enc_xop:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_xop wrt ..imagebase,$L$epilogue_xop wrt ..imagebase
 
 $L$SEH_info_aesni_cbc_sha256_enc_avx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
 $L$SEH_info_aesni_cbc_sha256_enc_avx2:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_avx2 wrt ..imagebase,$L$epilogue_avx2 wrt ..imagebase
 $L$SEH_info_aesni_cbc_sha256_enc_shaext:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_shaext wrt ..imagebase,$L$epilogue_shaext wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.asm b/generated-src/win-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.asm
index dbb887e0e..67fd8e79d 100644
--- a/generated-src/win-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.asm
+++ b/generated-src/win-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.asm
@@ -18,14 +18,14 @@ chacha20_poly1305_constants:
 
 ALIGN	64
 $L$chacha20_consts:
-DB	'e','x','p','a','n','d',' ','3','2','-','b','y','t','e',' ','k'
-DB	'e','x','p','a','n','d',' ','3','2','-','b','y','t','e',' ','k'
+	DB	'e','x','p','a','n','d',' ','3','2','-','b','y','t','e',' ','k'
+	DB	'e','x','p','a','n','d',' ','3','2','-','b','y','t','e',' ','k'
 $L$rol8:
-DB	3,0,1,2,7,4,5,6,11,8,9,10,15,12,13,14
-DB	3,0,1,2,7,4,5,6,11,8,9,10,15,12,13,14
+	DB	3,0,1,2,7,4,5,6,11,8,9,10,15,12,13,14
+	DB	3,0,1,2,7,4,5,6,11,8,9,10,15,12,13,14
 $L$rol16:
-DB	2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13
-DB	2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13
+	DB	2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13
+	DB	2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13
 $L$avx2_init:
 	DD	0,0,0,0
 $L$sse_inc:
@@ -37,22 +37,22 @@ $L$clamp:
 	DQ	0xFFFFFFFFFFFFFFFF,0xFFFFFFFFFFFFFFFF
 ALIGN	16
 $L$and_masks:
-DB	0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00
-DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
+	DB	0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00
+	DB	0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
 
 
 ALIGN	64
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.asm
index e79feb818..6ab58129f 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.asm
@@ -906,19 +906,19 @@ $L$gcm_enc_abort:
 $L$SEH_end_aesni_gcm_encrypt:
 ALIGN	64
 $L$bswap_mask:
-DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+	DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
 $L$poly:
-DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xc2
+	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xc2
 $L$one_msb:
-DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
+	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
 $L$two_lsb:
-DB	2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+	DB	2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 $L$one_lsb:
-DB	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
-DB	65,69,83,45,78,73,32,71,67,77,32,109,111,100,117,108
-DB	101,32,102,111,114,32,120,56,54,95,54,52,44,32,67,82
-DB	89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112
-DB	114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
+	DB	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+	DB	65,69,83,45,78,73,32,71,67,77,32,109,111,100,117,108
+	DB	101,32,102,111,114,32,120,56,54,95,54,52,44,32,67,82
+	DB	89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112
+	DB	114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
 ALIGN	64
 EXTERN	__imp_RtlVirtualUnwind
 
@@ -1025,11 +1025,11 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_gcm_dec_info:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	gcm_se_handler wrt ..imagebase
 	DD	$L$gcm_dec_body wrt ..imagebase,$L$gcm_dec_abort wrt ..imagebase
 $L$SEH_gcm_enc_info:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	gcm_se_handler wrt ..imagebase
 	DD	$L$gcm_enc_body wrt ..imagebase,$L$gcm_enc_abort wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/aesni-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/aesni-x86_64.asm
index 76b131cf5..016910a3a 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/aesni-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/aesni-x86_64.asm
@@ -29,12 +29,12 @@ EXTERN	BORINGSSL_function_hit
 	lea	r8,[32+r8]
 	xorps	xmm2,xmm0
 $L$oop_enc1_1:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[r8]
 	lea	r8,[16+r8]
 	jnz	NEAR $L$oop_enc1_1
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	pxor	xmm0,xmm0
 	pxor	xmm1,xmm1
 	movups	XMMWORD[rdx],xmm2
@@ -55,12 +55,12 @@ aes_hw_decrypt:
 	lea	r8,[32+r8]
 	xorps	xmm2,xmm0
 $L$oop_dec1_2:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[r8]
 	lea	r8,[16+r8]
 	jnz	NEAR $L$oop_dec1_2
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	pxor	xmm0,xmm0
 	pxor	xmm1,xmm1
 	movups	XMMWORD[rdx],xmm2
@@ -83,19 +83,19 @@ _aesni_encrypt2:
 	add	rax,16
 
 $L$enc_loop2:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,220,208
-DB	102,15,56,220,216
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$enc_loop2
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,221,208
-DB	102,15,56,221,216
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,221,208
+	DB	102,15,56,221,216
 	DB	0F3h,0C3h		;repret
 
 
@@ -114,19 +114,19 @@ _aesni_decrypt2:
 	add	rax,16
 
 $L$dec_loop2:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,222,208
-DB	102,15,56,222,216
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$dec_loop2
 
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,223,208
-DB	102,15,56,223,216
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,223,208
+	DB	102,15,56,223,216
 	DB	0F3h,0C3h		;repret
 
 
@@ -146,23 +146,23 @@ _aesni_encrypt3:
 	add	rax,16
 
 $L$enc_loop3:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$enc_loop3
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,221,208
-DB	102,15,56,221,216
-DB	102,15,56,221,224
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,221,208
+	DB	102,15,56,221,216
+	DB	102,15,56,221,224
 	DB	0F3h,0C3h		;repret
 
 
@@ -182,23 +182,23 @@ _aesni_decrypt3:
 	add	rax,16
 
 $L$dec_loop3:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$dec_loop3
 
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,223,208
-DB	102,15,56,223,216
-DB	102,15,56,223,224
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,223,208
+	DB	102,15,56,223,216
+	DB	102,15,56,223,224
 	DB	0F3h,0C3h		;repret
 
 
@@ -216,31 +216,31 @@ _aesni_encrypt4:
 	movups	xmm0,XMMWORD[32+rcx]
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	0x0f,0x1f,0x00
+	DB	0x0f,0x1f,0x00
 	add	rax,16
 
 $L$enc_loop4:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$enc_loop4
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,221,208
-DB	102,15,56,221,216
-DB	102,15,56,221,224
-DB	102,15,56,221,232
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,221,208
+	DB	102,15,56,221,216
+	DB	102,15,56,221,224
+	DB	102,15,56,221,232
 	DB	0F3h,0C3h		;repret
 
 
@@ -258,31 +258,31 @@ _aesni_decrypt4:
 	movups	xmm0,XMMWORD[32+rcx]
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	0x0f,0x1f,0x00
+	DB	0x0f,0x1f,0x00
 	add	rax,16
 
 $L$dec_loop4:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$dec_loop4
 
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,223,208
-DB	102,15,56,223,216
-DB	102,15,56,223,224
-DB	102,15,56,223,232
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,223,208
+	DB	102,15,56,223,216
+	DB	102,15,56,223,224
+	DB	102,15,56,223,232
 	DB	0F3h,0C3h		;repret
 
 
@@ -296,49 +296,49 @@ _aesni_encrypt6:
 	xorps	xmm2,xmm0
 	pxor	xmm3,xmm0
 	pxor	xmm4,xmm0
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	pxor	xmm5,xmm0
 	pxor	xmm6,xmm0
-DB	102,15,56,220,225
+	DB	102,15,56,220,225
 	pxor	xmm7,xmm0
 	movups	xmm0,XMMWORD[rax*1+rcx]
 	add	rax,16
 	jmp	NEAR $L$enc_loop6_enter
 ALIGN	16
 $L$enc_loop6:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
 $L$enc_loop6_enter:
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
-DB	102,15,56,220,248
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$enc_loop6
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,15,56,221,208
-DB	102,15,56,221,216
-DB	102,15,56,221,224
-DB	102,15,56,221,232
-DB	102,15,56,221,240
-DB	102,15,56,221,248
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,15,56,221,208
+	DB	102,15,56,221,216
+	DB	102,15,56,221,224
+	DB	102,15,56,221,232
+	DB	102,15,56,221,240
+	DB	102,15,56,221,248
 	DB	0F3h,0C3h		;repret
 
 
@@ -352,49 +352,49 @@ _aesni_decrypt6:
 	xorps	xmm2,xmm0
 	pxor	xmm3,xmm0
 	pxor	xmm4,xmm0
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	pxor	xmm5,xmm0
 	pxor	xmm6,xmm0
-DB	102,15,56,222,225
+	DB	102,15,56,222,225
 	pxor	xmm7,xmm0
 	movups	xmm0,XMMWORD[rax*1+rcx]
 	add	rax,16
 	jmp	NEAR $L$dec_loop6_enter
 ALIGN	16
 $L$dec_loop6:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
 $L$dec_loop6_enter:
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$dec_loop6
 
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,15,56,223,208
-DB	102,15,56,223,216
-DB	102,15,56,223,224
-DB	102,15,56,223,232
-DB	102,15,56,223,240
-DB	102,15,56,223,248
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,15,56,223,208
+	DB	102,15,56,223,216
+	DB	102,15,56,223,224
+	DB	102,15,56,223,232
+	DB	102,15,56,223,240
+	DB	102,15,56,223,248
 	DB	0F3h,0C3h		;repret
 
 
@@ -412,55 +412,55 @@ _aesni_encrypt8:
 	pxor	xmm6,xmm0
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	pxor	xmm7,xmm0
 	pxor	xmm8,xmm0
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	pxor	xmm9,xmm0
 	movups	xmm0,XMMWORD[rax*1+rcx]
 	add	rax,16
 	jmp	NEAR $L$enc_loop8_inner
 ALIGN	16
 $L$enc_loop8:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 $L$enc_loop8_inner:
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 $L$enc_loop8_enter:
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$enc_loop8
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
-DB	102,15,56,221,208
-DB	102,15,56,221,216
-DB	102,15,56,221,224
-DB	102,15,56,221,232
-DB	102,15,56,221,240
-DB	102,15,56,221,248
-DB	102,68,15,56,221,192
-DB	102,68,15,56,221,200
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
+	DB	102,15,56,221,208
+	DB	102,15,56,221,216
+	DB	102,15,56,221,224
+	DB	102,15,56,221,232
+	DB	102,15,56,221,240
+	DB	102,15,56,221,248
+	DB	102,68,15,56,221,192
+	DB	102,68,15,56,221,200
 	DB	0F3h,0C3h		;repret
 
 
@@ -478,55 +478,55 @@ _aesni_decrypt8:
 	pxor	xmm6,xmm0
 	lea	rcx,[32+rax*1+rcx]
 	neg	rax
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	pxor	xmm7,xmm0
 	pxor	xmm8,xmm0
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	pxor	xmm9,xmm0
 	movups	xmm0,XMMWORD[rax*1+rcx]
 	add	rax,16
 	jmp	NEAR $L$dec_loop8_inner
 ALIGN	16
 $L$dec_loop8:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
 $L$dec_loop8_inner:
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 $L$dec_loop8_enter:
 	movups	xmm1,XMMWORD[rax*1+rcx]
 	add	rax,32
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((-16))+rax*1+rcx]
 	jnz	NEAR $L$dec_loop8
 
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
-DB	102,15,56,223,208
-DB	102,15,56,223,216
-DB	102,15,56,223,224
-DB	102,15,56,223,232
-DB	102,15,56,223,240
-DB	102,15,56,223,248
-DB	102,68,15,56,223,192
-DB	102,68,15,56,223,200
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
+	DB	102,15,56,223,208
+	DB	102,15,56,223,216
+	DB	102,15,56,223,224
+	DB	102,15,56,223,232
+	DB	102,15,56,223,240
+	DB	102,15,56,223,248
+	DB	102,68,15,56,223,192
+	DB	102,68,15,56,223,200
 	DB	0F3h,0C3h		;repret
 
 
@@ -653,12 +653,12 @@ $L$ecb_enc_one:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_enc1_3:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_enc1_3
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	XMMWORD[rsi],xmm2
 	jmp	NEAR $L$ecb_ret
 ALIGN	16
@@ -814,12 +814,12 @@ $L$ecb_dec_one:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_4:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_4
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	movups	XMMWORD[rsi],xmm2
 	pxor	xmm2,xmm2
 	jmp	NEAR $L$ecb_ret
@@ -935,12 +935,12 @@ $L$SEH_begin_aes_hw_ctr32_encrypt_blocks:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_enc1_5:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	edx
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_enc1_5
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	pxor	xmm0,xmm0
 	pxor	xmm1,xmm1
 	xorps	xmm2,xmm3
@@ -1054,39 +1054,39 @@ ALIGN	16
 $L$ctr32_loop6:
 	add	r8d,6
 	movups	xmm0,XMMWORD[((-48))+r10*1+rcx]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	mov	eax,r8d
 	xor	eax,ebp
-DB	102,15,56,220,217
-DB	0x0f,0x38,0xf1,0x44,0x24,12
+	DB	102,15,56,220,217
+	DB	0x0f,0x38,0xf1,0x44,0x24,12
 	lea	eax,[1+r8]
-DB	102,15,56,220,225
+	DB	102,15,56,220,225
 	xor	eax,ebp
-DB	0x0f,0x38,0xf1,0x44,0x24,28
-DB	102,15,56,220,233
+	DB	0x0f,0x38,0xf1,0x44,0x24,28
+	DB	102,15,56,220,233
 	lea	eax,[2+r8]
 	xor	eax,ebp
-DB	102,15,56,220,241
-DB	0x0f,0x38,0xf1,0x44,0x24,44
+	DB	102,15,56,220,241
+	DB	0x0f,0x38,0xf1,0x44,0x24,44
 	lea	eax,[3+r8]
-DB	102,15,56,220,249
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[((-32))+r10*1+rcx]
 	xor	eax,ebp
 
-DB	102,15,56,220,208
-DB	0x0f,0x38,0xf1,0x44,0x24,60
+	DB	102,15,56,220,208
+	DB	0x0f,0x38,0xf1,0x44,0x24,60
 	lea	eax,[4+r8]
-DB	102,15,56,220,216
+	DB	102,15,56,220,216
 	xor	eax,ebp
-DB	0x0f,0x38,0xf1,0x44,0x24,76
-DB	102,15,56,220,224
+	DB	0x0f,0x38,0xf1,0x44,0x24,76
+	DB	102,15,56,220,224
 	lea	eax,[5+r8]
 	xor	eax,ebp
-DB	102,15,56,220,232
-DB	0x0f,0x38,0xf1,0x44,0x24,92
+	DB	102,15,56,220,232
+	DB	0x0f,0x38,0xf1,0x44,0x24,92
 	mov	rax,r10
-DB	102,15,56,220,240
-DB	102,15,56,220,248
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
 	movups	xmm0,XMMWORD[((-16))+r10*1+rcx]
 
 	call	$L$enc_loop6
@@ -1135,163 +1135,163 @@ ALIGN	32
 $L$ctr32_loop8:
 	add	r8d,8
 	movdqa	xmm8,XMMWORD[96+rsp]
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	mov	r9d,r8d
 	movdqa	xmm9,XMMWORD[112+rsp]
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	bswap	r9d
 	movups	xmm0,XMMWORD[((32-128))+rcx]
-DB	102,15,56,220,225
+	DB	102,15,56,220,225
 	xor	r9d,ebp
 	nop
-DB	102,15,56,220,233
+	DB	102,15,56,220,233
 	mov	DWORD[((0+12))+rsp],r9d
 	lea	r9,[1+r8]
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((48-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,208
-DB	102,15,56,220,216
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	0x66,0x90
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	mov	DWORD[((16+12))+rsp],r9d
 	lea	r9,[2+r8]
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((64-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	0x66,0x90
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	mov	DWORD[((32+12))+rsp],r9d
 	lea	r9,[3+r8]
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((80-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,208
-DB	102,15,56,220,216
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	0x66,0x90
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	mov	DWORD[((48+12))+rsp],r9d
 	lea	r9,[4+r8]
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((96-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	0x66,0x90
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	mov	DWORD[((64+12))+rsp],r9d
 	lea	r9,[5+r8]
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((112-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,208
-DB	102,15,56,220,216
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	0x66,0x90
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	mov	DWORD[((80+12))+rsp],r9d
 	lea	r9,[6+r8]
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((128-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 	xor	r9d,ebp
-DB	0x66,0x90
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	0x66,0x90
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	mov	DWORD[((96+12))+rsp],r9d
 	lea	r9,[7+r8]
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((144-128))+rcx]
 	bswap	r9d
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
 	xor	r9d,ebp
 	movdqu	xmm10,XMMWORD[rdi]
-DB	102,15,56,220,232
+	DB	102,15,56,220,232
 	mov	DWORD[((112+12))+rsp],r9d
 	cmp	eax,11
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((160-128))+rcx]
 
 	jb	NEAR $L$ctr32_enc_done
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((176-128))+rcx]
 
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((192-128))+rcx]
 	je	NEAR $L$ctr32_enc_done
 
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movups	xmm1,XMMWORD[((208-128))+rcx]
 
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
-DB	102,15,56,220,248
-DB	102,68,15,56,220,192
-DB	102,68,15,56,220,200
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
+	DB	102,68,15,56,220,192
+	DB	102,68,15,56,220,200
 	movups	xmm0,XMMWORD[((224-128))+rcx]
 	jmp	NEAR $L$ctr32_enc_done
 
@@ -1308,35 +1308,35 @@ $L$ctr32_enc_done:
 	movdqu	xmm15,XMMWORD[80+rdi]
 	pxor	xmm14,xmm0
 	pxor	xmm15,xmm0
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
-DB	102,68,15,56,220,201
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
+	DB	102,68,15,56,220,201
 	movdqu	xmm1,XMMWORD[96+rdi]
 	lea	rdi,[128+rdi]
 
-DB	102,65,15,56,221,210
+	DB	102,65,15,56,221,210
 	pxor	xmm1,xmm0
 	movdqu	xmm10,XMMWORD[((112-128))+rdi]
-DB	102,65,15,56,221,219
+	DB	102,65,15,56,221,219
 	pxor	xmm10,xmm0
 	movdqa	xmm11,XMMWORD[rsp]
-DB	102,65,15,56,221,228
-DB	102,65,15,56,221,237
+	DB	102,65,15,56,221,228
+	DB	102,65,15,56,221,237
 	movdqa	xmm12,XMMWORD[16+rsp]
 	movdqa	xmm13,XMMWORD[32+rsp]
-DB	102,65,15,56,221,246
-DB	102,65,15,56,221,255
+	DB	102,65,15,56,221,246
+	DB	102,65,15,56,221,255
 	movdqa	xmm14,XMMWORD[48+rsp]
 	movdqa	xmm15,XMMWORD[64+rsp]
-DB	102,68,15,56,221,193
+	DB	102,68,15,56,221,193
 	movdqa	xmm0,XMMWORD[80+rsp]
 	movups	xmm1,XMMWORD[((16-128))+rcx]
-DB	102,69,15,56,221,202
+	DB	102,69,15,56,221,202
 
 	movups	XMMWORD[rsi],xmm2
 	movdqa	xmm2,xmm11
@@ -1375,19 +1375,19 @@ $L$ctr32_tail:
 	pxor	xmm9,xmm9
 
 	movups	xmm0,XMMWORD[16+rcx]
-DB	102,15,56,220,209
-DB	102,15,56,220,217
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
 	lea	rcx,[((32-16))+rax*1+rcx]
 	neg	rax
-DB	102,15,56,220,225
+	DB	102,15,56,220,225
 	add	rax,16
 	movups	xmm10,XMMWORD[rdi]
-DB	102,15,56,220,233
-DB	102,15,56,220,241
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
 	movups	xmm11,XMMWORD[16+rdi]
 	movups	xmm12,XMMWORD[32+rdi]
-DB	102,15,56,220,249
-DB	102,68,15,56,220,193
+	DB	102,15,56,220,249
+	DB	102,68,15,56,220,193
 
 	call	$L$enc_loop8_enter
 
@@ -1418,20 +1418,20 @@ DB	102,68,15,56,220,193
 
 ALIGN	32
 $L$ctr32_loop4:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	lea	rcx,[16+rcx]
 	dec	eax
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	movups	xmm1,XMMWORD[rcx]
 	jnz	NEAR $L$ctr32_loop4
-DB	102,15,56,221,209
-DB	102,15,56,221,217
+	DB	102,15,56,221,209
+	DB	102,15,56,221,217
 	movups	xmm10,XMMWORD[rdi]
 	movups	xmm11,XMMWORD[16+rdi]
-DB	102,15,56,221,225
-DB	102,15,56,221,233
+	DB	102,15,56,221,225
+	DB	102,15,56,221,233
 	movups	xmm12,XMMWORD[32+rdi]
 	movups	xmm13,XMMWORD[48+rdi]
 
@@ -1447,16 +1447,16 @@ DB	102,15,56,221,233
 
 ALIGN	32
 $L$ctr32_loop3:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	lea	rcx,[16+rcx]
 	dec	eax
-DB	102,15,56,220,217
-DB	102,15,56,220,225
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
 	movups	xmm1,XMMWORD[rcx]
 	jnz	NEAR $L$ctr32_loop3
-DB	102,15,56,221,209
-DB	102,15,56,221,217
-DB	102,15,56,221,225
+	DB	102,15,56,221,209
+	DB	102,15,56,221,217
+	DB	102,15,56,221,225
 
 	movups	xmm10,XMMWORD[rdi]
 	xorps	xmm2,xmm10
@@ -1561,12 +1561,12 @@ $L$xts_enc_body:
 	lea	r8,[32+r8]
 	xorps	xmm2,xmm0
 $L$oop_enc1_6:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[r8]
 	lea	r8,[16+r8]
 	jnz	NEAR $L$oop_enc1_6
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	movups	xmm0,XMMWORD[rcx]
 	mov	rbp,rcx
 	mov	eax,r10d
@@ -1639,158 +1639,158 @@ $L$xts_enc_grandloop:
 	pxor	xmm2,xmm10
 	movdqu	xmm4,XMMWORD[32+rdi]
 	pxor	xmm3,xmm11
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	movdqu	xmm5,XMMWORD[48+rdi]
 	pxor	xmm4,xmm12
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	movdqu	xmm6,XMMWORD[64+rdi]
 	pxor	xmm5,xmm13
-DB	102,15,56,220,225
+	DB	102,15,56,220,225
 	movdqu	xmm7,XMMWORD[80+rdi]
 	pxor	xmm8,xmm15
 	movdqa	xmm9,XMMWORD[96+rsp]
 	pxor	xmm6,xmm14
-DB	102,15,56,220,233
+	DB	102,15,56,220,233
 	movups	xmm0,XMMWORD[32+rbp]
 	lea	rdi,[96+rdi]
 	pxor	xmm7,xmm8
 
 	pxor	xmm10,xmm9
-DB	102,15,56,220,241
+	DB	102,15,56,220,241
 	pxor	xmm11,xmm9
 	movdqa	XMMWORD[rsp],xmm10
-DB	102,15,56,220,249
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[48+rbp]
 	pxor	xmm12,xmm9
 
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pxor	xmm13,xmm9
 	movdqa	XMMWORD[16+rsp],xmm11
-DB	102,15,56,220,216
+	DB	102,15,56,220,216
 	pxor	xmm14,xmm9
 	movdqa	XMMWORD[32+rsp],xmm12
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	pxor	xmm8,xmm9
 	movdqa	XMMWORD[64+rsp],xmm14
-DB	102,15,56,220,240
-DB	102,15,56,220,248
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
 	movups	xmm0,XMMWORD[64+rbp]
 	movdqa	XMMWORD[80+rsp],xmm8
 	pshufd	xmm9,xmm15,0x5f
 	jmp	NEAR $L$xts_enc_loop6
 ALIGN	32
 $L$xts_enc_loop6:
-DB	102,15,56,220,209
-DB	102,15,56,220,217
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
-DB	102,15,56,220,249
+	DB	102,15,56,220,209
+	DB	102,15,56,220,217
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[((-64))+rax*1+rcx]
 	add	rax,32
 
-DB	102,15,56,220,208
-DB	102,15,56,220,216
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
-DB	102,15,56,220,248
+	DB	102,15,56,220,208
+	DB	102,15,56,220,216
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
+	DB	102,15,56,220,248
 	movups	xmm0,XMMWORD[((-80))+rax*1+rcx]
 	jnz	NEAR $L$xts_enc_loop6
 
 	movdqa	xmm8,XMMWORD[r8]
 	movdqa	xmm14,xmm9
 	paddd	xmm9,xmm9
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	paddq	xmm15,xmm15
 	psrad	xmm14,31
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	pand	xmm14,xmm8
 	movups	xmm10,XMMWORD[rbp]
-DB	102,15,56,220,225
-DB	102,15,56,220,233
-DB	102,15,56,220,241
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
+	DB	102,15,56,220,241
 	pxor	xmm15,xmm14
 	movaps	xmm11,xmm10
-DB	102,15,56,220,249
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[((-64))+rcx]
 
 	movdqa	xmm14,xmm9
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	paddd	xmm9,xmm9
 	pxor	xmm10,xmm15
-DB	102,15,56,220,216
+	DB	102,15,56,220,216
 	psrad	xmm14,31
 	paddq	xmm15,xmm15
-DB	102,15,56,220,224
-DB	102,15,56,220,232
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
 	pand	xmm14,xmm8
 	movaps	xmm12,xmm11
-DB	102,15,56,220,240
+	DB	102,15,56,220,240
 	pxor	xmm15,xmm14
 	movdqa	xmm14,xmm9
-DB	102,15,56,220,248
+	DB	102,15,56,220,248
 	movups	xmm0,XMMWORD[((-48))+rcx]
 
 	paddd	xmm9,xmm9
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	pxor	xmm11,xmm15
 	psrad	xmm14,31
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	paddq	xmm15,xmm15
 	pand	xmm14,xmm8
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	movdqa	XMMWORD[48+rsp],xmm13
 	pxor	xmm15,xmm14
-DB	102,15,56,220,241
+	DB	102,15,56,220,241
 	movaps	xmm13,xmm12
 	movdqa	xmm14,xmm9
-DB	102,15,56,220,249
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[((-32))+rcx]
 
 	paddd	xmm9,xmm9
-DB	102,15,56,220,208
+	DB	102,15,56,220,208
 	pxor	xmm12,xmm15
 	psrad	xmm14,31
-DB	102,15,56,220,216
+	DB	102,15,56,220,216
 	paddq	xmm15,xmm15
 	pand	xmm14,xmm8
-DB	102,15,56,220,224
-DB	102,15,56,220,232
-DB	102,15,56,220,240
+	DB	102,15,56,220,224
+	DB	102,15,56,220,232
+	DB	102,15,56,220,240
 	pxor	xmm15,xmm14
 	movaps	xmm14,xmm13
-DB	102,15,56,220,248
+	DB	102,15,56,220,248
 
 	movdqa	xmm0,xmm9
 	paddd	xmm9,xmm9
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	pxor	xmm13,xmm15
 	psrad	xmm0,31
-DB	102,15,56,220,217
+	DB	102,15,56,220,217
 	paddq	xmm15,xmm15
 	pand	xmm0,xmm8
-DB	102,15,56,220,225
-DB	102,15,56,220,233
+	DB	102,15,56,220,225
+	DB	102,15,56,220,233
 	pxor	xmm15,xmm0
 	movups	xmm0,XMMWORD[rbp]
-DB	102,15,56,220,241
-DB	102,15,56,220,249
+	DB	102,15,56,220,241
+	DB	102,15,56,220,249
 	movups	xmm1,XMMWORD[16+rbp]
 
 	pxor	xmm14,xmm15
-DB	102,15,56,221,84,36,0
+	DB	102,15,56,221,84,36,0
 	psrad	xmm9,31
 	paddq	xmm15,xmm15
-DB	102,15,56,221,92,36,16
-DB	102,15,56,221,100,36,32
+	DB	102,15,56,221,92,36,16
+	DB	102,15,56,221,100,36,32
 	pand	xmm9,xmm8
 	mov	rax,r10
-DB	102,15,56,221,108,36,48
-DB	102,15,56,221,116,36,64
-DB	102,15,56,221,124,36,80
+	DB	102,15,56,221,108,36,48
+	DB	102,15,56,221,116,36,64
+	DB	102,15,56,221,124,36,80
 	pxor	xmm15,xmm9
 
 	lea	rsi,[96+rsi]
@@ -1866,12 +1866,12 @@ $L$xts_enc_one:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_enc1_7:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_enc1_7
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	xorps	xmm2,xmm10
 	movdqa	xmm10,xmm11
 	movups	XMMWORD[rsi],xmm2
@@ -1971,12 +1971,12 @@ $L$xts_enc_steal:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_enc1_8:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_enc1_8
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	xorps	xmm2,xmm10
 	movups	XMMWORD[(-16)+rsi],xmm2
 
@@ -2066,12 +2066,12 @@ $L$xts_dec_body:
 	lea	r8,[32+r8]
 	xorps	xmm2,xmm0
 $L$oop_enc1_9:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[r8]
 	lea	r8,[16+r8]
 	jnz	NEAR $L$oop_enc1_9
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	xor	eax,eax
 	test	rdx,15
 	setnz	al
@@ -2150,158 +2150,158 @@ $L$xts_dec_grandloop:
 	pxor	xmm2,xmm10
 	movdqu	xmm4,XMMWORD[32+rdi]
 	pxor	xmm3,xmm11
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	movdqu	xmm5,XMMWORD[48+rdi]
 	pxor	xmm4,xmm12
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	movdqu	xmm6,XMMWORD[64+rdi]
 	pxor	xmm5,xmm13
-DB	102,15,56,222,225
+	DB	102,15,56,222,225
 	movdqu	xmm7,XMMWORD[80+rdi]
 	pxor	xmm8,xmm15
 	movdqa	xmm9,XMMWORD[96+rsp]
 	pxor	xmm6,xmm14
-DB	102,15,56,222,233
+	DB	102,15,56,222,233
 	movups	xmm0,XMMWORD[32+rbp]
 	lea	rdi,[96+rdi]
 	pxor	xmm7,xmm8
 
 	pxor	xmm10,xmm9
-DB	102,15,56,222,241
+	DB	102,15,56,222,241
 	pxor	xmm11,xmm9
 	movdqa	XMMWORD[rsp],xmm10
-DB	102,15,56,222,249
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[48+rbp]
 	pxor	xmm12,xmm9
 
-DB	102,15,56,222,208
+	DB	102,15,56,222,208
 	pxor	xmm13,xmm9
 	movdqa	XMMWORD[16+rsp],xmm11
-DB	102,15,56,222,216
+	DB	102,15,56,222,216
 	pxor	xmm14,xmm9
 	movdqa	XMMWORD[32+rsp],xmm12
-DB	102,15,56,222,224
-DB	102,15,56,222,232
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
 	pxor	xmm8,xmm9
 	movdqa	XMMWORD[64+rsp],xmm14
-DB	102,15,56,222,240
-DB	102,15,56,222,248
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
 	movups	xmm0,XMMWORD[64+rbp]
 	movdqa	XMMWORD[80+rsp],xmm8
 	pshufd	xmm9,xmm15,0x5f
 	jmp	NEAR $L$xts_dec_loop6
 ALIGN	32
 $L$xts_dec_loop6:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[((-64))+rax*1+rcx]
 	add	rax,32
 
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
 	movups	xmm0,XMMWORD[((-80))+rax*1+rcx]
 	jnz	NEAR $L$xts_dec_loop6
 
 	movdqa	xmm8,XMMWORD[r8]
 	movdqa	xmm14,xmm9
 	paddd	xmm9,xmm9
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	paddq	xmm15,xmm15
 	psrad	xmm14,31
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	pand	xmm14,xmm8
 	movups	xmm10,XMMWORD[rbp]
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
 	pxor	xmm15,xmm14
 	movaps	xmm11,xmm10
-DB	102,15,56,222,249
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[((-64))+rcx]
 
 	movdqa	xmm14,xmm9
-DB	102,15,56,222,208
+	DB	102,15,56,222,208
 	paddd	xmm9,xmm9
 	pxor	xmm10,xmm15
-DB	102,15,56,222,216
+	DB	102,15,56,222,216
 	psrad	xmm14,31
 	paddq	xmm15,xmm15
-DB	102,15,56,222,224
-DB	102,15,56,222,232
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
 	pand	xmm14,xmm8
 	movaps	xmm12,xmm11
-DB	102,15,56,222,240
+	DB	102,15,56,222,240
 	pxor	xmm15,xmm14
 	movdqa	xmm14,xmm9
-DB	102,15,56,222,248
+	DB	102,15,56,222,248
 	movups	xmm0,XMMWORD[((-48))+rcx]
 
 	paddd	xmm9,xmm9
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	pxor	xmm11,xmm15
 	psrad	xmm14,31
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	paddq	xmm15,xmm15
 	pand	xmm14,xmm8
-DB	102,15,56,222,225
-DB	102,15,56,222,233
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
 	movdqa	XMMWORD[48+rsp],xmm13
 	pxor	xmm15,xmm14
-DB	102,15,56,222,241
+	DB	102,15,56,222,241
 	movaps	xmm13,xmm12
 	movdqa	xmm14,xmm9
-DB	102,15,56,222,249
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[((-32))+rcx]
 
 	paddd	xmm9,xmm9
-DB	102,15,56,222,208
+	DB	102,15,56,222,208
 	pxor	xmm12,xmm15
 	psrad	xmm14,31
-DB	102,15,56,222,216
+	DB	102,15,56,222,216
 	paddq	xmm15,xmm15
 	pand	xmm14,xmm8
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
 	pxor	xmm15,xmm14
 	movaps	xmm14,xmm13
-DB	102,15,56,222,248
+	DB	102,15,56,222,248
 
 	movdqa	xmm0,xmm9
 	paddd	xmm9,xmm9
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	pxor	xmm13,xmm15
 	psrad	xmm0,31
-DB	102,15,56,222,217
+	DB	102,15,56,222,217
 	paddq	xmm15,xmm15
 	pand	xmm0,xmm8
-DB	102,15,56,222,225
-DB	102,15,56,222,233
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
 	pxor	xmm15,xmm0
 	movups	xmm0,XMMWORD[rbp]
-DB	102,15,56,222,241
-DB	102,15,56,222,249
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
 	movups	xmm1,XMMWORD[16+rbp]
 
 	pxor	xmm14,xmm15
-DB	102,15,56,223,84,36,0
+	DB	102,15,56,223,84,36,0
 	psrad	xmm9,31
 	paddq	xmm15,xmm15
-DB	102,15,56,223,92,36,16
-DB	102,15,56,223,100,36,32
+	DB	102,15,56,223,92,36,16
+	DB	102,15,56,223,100,36,32
 	pand	xmm9,xmm8
 	mov	rax,r10
-DB	102,15,56,223,108,36,48
-DB	102,15,56,223,116,36,64
-DB	102,15,56,223,124,36,80
+	DB	102,15,56,223,108,36,48
+	DB	102,15,56,223,116,36,64
+	DB	102,15,56,223,124,36,80
 	pxor	xmm15,xmm9
 
 	lea	rsi,[96+rsi]
@@ -2385,12 +2385,12 @@ $L$xts_dec_one:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_10:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_10
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	xorps	xmm2,xmm10
 	movdqa	xmm10,xmm11
 	movups	XMMWORD[rsi],xmm2
@@ -2483,12 +2483,12 @@ $L$xts_dec_done2:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_11:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_11
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	xorps	xmm2,xmm11
 	movups	XMMWORD[rsi],xmm2
 
@@ -2513,12 +2513,12 @@ $L$xts_dec_steal:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_12:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_12
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	xorps	xmm2,xmm10
 	movups	XMMWORD[rsi],xmm2
 
@@ -2608,12 +2608,12 @@ $L$cbc_enc_loop:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm3
 $L$oop_enc1_13:
-DB	102,15,56,220,209
+	DB	102,15,56,220,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_enc1_13
-DB	102,15,56,221,209
+	DB	102,15,56,221,209
 	mov	eax,r10d
 	mov	rcx,r11
 	movups	XMMWORD[rsi],xmm2
@@ -2659,12 +2659,12 @@ $L$cbc_decrypt:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_14:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	r10d
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_14
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	pxor	xmm0,xmm0
 	pxor	xmm1,xmm1
 	movdqu	XMMWORD[r8],xmm4
@@ -2740,166 +2740,166 @@ $L$cbc_dec_loop8_enter:
 	pxor	xmm7,xmm0
 	pxor	xmm8,xmm0
 
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	pxor	xmm9,xmm0
 	movups	xmm0,XMMWORD[((32-112))+rcx]
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
 	adc	rbp,0
 	and	rbp,128
-DB	102,68,15,56,222,201
+	DB	102,68,15,56,222,201
 	add	rbp,rdi
 	movups	xmm1,XMMWORD[((48-112))+rcx]
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((64-112))+rcx]
 	nop
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movups	xmm1,XMMWORD[((80-112))+rcx]
 	nop
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((96-112))+rcx]
 	nop
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movups	xmm1,XMMWORD[((112-112))+rcx]
 	nop
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((128-112))+rcx]
 	nop
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movups	xmm1,XMMWORD[((144-112))+rcx]
 	cmp	eax,11
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((160-112))+rcx]
 	jb	NEAR $L$cbc_dec_done
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movups	xmm1,XMMWORD[((176-112))+rcx]
 	nop
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((192-112))+rcx]
 	je	NEAR $L$cbc_dec_done
-DB	102,15,56,222,209
-DB	102,15,56,222,217
-DB	102,15,56,222,225
-DB	102,15,56,222,233
-DB	102,15,56,222,241
-DB	102,15,56,222,249
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movups	xmm1,XMMWORD[((208-112))+rcx]
 	nop
-DB	102,15,56,222,208
-DB	102,15,56,222,216
-DB	102,15,56,222,224
-DB	102,15,56,222,232
-DB	102,15,56,222,240
-DB	102,15,56,222,248
-DB	102,68,15,56,222,192
-DB	102,68,15,56,222,200
+	DB	102,15,56,222,208
+	DB	102,15,56,222,216
+	DB	102,15,56,222,224
+	DB	102,15,56,222,232
+	DB	102,15,56,222,240
+	DB	102,15,56,222,248
+	DB	102,68,15,56,222,192
+	DB	102,68,15,56,222,200
 	movups	xmm0,XMMWORD[((224-112))+rcx]
 	jmp	NEAR $L$cbc_dec_done
 ALIGN	16
 $L$cbc_dec_done:
-DB	102,15,56,222,209
-DB	102,15,56,222,217
+	DB	102,15,56,222,209
+	DB	102,15,56,222,217
 	pxor	xmm10,xmm0
 	pxor	xmm11,xmm0
-DB	102,15,56,222,225
-DB	102,15,56,222,233
+	DB	102,15,56,222,225
+	DB	102,15,56,222,233
 	pxor	xmm12,xmm0
 	pxor	xmm13,xmm0
-DB	102,15,56,222,241
-DB	102,15,56,222,249
+	DB	102,15,56,222,241
+	DB	102,15,56,222,249
 	pxor	xmm14,xmm0
 	pxor	xmm15,xmm0
-DB	102,68,15,56,222,193
-DB	102,68,15,56,222,201
+	DB	102,68,15,56,222,193
+	DB	102,68,15,56,222,201
 	movdqu	xmm1,XMMWORD[80+rdi]
 
-DB	102,65,15,56,223,210
+	DB	102,65,15,56,223,210
 	movdqu	xmm10,XMMWORD[96+rdi]
 	pxor	xmm1,xmm0
-DB	102,65,15,56,223,219
+	DB	102,65,15,56,223,219
 	pxor	xmm10,xmm0
 	movdqu	xmm0,XMMWORD[112+rdi]
-DB	102,65,15,56,223,228
+	DB	102,65,15,56,223,228
 	lea	rdi,[128+rdi]
 	movdqu	xmm11,XMMWORD[rbp]
-DB	102,65,15,56,223,237
-DB	102,65,15,56,223,246
+	DB	102,65,15,56,223,237
+	DB	102,65,15,56,223,246
 	movdqu	xmm12,XMMWORD[16+rbp]
 	movdqu	xmm13,XMMWORD[32+rbp]
-DB	102,65,15,56,223,255
-DB	102,68,15,56,223,193
+	DB	102,65,15,56,223,255
+	DB	102,68,15,56,223,193
 	movdqu	xmm14,XMMWORD[48+rbp]
 	movdqu	xmm15,XMMWORD[64+rbp]
-DB	102,69,15,56,223,202
+	DB	102,69,15,56,223,202
 	movdqa	xmm10,xmm0
 	movdqu	xmm1,XMMWORD[80+rbp]
 	movups	xmm0,XMMWORD[((-112))+rcx]
@@ -3088,12 +3088,12 @@ $L$cbc_dec_one:
 	lea	rcx,[32+rcx]
 	xorps	xmm2,xmm0
 $L$oop_dec1_15:
-DB	102,15,56,222,209
+	DB	102,15,56,222,209
 	dec	eax
 	movups	xmm1,XMMWORD[rcx]
 	lea	rcx,[16+rcx]
 	jnz	NEAR $L$oop_dec1_15
-DB	102,15,56,223,209
+	DB	102,15,56,223,209
 	xorps	xmm2,xmm10
 	movaps	xmm10,xmm11
 	jmp	NEAR $L$cbc_dec_tail_collected
@@ -3204,7 +3204,7 @@ global	aes_hw_set_decrypt_key
 ALIGN	16
 aes_hw_set_decrypt_key:
 
-DB	0x48,0x83,0xEC,0x08
+	DB	0x48,0x83,0xEC,0x08
 
 	call	__aesni_set_encrypt_key
 	shl	edx,4
@@ -3222,8 +3222,8 @@ DB	0x48,0x83,0xEC,0x08
 $L$dec_key_inverse:
 	movups	xmm0,XMMWORD[r8]
 	movups	xmm1,XMMWORD[rcx]
-DB	102,15,56,219,192
-DB	102,15,56,219,201
+	DB	102,15,56,219,192
+	DB	102,15,56,219,201
 	lea	r8,[16+r8]
 	lea	rcx,[((-16))+rcx]
 	movups	XMMWORD[16+rcx],xmm0
@@ -3232,7 +3232,7 @@ DB	102,15,56,219,201
 	ja	NEAR $L$dec_key_inverse
 
 	movups	xmm0,XMMWORD[r8]
-DB	102,15,56,219,192
+	DB	102,15,56,219,192
 	pxor	xmm1,xmm1
 	movups	XMMWORD[rcx],xmm0
 	pxor	xmm0,xmm0
@@ -3252,7 +3252,7 @@ __aesni_set_encrypt_key:
 %ifdef BORINGSSL_DISPATCH_TEST
 	mov	BYTE[((BORINGSSL_function_hit+3))],1
 %endif
-DB	0x48,0x83,0xEC,0x08
+	DB	0x48,0x83,0xEC,0x08
 
 	mov	rax,-1
 	test	rcx,rcx
@@ -3279,25 +3279,25 @@ $L$10rounds:
 	je	NEAR $L$10rounds_alt
 
 	movups	XMMWORD[r8],xmm0
-DB	102,15,58,223,200,1
+	DB	102,15,58,223,200,1
 	call	$L$key_expansion_128_cold
-DB	102,15,58,223,200,2
+	DB	102,15,58,223,200,2
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,4
+	DB	102,15,58,223,200,4
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,8
+	DB	102,15,58,223,200,8
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,16
+	DB	102,15,58,223,200,16
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,32
+	DB	102,15,58,223,200,32
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,64
+	DB	102,15,58,223,200,64
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,128
+	DB	102,15,58,223,200,128
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,27
+	DB	102,15,58,223,200,27
 	call	$L$key_expansion_128
-DB	102,15,58,223,200,54
+	DB	102,15,58,223,200,54
 	call	$L$key_expansion_128
 	movups	XMMWORD[rax],xmm0
 	mov	DWORD[80+rax],edx
@@ -3316,7 +3316,7 @@ $L$10rounds_alt:
 ALIGN	16
 $L$oop_key128:
 DB	102,15,56,0,197
-DB	102,15,56,221,196
+	DB	102,15,56,221,196
 	pslld	xmm4,1
 	lea	rax,[16+rax]
 
@@ -3338,7 +3338,7 @@ DB	102,15,56,221,196
 	movdqa	xmm4,XMMWORD[$L$key_rcon1b]
 
 DB	102,15,56,0,197
-DB	102,15,56,221,196
+	DB	102,15,56,221,196
 	pslld	xmm4,1
 
 	movdqa	xmm3,xmm2
@@ -3354,7 +3354,7 @@ DB	102,15,56,221,196
 
 	movdqa	xmm2,xmm0
 DB	102,15,56,0,197
-DB	102,15,56,221,196
+	DB	102,15,56,221,196
 
 	movdqa	xmm3,xmm2
 	pslldq	xmm2,4
@@ -3379,21 +3379,21 @@ $L$12rounds:
 	je	NEAR $L$12rounds_alt
 
 	movups	XMMWORD[r8],xmm0
-DB	102,15,58,223,202,1
+	DB	102,15,58,223,202,1
 	call	$L$key_expansion_192a_cold
-DB	102,15,58,223,202,2
+	DB	102,15,58,223,202,2
 	call	$L$key_expansion_192b
-DB	102,15,58,223,202,4
+	DB	102,15,58,223,202,4
 	call	$L$key_expansion_192a
-DB	102,15,58,223,202,8
+	DB	102,15,58,223,202,8
 	call	$L$key_expansion_192b
-DB	102,15,58,223,202,16
+	DB	102,15,58,223,202,16
 	call	$L$key_expansion_192a
-DB	102,15,58,223,202,32
+	DB	102,15,58,223,202,32
 	call	$L$key_expansion_192b
-DB	102,15,58,223,202,64
+	DB	102,15,58,223,202,64
 	call	$L$key_expansion_192a
-DB	102,15,58,223,202,128
+	DB	102,15,58,223,202,128
 	call	$L$key_expansion_192b
 	movups	XMMWORD[rax],xmm0
 	mov	DWORD[48+rax],edx
@@ -3413,7 +3413,7 @@ $L$oop_key192:
 	movq	QWORD[rax],xmm2
 	movdqa	xmm1,xmm2
 DB	102,15,56,0,213
-DB	102,15,56,221,212
+	DB	102,15,56,221,212
 	pslld	xmm4,1
 	lea	rax,[24+rax]
 
@@ -3451,31 +3451,31 @@ $L$14rounds:
 
 	movups	XMMWORD[r8],xmm0
 	movups	XMMWORD[16+r8],xmm2
-DB	102,15,58,223,202,1
+	DB	102,15,58,223,202,1
 	call	$L$key_expansion_256a_cold
-DB	102,15,58,223,200,1
+	DB	102,15,58,223,200,1
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,2
+	DB	102,15,58,223,202,2
 	call	$L$key_expansion_256a
-DB	102,15,58,223,200,2
+	DB	102,15,58,223,200,2
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,4
+	DB	102,15,58,223,202,4
 	call	$L$key_expansion_256a
-DB	102,15,58,223,200,4
+	DB	102,15,58,223,200,4
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,8
+	DB	102,15,58,223,202,8
 	call	$L$key_expansion_256a
-DB	102,15,58,223,200,8
+	DB	102,15,58,223,200,8
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,16
+	DB	102,15,58,223,202,16
 	call	$L$key_expansion_256a
-DB	102,15,58,223,200,16
+	DB	102,15,58,223,200,16
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,32
+	DB	102,15,58,223,202,32
 	call	$L$key_expansion_256a
-DB	102,15,58,223,200,32
+	DB	102,15,58,223,200,32
 	call	$L$key_expansion_256b
-DB	102,15,58,223,202,64
+	DB	102,15,58,223,202,64
 	call	$L$key_expansion_256a
 	movups	XMMWORD[rax],xmm0
 	mov	DWORD[16+rax],edx
@@ -3495,7 +3495,7 @@ $L$14rounds_alt:
 ALIGN	16
 $L$oop_key256:
 DB	102,15,56,0,213
-DB	102,15,56,221,212
+	DB	102,15,56,221,212
 
 	movdqa	xmm3,xmm0
 	pslldq	xmm0,4
@@ -3514,7 +3514,7 @@ DB	102,15,56,221,212
 
 	pshufd	xmm2,xmm0,0xff
 	pxor	xmm3,xmm3
-DB	102,15,56,221,211
+	DB	102,15,56,221,211
 
 	movdqa	xmm3,xmm1
 	pslldq	xmm1,4
@@ -3624,7 +3624,7 @@ $L$key_expansion_256b:
 
 ALIGN	64
 $L$bswap_mask:
-DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+	DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
 $L$increment32:
 	DD	6,6,6,0
 $L$increment64:
@@ -3632,7 +3632,7 @@ $L$increment64:
 $L$xts_magic:
 	DD	0x87,0,1,0
 $L$increment1:
-DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
+	DB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
 $L$key_rotate:
 	DD	0x0c0f0e0d,0x0c0f0e0d,0x0c0f0e0d,0x0c0f0e0d
 $L$key_rotate192:
@@ -3642,10 +3642,10 @@ $L$key_rcon1:
 $L$key_rcon1b:
 	DD	0x1b,0x1b,0x1b,0x1b
 
-DB	65,69,83,32,102,111,114,32,73,110,116,101,108,32,65,69
-DB	83,45,78,73,44,32,67,82,89,80,84,79,71,65,77,83
-DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
-DB	115,108,46,111,114,103,62,0
+	DB	65,69,83,32,102,111,114,32,73,110,116,101,108,32,65,69
+	DB	83,45,78,73,44,32,67,82,89,80,84,79,71,65,77,83
+	DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
+	DB	115,108,46,111,114,103,62,0
 ALIGN	64
 EXTERN	__imp_RtlVirtualUnwind
 
@@ -3839,17 +3839,17 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_ecb:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ecb_ccm64_se_handler wrt ..imagebase
 	DD	$L$ecb_enc_body wrt ..imagebase,$L$ecb_enc_ret wrt ..imagebase
 $L$SEH_info_ctr32:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ctr_xts_se_handler wrt ..imagebase
 	DD	$L$ctr32_body wrt ..imagebase,$L$ctr32_epilogue wrt ..imagebase
 $L$SEH_info_cbc:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	cbc_se_handler wrt ..imagebase
 $L$SEH_info_key:
-DB	0x01,0x04,0x01,0x00
-DB	0x04,0x02,0x00,0x00
+	DB	0x01,0x04,0x01,0x00
+	DB	0x04,0x02,0x00,0x00
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/ghash-ssse3-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/ghash-ssse3-x86_64.asm
index 339584006..b1c9e581b 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/ghash-ssse3-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/ghash-ssse3-x86_64.asm
@@ -440,7 +440,7 @@ ALIGN	16
 
 
 $L$reverse_bytes:
-DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+	DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
 
 $L$low4_mask:
 	DQ	0x0f0f0f0f0f0f0f0f,0x0f0f0f0f0f0f0f0f
@@ -457,41 +457,41 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$gmult_seh_info:
-DB	1
-DB	$L$gmult_seh_prolog_end-$L$gmult_seh_begin
-DB	5
-DB	0
+	DB	1
+	DB	$L$gmult_seh_prolog_end-$L$gmult_seh_begin
+	DB	5
+	DB	0
 
-DB	$L$gmult_seh_save_xmm10-$L$gmult_seh_begin
-DB	168
+	DB	$L$gmult_seh_save_xmm10-$L$gmult_seh_begin
+	DB	168
 	DW	1
 
-DB	$L$gmult_seh_save_xmm6-$L$gmult_seh_begin
-DB	104
+	DB	$L$gmult_seh_save_xmm6-$L$gmult_seh_begin
+	DB	104
 	DW	0
 
-DB	$L$gmult_seh_allocstack-$L$gmult_seh_begin
-DB	66
+	DB	$L$gmult_seh_allocstack-$L$gmult_seh_begin
+	DB	66
 
 ALIGN	8
 $L$ghash_seh_info:
-DB	1
-DB	$L$ghash_seh_prolog_end-$L$ghash_seh_begin
-DB	7
-DB	0
+	DB	1
+	DB	$L$ghash_seh_prolog_end-$L$ghash_seh_begin
+	DB	7
+	DB	0
 
-DB	$L$ghash_seh_save_xmm11-$L$ghash_seh_begin
-DB	184
+	DB	$L$ghash_seh_save_xmm11-$L$ghash_seh_begin
+	DB	184
 	DW	2
 
-DB	$L$ghash_seh_save_xmm10-$L$ghash_seh_begin
-DB	168
+	DB	$L$ghash_seh_save_xmm10-$L$ghash_seh_begin
+	DB	168
 	DW	1
 
-DB	$L$ghash_seh_save_xmm6-$L$ghash_seh_begin
-DB	104
+	DB	$L$ghash_seh_save_xmm6-$L$ghash_seh_begin
+	DB	104
 	DW	0
 
-DB	$L$ghash_seh_allocstack-$L$ghash_seh_begin
-DB	98
+	DB	$L$ghash_seh_allocstack-$L$ghash_seh_begin
+	DB	98
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/ghash-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/ghash-x86_64.asm
index 3cbcfebdd..592571d33 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/ghash-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/ghash-x86_64.asm
@@ -21,8 +21,8 @@ gcm_init_clmul:
 $L$_init_clmul:
 $L$SEH_begin_gcm_init_clmul:
 
-DB	0x48,0x83,0xec,0x18
-DB	0x0f,0x29,0x34,0x24
+	DB	0x48,0x83,0xec,0x18
+	DB	0x0f,0x29,0x34,0x24
 	movdqu	xmm2,XMMWORD[rdx]
 	pshufd	xmm2,xmm2,78
 
@@ -240,17 +240,17 @@ $L$_ghash_clmul:
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_gcm_ghash_clmul:
 
-DB	0x48,0x8d,0x60,0xe0
-DB	0x0f,0x29,0x70,0xe0
-DB	0x0f,0x29,0x78,0xf0
-DB	0x44,0x0f,0x29,0x00
-DB	0x44,0x0f,0x29,0x48,0x10
-DB	0x44,0x0f,0x29,0x50,0x20
-DB	0x44,0x0f,0x29,0x58,0x30
-DB	0x44,0x0f,0x29,0x60,0x40
-DB	0x44,0x0f,0x29,0x68,0x50
-DB	0x44,0x0f,0x29,0x70,0x60
-DB	0x44,0x0f,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0x0f,0x29,0x70,0xe0
+	DB	0x0f,0x29,0x78,0xf0
+	DB	0x44,0x0f,0x29,0x00
+	DB	0x44,0x0f,0x29,0x48,0x10
+	DB	0x44,0x0f,0x29,0x50,0x20
+	DB	0x44,0x0f,0x29,0x58,0x30
+	DB	0x44,0x0f,0x29,0x60,0x40
+	DB	0x44,0x0f,0x29,0x68,0x50
+	DB	0x44,0x0f,0x29,0x70,0x60
+	DB	0x44,0x0f,0x29,0x78,0x70
 	movdqa	xmm10,XMMWORD[$L$bswap_mask]
 
 	movdqu	xmm0,XMMWORD[rcx]
@@ -650,8 +650,8 @@ gcm_init_avx:
 
 $L$SEH_begin_gcm_init_avx:
 
-DB	0x48,0x83,0xec,0x18
-DB	0x0f,0x29,0x34,0x24
+	DB	0x48,0x83,0xec,0x18
+	DB	0x0f,0x29,0x34,0x24
 	vzeroupper
 
 	vmovdqu	xmm2,XMMWORD[rdx]
@@ -775,17 +775,17 @@ gcm_ghash_avx:
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_gcm_ghash_avx:
 
-DB	0x48,0x8d,0x60,0xe0
-DB	0x0f,0x29,0x70,0xe0
-DB	0x0f,0x29,0x78,0xf0
-DB	0x44,0x0f,0x29,0x00
-DB	0x44,0x0f,0x29,0x48,0x10
-DB	0x44,0x0f,0x29,0x50,0x20
-DB	0x44,0x0f,0x29,0x58,0x30
-DB	0x44,0x0f,0x29,0x60,0x40
-DB	0x44,0x0f,0x29,0x68,0x50
-DB	0x44,0x0f,0x29,0x70,0x60
-DB	0x44,0x0f,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0x0f,0x29,0x70,0xe0
+	DB	0x0f,0x29,0x78,0xf0
+	DB	0x44,0x0f,0x29,0x00
+	DB	0x44,0x0f,0x29,0x48,0x10
+	DB	0x44,0x0f,0x29,0x50,0x20
+	DB	0x44,0x0f,0x29,0x58,0x30
+	DB	0x44,0x0f,0x29,0x60,0x40
+	DB	0x44,0x0f,0x29,0x68,0x50
+	DB	0x44,0x0f,0x29,0x70,0x60
+	DB	0x44,0x0f,0x29,0x78,0x70
 	vzeroupper
 
 	vmovdqu	xmm10,XMMWORD[rcx]
@@ -1173,17 +1173,17 @@ $L$SEH_end_gcm_ghash_avx:
 
 ALIGN	64
 $L$bswap_mask:
-DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+	DB	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
 $L$0x1c2_polynomial:
-DB	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xc2
+	DB	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xc2
 $L$7_mask:
 	DD	7,0,7,0
 ALIGN	64
 
-DB	71,72,65,83,72,32,102,111,114,32,120,56,54,95,54,52
-DB	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
-DB	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
-DB	114,103,62,0
+	DB	71,72,65,83,72,32,102,111,114,32,120,56,54,95,54,52
+	DB	44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32
+	DB	60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111
+	DB	114,103,62,0
 ALIGN	64
 section	.pdata rdata align=4
 ALIGN	4
@@ -1204,20 +1204,20 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_gcm_init_clmul:
-DB	0x01,0x08,0x03,0x00
-DB	0x08,0x68,0x00,0x00
-DB	0x04,0x22,0x00,0x00
+	DB	0x01,0x08,0x03,0x00
+	DB	0x08,0x68,0x00,0x00
+	DB	0x04,0x22,0x00,0x00
 $L$SEH_info_gcm_ghash_clmul:
-DB	0x01,0x33,0x16,0x00
-DB	0x33,0xf8,0x09,0x00
-DB	0x2e,0xe8,0x08,0x00
-DB	0x29,0xd8,0x07,0x00
-DB	0x24,0xc8,0x06,0x00
-DB	0x1f,0xb8,0x05,0x00
-DB	0x1a,0xa8,0x04,0x00
-DB	0x15,0x98,0x03,0x00
-DB	0x10,0x88,0x02,0x00
-DB	0x0c,0x78,0x01,0x00
-DB	0x08,0x68,0x00,0x00
-DB	0x04,0x01,0x15,0x00
+	DB	0x01,0x33,0x16,0x00
+	DB	0x33,0xf8,0x09,0x00
+	DB	0x2e,0xe8,0x08,0x00
+	DB	0x29,0xd8,0x07,0x00
+	DB	0x24,0xc8,0x06,0x00
+	DB	0x1f,0xb8,0x05,0x00
+	DB	0x1a,0xa8,0x04,0x00
+	DB	0x15,0x98,0x03,0x00
+	DB	0x10,0x88,0x02,0x00
+	DB	0x0c,0x78,0x01,0x00
+	DB	0x08,0x68,0x00,0x00
+	DB	0x04,0x01,0x15,0x00
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/md5-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/md5-x86_64.asm
index 456b51648..7255189be 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/md5-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/md5-x86_64.asm
@@ -793,6 +793,6 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_md5_block_asm_data_order:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/p256-x86_64-asm.asm b/generated-src/win-x86_64/crypto/fipsmodule/p256-x86_64-asm.asm
index c58ea46b6..574b7d123 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/p256-x86_64-asm.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/p256-x86_64-asm.asm
@@ -1073,7 +1073,7 @@ DB	102,72,15,126,210
 	adox	r10,rcx
 	adcx	r14,r14
 	mulx	rbp,rcx,rdx
-DB	0x67
+	DB	0x67
 DB	102,72,15,126,218
 	adox	r11,rax
 	adcx	r15,r15
@@ -1963,7 +1963,7 @@ __ecp_nistz256_sqr_montx:
 	adcx	r13,r13
 	adox	r10,rcx
 	adcx	r14,r14
-DB	0x67
+	DB	0x67
 	mulx	rbp,rcx,rdx
 	mov	rdx,QWORD[((24+128))+rsi]
 	adox	r11,rax
@@ -1971,7 +1971,7 @@ DB	0x67
 	adox	r12,rcx
 	mov	rsi,32
 	adox	r13,rbp
-DB	0x67,0x67
+	DB	0x67,0x67
 	mulx	rax,rcx,rdx
 	mov	rdx,QWORD[(($L$poly+24))]
 	adox	r14,rcx
@@ -2061,17 +2061,17 @@ ecp_nistz256_select_w5:
 	jnz	NEAR $L$avx2_select_w5
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_ecp_nistz256_select_w5:
-DB	0x48,0x8d,0x60,0xe0
-DB	0x0f,0x29,0x70,0xe0
-DB	0x0f,0x29,0x78,0xf0
-DB	0x44,0x0f,0x29,0x00
-DB	0x44,0x0f,0x29,0x48,0x10
-DB	0x44,0x0f,0x29,0x50,0x20
-DB	0x44,0x0f,0x29,0x58,0x30
-DB	0x44,0x0f,0x29,0x60,0x40
-DB	0x44,0x0f,0x29,0x68,0x50
-DB	0x44,0x0f,0x29,0x70,0x60
-DB	0x44,0x0f,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0x0f,0x29,0x70,0xe0
+	DB	0x0f,0x29,0x78,0xf0
+	DB	0x44,0x0f,0x29,0x00
+	DB	0x44,0x0f,0x29,0x48,0x10
+	DB	0x44,0x0f,0x29,0x50,0x20
+	DB	0x44,0x0f,0x29,0x58,0x30
+	DB	0x44,0x0f,0x29,0x60,0x40
+	DB	0x44,0x0f,0x29,0x68,0x50
+	DB	0x44,0x0f,0x29,0x70,0x60
+	DB	0x44,0x0f,0x29,0x78,0x70
 	movdqa	xmm0,XMMWORD[$L$One]
 	movd	xmm1,r8d
 
@@ -2151,17 +2151,17 @@ ecp_nistz256_select_w7:
 	jnz	NEAR $L$avx2_select_w7
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_ecp_nistz256_select_w7:
-DB	0x48,0x8d,0x60,0xe0
-DB	0x0f,0x29,0x70,0xe0
-DB	0x0f,0x29,0x78,0xf0
-DB	0x44,0x0f,0x29,0x00
-DB	0x44,0x0f,0x29,0x48,0x10
-DB	0x44,0x0f,0x29,0x50,0x20
-DB	0x44,0x0f,0x29,0x58,0x30
-DB	0x44,0x0f,0x29,0x60,0x40
-DB	0x44,0x0f,0x29,0x68,0x50
-DB	0x44,0x0f,0x29,0x70,0x60
-DB	0x44,0x0f,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0x0f,0x29,0x70,0xe0
+	DB	0x0f,0x29,0x78,0xf0
+	DB	0x44,0x0f,0x29,0x00
+	DB	0x44,0x0f,0x29,0x48,0x10
+	DB	0x44,0x0f,0x29,0x50,0x20
+	DB	0x44,0x0f,0x29,0x58,0x30
+	DB	0x44,0x0f,0x29,0x60,0x40
+	DB	0x44,0x0f,0x29,0x68,0x50
+	DB	0x44,0x0f,0x29,0x70,0x60
+	DB	0x44,0x0f,0x29,0x78,0x70
 	movdqa	xmm8,XMMWORD[$L$One]
 	movd	xmm1,r8d
 
@@ -2227,17 +2227,17 @@ $L$avx2_select_w5:
 	lea	rax,[((-136))+rsp]
 	mov	r11,rsp
 $L$SEH_begin_ecp_nistz256_avx2_select_w5:
-DB	0x48,0x8d,0x60,0xe0
-DB	0xc5,0xf8,0x29,0x70,0xe0
-DB	0xc5,0xf8,0x29,0x78,0xf0
-DB	0xc5,0x78,0x29,0x40,0x00
-DB	0xc5,0x78,0x29,0x48,0x10
-DB	0xc5,0x78,0x29,0x50,0x20
-DB	0xc5,0x78,0x29,0x58,0x30
-DB	0xc5,0x78,0x29,0x60,0x40
-DB	0xc5,0x78,0x29,0x68,0x50
-DB	0xc5,0x78,0x29,0x70,0x60
-DB	0xc5,0x78,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0xc5,0xf8,0x29,0x70,0xe0
+	DB	0xc5,0xf8,0x29,0x78,0xf0
+	DB	0xc5,0x78,0x29,0x40,0x00
+	DB	0xc5,0x78,0x29,0x48,0x10
+	DB	0xc5,0x78,0x29,0x50,0x20
+	DB	0xc5,0x78,0x29,0x58,0x30
+	DB	0xc5,0x78,0x29,0x60,0x40
+	DB	0xc5,0x78,0x29,0x68,0x50
+	DB	0xc5,0x78,0x29,0x70,0x60
+	DB	0xc5,0x78,0x29,0x78,0x70
 	vmovdqa	ymm0,YMMWORD[$L$Two]
 
 	vpxor	ymm2,ymm2,ymm2
@@ -2317,17 +2317,17 @@ $L$avx2_select_w7:
 	mov	r11,rsp
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_ecp_nistz256_avx2_select_w7:
-DB	0x48,0x8d,0x60,0xe0
-DB	0xc5,0xf8,0x29,0x70,0xe0
-DB	0xc5,0xf8,0x29,0x78,0xf0
-DB	0xc5,0x78,0x29,0x40,0x00
-DB	0xc5,0x78,0x29,0x48,0x10
-DB	0xc5,0x78,0x29,0x50,0x20
-DB	0xc5,0x78,0x29,0x58,0x30
-DB	0xc5,0x78,0x29,0x60,0x40
-DB	0xc5,0x78,0x29,0x68,0x50
-DB	0xc5,0x78,0x29,0x70,0x60
-DB	0xc5,0x78,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0xc5,0xf8,0x29,0x70,0xe0
+	DB	0xc5,0xf8,0x29,0x78,0xf0
+	DB	0xc5,0x78,0x29,0x40,0x00
+	DB	0xc5,0x78,0x29,0x48,0x10
+	DB	0xc5,0x78,0x29,0x50,0x20
+	DB	0xc5,0x78,0x29,0x58,0x30
+	DB	0xc5,0x78,0x29,0x60,0x40
+	DB	0xc5,0x78,0x29,0x68,0x50
+	DB	0xc5,0x78,0x29,0x70,0x60
+	DB	0xc5,0x78,0x29,0x78,0x70
 	vmovdqa	ymm0,YMMWORD[$L$Three]
 
 	vpxor	ymm2,ymm2,ymm2
@@ -2957,7 +2957,7 @@ DB	102,73,15,110,220
 DB	102,73,15,126,208
 DB	102,73,15,126,217
 	or	r12,r8
-DB	0x3e
+	DB	0x3e
 	jnz	NEAR $L$add_proceedq
 
 
@@ -4098,7 +4098,7 @@ DB	102,73,15,110,220
 DB	102,73,15,126,208
 DB	102,73,15,126,217
 	or	r12,r8
-DB	0x3e
+	DB	0x3e
 	jnz	NEAR $L$add_proceedx
 
 
@@ -4890,96 +4890,96 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_ecp_nistz256_neg:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	short_handler wrt ..imagebase
 	DD	$L$neg_body wrt ..imagebase,$L$neg_epilogue wrt ..imagebase
 $L$SEH_info_ecp_nistz256_ord_mul_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$ord_mul_body wrt ..imagebase,$L$ord_mul_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_ord_sqr_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$ord_sqr_body wrt ..imagebase,$L$ord_sqr_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_ord_mul_montx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$ord_mulx_body wrt ..imagebase,$L$ord_mulx_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_ord_sqr_montx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$ord_sqrx_body wrt ..imagebase,$L$ord_sqrx_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_mul_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_sqr_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$sqr_body wrt ..imagebase,$L$sqr_epilogue wrt ..imagebase
 	DD	48,0
 $L$SEH_info_ecp_nistz256_select_wX:
-DB	0x01,0x33,0x16,0x00
-DB	0x33,0xf8,0x09,0x00
-DB	0x2e,0xe8,0x08,0x00
-DB	0x29,0xd8,0x07,0x00
-DB	0x24,0xc8,0x06,0x00
-DB	0x1f,0xb8,0x05,0x00
-DB	0x1a,0xa8,0x04,0x00
-DB	0x15,0x98,0x03,0x00
-DB	0x10,0x88,0x02,0x00
-DB	0x0c,0x78,0x01,0x00
-DB	0x08,0x68,0x00,0x00
-DB	0x04,0x01,0x15,0x00
+	DB	0x01,0x33,0x16,0x00
+	DB	0x33,0xf8,0x09,0x00
+	DB	0x2e,0xe8,0x08,0x00
+	DB	0x29,0xd8,0x07,0x00
+	DB	0x24,0xc8,0x06,0x00
+	DB	0x1f,0xb8,0x05,0x00
+	DB	0x1a,0xa8,0x04,0x00
+	DB	0x15,0x98,0x03,0x00
+	DB	0x10,0x88,0x02,0x00
+	DB	0x0c,0x78,0x01,0x00
+	DB	0x08,0x68,0x00,0x00
+	DB	0x04,0x01,0x15,0x00
 ALIGN	8
 $L$SEH_info_ecp_nistz256_avx2_select_wX:
-DB	0x01,0x36,0x17,0x0b
-DB	0x36,0xf8,0x09,0x00
-DB	0x31,0xe8,0x08,0x00
-DB	0x2c,0xd8,0x07,0x00
-DB	0x27,0xc8,0x06,0x00
-DB	0x22,0xb8,0x05,0x00
-DB	0x1d,0xa8,0x04,0x00
-DB	0x18,0x98,0x03,0x00
-DB	0x13,0x88,0x02,0x00
-DB	0x0e,0x78,0x01,0x00
-DB	0x09,0x68,0x00,0x00
-DB	0x04,0x01,0x15,0x00
-DB	0x00,0xb3,0x00,0x00
+	DB	0x01,0x36,0x17,0x0b
+	DB	0x36,0xf8,0x09,0x00
+	DB	0x31,0xe8,0x08,0x00
+	DB	0x2c,0xd8,0x07,0x00
+	DB	0x27,0xc8,0x06,0x00
+	DB	0x22,0xb8,0x05,0x00
+	DB	0x1d,0xa8,0x04,0x00
+	DB	0x18,0x98,0x03,0x00
+	DB	0x13,0x88,0x02,0x00
+	DB	0x0e,0x78,0x01,0x00
+	DB	0x09,0x68,0x00,0x00
+	DB	0x04,0x01,0x15,0x00
+	DB	0x00,0xb3,0x00,0x00
 ALIGN	8
 $L$SEH_info_ecp_nistz256_point_double:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$point_doubleq_body wrt ..imagebase,$L$point_doubleq_epilogue wrt ..imagebase
 	DD	32*5+56,0
 $L$SEH_info_ecp_nistz256_point_add:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$point_addq_body wrt ..imagebase,$L$point_addq_epilogue wrt ..imagebase
 	DD	32*18+56,0
 $L$SEH_info_ecp_nistz256_point_add_affine:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$add_affineq_body wrt ..imagebase,$L$add_affineq_epilogue wrt ..imagebase
 	DD	32*15+56,0
 ALIGN	8
 $L$SEH_info_ecp_nistz256_point_doublex:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$point_doublex_body wrt ..imagebase,$L$point_doublex_epilogue wrt ..imagebase
 	DD	32*5+56,0
 $L$SEH_info_ecp_nistz256_point_addx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$point_addx_body wrt ..imagebase,$L$point_addx_epilogue wrt ..imagebase
 	DD	32*18+56,0
 $L$SEH_info_ecp_nistz256_point_add_affinex:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	full_handler wrt ..imagebase
 	DD	$L$add_affinex_body wrt ..imagebase,$L$add_affinex_epilogue wrt ..imagebase
 	DD	32*15+56,0
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/rsaz-avx2.asm b/generated-src/win-x86_64/crypto/fipsmodule/rsaz-avx2.asm
index 3ad762e4f..5c94d25e5 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/rsaz-avx2.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/rsaz-avx2.asm
@@ -382,9 +382,9 @@ $L$OOP_REDUCE_1024:
 	imul	rax,QWORD[((8-128))+r13]
 	vpaddq	ymm2,ymm2,ymm14
 	vpmuludq	ymm11,ymm12,YMMWORD[((96-128))+r13]
-DB	0x67
+	DB	0x67
 	add	r11,rax
-DB	0x67
+	DB	0x67
 	mov	rax,rdx
 	imul	rax,QWORD[((16-128))+r13]
 	shr	r10,29
@@ -428,12 +428,12 @@ DB	0x67
 	vpaddq	ymm3,ymm3,ymm14
 	vpmuludq	ymm11,ymm11,ymm13
 	vmovdqu	ymm14,YMMWORD[((192-8-128))+r13]
-DB	0x67
+	DB	0x67
 	mov	r12,rax
 	imul	eax,ecx
 	vpaddq	ymm4,ymm4,ymm11
 	vpmuludq	ymm10,ymm10,ymm13
-DB	0xc4,0x41,0x7e,0x6f,0x9d,0x58,0x00,0x00,0x00
+	DB	0xc4,0x41,0x7e,0x6f,0x9d,0x58,0x00,0x00,0x00
 	and	eax,0x1fffffff
 	vpaddq	ymm5,ymm5,ymm10
 	vpmuludq	ymm14,ymm14,ymm13
@@ -458,12 +458,12 @@ DB	0xc4,0x41,0x7e,0x6f,0x9d,0x58,0x00,0x00,0x00
 	vpaddq	ymm1,ymm1,ymm14
 	vpmuludq	ymm13,ymm13,ymm0
 	vpmuludq	ymm11,ymm11,ymm12
-DB	0xc4,0x41,0x7e,0x6f,0xb5,0xf0,0xff,0xff,0xff
+	DB	0xc4,0x41,0x7e,0x6f,0xb5,0xf0,0xff,0xff,0xff
 	vpaddq	ymm13,ymm13,ymm1
 	vpaddq	ymm2,ymm2,ymm11
 	vpmuludq	ymm10,ymm10,ymm12
 	vmovdqu	ymm11,YMMWORD[((160-16-128))+r13]
-DB	0x67
+	DB	0x67
 	vmovq	rax,xmm13
 	vmovdqu	YMMWORD[rsp],ymm13
 	vpaddq	ymm3,ymm3,ymm10
@@ -490,7 +490,7 @@ DB	0x67
 	and	eax,0x1fffffff
 	vmovd	xmm12,eax
 	vmovdqu	ymm11,YMMWORD[((96-24-128))+r13]
-DB	0x67
+	DB	0x67
 	vpaddq	ymm9,ymm9,ymm10
 	vpbroadcastq	ymm12,xmm12
 
@@ -505,7 +505,7 @@ DB	0x67
 	add	r9,rax
 	mov	rax,rdx
 	imul	rax,QWORD[((8-128))+r13]
-DB	0x67
+	DB	0x67
 	shr	r9,29
 	mov	r11,QWORD[16+rsp]
 	vpaddq	ymm2,ymm3,ymm11
@@ -756,7 +756,7 @@ $L$mul_1024_body:
 
 
 
-DB	0x67,0x67
+	DB	0x67,0x67
 	mov	r15,rsi
 	and	r15,4095
 	add	r15,32*10
@@ -772,7 +772,7 @@ DB	0x67,0x67
 
 	and	r15,4095
 	add	r15,32*10
-DB	0x67,0x67
+	DB	0x67,0x67
 	shr	r15,12
 	jz	NEAR $L$mul_1024_no_n_copy
 
@@ -818,7 +818,7 @@ $L$mul_1024_no_n_copy:
 	vpbroadcastq	ymm10,QWORD[r13]
 	vmovdqu	YMMWORD[rsp],ymm0
 	xor	r9,r9
-DB	0x67
+	DB	0x67
 	xor	r10,r10
 	xor	r11,r11
 	xor	r12,r12
@@ -1690,17 +1690,17 @@ rsaz_1024_gather5_avx2:
 	lea	rax,[((-136))+rsp]
 $L$SEH_begin_rsaz_1024_gather5:
 
-DB	0x48,0x8d,0x60,0xe0
-DB	0xc5,0xf8,0x29,0x70,0xe0
-DB	0xc5,0xf8,0x29,0x78,0xf0
-DB	0xc5,0x78,0x29,0x40,0x00
-DB	0xc5,0x78,0x29,0x48,0x10
-DB	0xc5,0x78,0x29,0x50,0x20
-DB	0xc5,0x78,0x29,0x58,0x30
-DB	0xc5,0x78,0x29,0x60,0x40
-DB	0xc5,0x78,0x29,0x68,0x50
-DB	0xc5,0x78,0x29,0x70,0x60
-DB	0xc5,0x78,0x29,0x78,0x70
+	DB	0x48,0x8d,0x60,0xe0
+	DB	0xc5,0xf8,0x29,0x70,0xe0
+	DB	0xc5,0xf8,0x29,0x78,0xf0
+	DB	0xc5,0x78,0x29,0x40,0x00
+	DB	0xc5,0x78,0x29,0x48,0x10
+	DB	0xc5,0x78,0x29,0x50,0x20
+	DB	0xc5,0x78,0x29,0x58,0x30
+	DB	0xc5,0x78,0x29,0x60,0x40
+	DB	0xc5,0x78,0x29,0x68,0x50
+	DB	0xc5,0x78,0x29,0x70,0x60
+	DB	0xc5,0x78,0x29,0x78,0x70
 	lea	rsp,[((-256))+rsp]
 	and	rsp,-32
 	lea	r10,[$L$inc]
@@ -1948,27 +1948,27 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_rsaz_1024_sqr_avx2:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	rsaz_se_handler wrt ..imagebase
 	DD	$L$sqr_1024_body wrt ..imagebase,$L$sqr_1024_epilogue wrt ..imagebase,$L$sqr_1024_in_tail wrt ..imagebase
 	DD	0
 $L$SEH_info_rsaz_1024_mul_avx2:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	rsaz_se_handler wrt ..imagebase
 	DD	$L$mul_1024_body wrt ..imagebase,$L$mul_1024_epilogue wrt ..imagebase,$L$mul_1024_in_tail wrt ..imagebase
 	DD	0
 $L$SEH_info_rsaz_1024_gather5:
-DB	0x01,0x36,0x17,0x0b
-DB	0x36,0xf8,0x09,0x00
-DB	0x31,0xe8,0x08,0x00
-DB	0x2c,0xd8,0x07,0x00
-DB	0x27,0xc8,0x06,0x00
-DB	0x22,0xb8,0x05,0x00
-DB	0x1d,0xa8,0x04,0x00
-DB	0x18,0x98,0x03,0x00
-DB	0x13,0x88,0x02,0x00
-DB	0x0e,0x78,0x01,0x00
-DB	0x09,0x68,0x00,0x00
-DB	0x04,0x01,0x15,0x00
-DB	0x00,0xb3,0x00,0x00
+	DB	0x01,0x36,0x17,0x0b
+	DB	0x36,0xf8,0x09,0x00
+	DB	0x31,0xe8,0x08,0x00
+	DB	0x2c,0xd8,0x07,0x00
+	DB	0x27,0xc8,0x06,0x00
+	DB	0x22,0xb8,0x05,0x00
+	DB	0x1d,0xa8,0x04,0x00
+	DB	0x18,0x98,0x03,0x00
+	DB	0x13,0x88,0x02,0x00
+	DB	0x0e,0x78,0x01,0x00
+	DB	0x09,0x68,0x00,0x00
+	DB	0x04,0x01,0x15,0x00
+	DB	0x00,0xb3,0x00,0x00
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/sha1-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/sha1-x86_64.asm
index 0e0d3a227..f14f280d3 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/sha1-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/sha1-x86_64.asm
@@ -1324,132 +1324,132 @@ $L$oop_shaext:
 	paddd	xmm1,xmm4
 	cmovne	rsi,r8
 	movdqa	xmm8,xmm0
-DB	15,56,201,229
+	DB	15,56,201,229
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,0
-DB	15,56,200,213
+	DB	15,58,204,193,0
+	DB	15,56,200,213
 	pxor	xmm4,xmm6
-DB	15,56,201,238
-DB	15,56,202,231
+	DB	15,56,201,238
+	DB	15,56,202,231
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,0
-DB	15,56,200,206
+	DB	15,58,204,194,0
+	DB	15,56,200,206
 	pxor	xmm5,xmm7
-DB	15,56,202,236
-DB	15,56,201,247
+	DB	15,56,202,236
+	DB	15,56,201,247
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,0
-DB	15,56,200,215
+	DB	15,58,204,193,0
+	DB	15,56,200,215
 	pxor	xmm6,xmm4
-DB	15,56,201,252
-DB	15,56,202,245
+	DB	15,56,201,252
+	DB	15,56,202,245
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,0
-DB	15,56,200,204
+	DB	15,58,204,194,0
+	DB	15,56,200,204
 	pxor	xmm7,xmm5
-DB	15,56,202,254
-DB	15,56,201,229
+	DB	15,56,202,254
+	DB	15,56,201,229
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,0
-DB	15,56,200,213
+	DB	15,58,204,193,0
+	DB	15,56,200,213
 	pxor	xmm4,xmm6
-DB	15,56,201,238
-DB	15,56,202,231
+	DB	15,56,201,238
+	DB	15,56,202,231
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,1
-DB	15,56,200,206
+	DB	15,58,204,194,1
+	DB	15,56,200,206
 	pxor	xmm5,xmm7
-DB	15,56,202,236
-DB	15,56,201,247
+	DB	15,56,202,236
+	DB	15,56,201,247
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,1
-DB	15,56,200,215
+	DB	15,58,204,193,1
+	DB	15,56,200,215
 	pxor	xmm6,xmm4
-DB	15,56,201,252
-DB	15,56,202,245
+	DB	15,56,201,252
+	DB	15,56,202,245
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,1
-DB	15,56,200,204
+	DB	15,58,204,194,1
+	DB	15,56,200,204
 	pxor	xmm7,xmm5
-DB	15,56,202,254
-DB	15,56,201,229
+	DB	15,56,202,254
+	DB	15,56,201,229
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,1
-DB	15,56,200,213
+	DB	15,58,204,193,1
+	DB	15,56,200,213
 	pxor	xmm4,xmm6
-DB	15,56,201,238
-DB	15,56,202,231
+	DB	15,56,201,238
+	DB	15,56,202,231
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,1
-DB	15,56,200,206
+	DB	15,58,204,194,1
+	DB	15,56,200,206
 	pxor	xmm5,xmm7
-DB	15,56,202,236
-DB	15,56,201,247
+	DB	15,56,202,236
+	DB	15,56,201,247
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,2
-DB	15,56,200,215
+	DB	15,58,204,193,2
+	DB	15,56,200,215
 	pxor	xmm6,xmm4
-DB	15,56,201,252
-DB	15,56,202,245
+	DB	15,56,201,252
+	DB	15,56,202,245
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,2
-DB	15,56,200,204
+	DB	15,58,204,194,2
+	DB	15,56,200,204
 	pxor	xmm7,xmm5
-DB	15,56,202,254
-DB	15,56,201,229
+	DB	15,56,202,254
+	DB	15,56,201,229
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,2
-DB	15,56,200,213
+	DB	15,58,204,193,2
+	DB	15,56,200,213
 	pxor	xmm4,xmm6
-DB	15,56,201,238
-DB	15,56,202,231
+	DB	15,56,201,238
+	DB	15,56,202,231
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,2
-DB	15,56,200,206
+	DB	15,58,204,194,2
+	DB	15,56,200,206
 	pxor	xmm5,xmm7
-DB	15,56,202,236
-DB	15,56,201,247
+	DB	15,56,202,236
+	DB	15,56,201,247
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,2
-DB	15,56,200,215
+	DB	15,58,204,193,2
+	DB	15,56,200,215
 	pxor	xmm6,xmm4
-DB	15,56,201,252
-DB	15,56,202,245
+	DB	15,56,201,252
+	DB	15,56,202,245
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,3
-DB	15,56,200,204
+	DB	15,58,204,194,3
+	DB	15,56,200,204
 	pxor	xmm7,xmm5
-DB	15,56,202,254
+	DB	15,56,202,254
 	movdqu	xmm4,XMMWORD[rsi]
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,3
-DB	15,56,200,213
+	DB	15,58,204,193,3
+	DB	15,56,200,213
 	movdqu	xmm5,XMMWORD[16+rsi]
 DB	102,15,56,0,227
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,3
-DB	15,56,200,206
+	DB	15,58,204,194,3
+	DB	15,56,200,206
 	movdqu	xmm6,XMMWORD[32+rsi]
 DB	102,15,56,0,235
 
 	movdqa	xmm2,xmm0
-DB	15,58,204,193,3
-DB	15,56,200,215
+	DB	15,58,204,193,3
+	DB	15,56,200,215
 	movdqu	xmm7,XMMWORD[48+rsi]
 DB	102,15,56,0,243
 
 	movdqa	xmm1,xmm0
-DB	15,58,204,194,3
-DB	65,15,56,200,201
+	DB	15,58,204,194,3
+	DB	65,15,56,200,201
 DB	102,15,56,0,251
 
 	paddd	xmm0,xmm8
@@ -5566,12 +5566,12 @@ K_XX_XX:
 	DD	0xca62c1d6,0xca62c1d6,0xca62c1d6,0xca62c1d6
 	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
 	DD	0x00010203,0x04050607,0x08090a0b,0x0c0d0e0f
-DB	0xf,0xe,0xd,0xc,0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x2,0x1,0x0
-DB	83,72,65,49,32,98,108,111,99,107,32,116,114,97,110,115
-DB	102,111,114,109,32,102,111,114,32,120,56,54,95,54,52,44
-DB	32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60
-DB	97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114
-DB	103,62,0
+	DB	0xf,0xe,0xd,0xc,0xb,0xa,0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x2,0x1,0x0
+	DB	83,72,65,49,32,98,108,111,99,107,32,116,114,97,110,115
+	DB	102,111,114,109,32,102,111,114,32,120,56,54,95,54,52,44
+	DB	32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60
+	DB	97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114
+	DB	103,62,0
 ALIGN	64
 EXTERN	__imp_RtlVirtualUnwind
 
@@ -5756,21 +5756,21 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_sha1_block_data_order:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 $L$SEH_info_sha1_block_data_order_shaext:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	shaext_handler wrt ..imagebase
 $L$SEH_info_sha1_block_data_order_ssse3:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_ssse3 wrt ..imagebase,$L$epilogue_ssse3 wrt ..imagebase
 $L$SEH_info_sha1_block_data_order_avx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
 $L$SEH_info_sha1_block_data_order_avx2:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	ssse3_handler wrt ..imagebase
 	DD	$L$prologue_avx2 wrt ..imagebase,$L$epilogue_avx2 wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/sha256-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/sha256-x86_64.asm
index c5e03a211..845959739 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/sha256-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/sha256-x86_64.asm
@@ -1791,11 +1791,11 @@ K256:
 	DD	0x03020100,0x0b0a0908,0xffffffff,0xffffffff
 	DD	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
 	DD	0xffffffff,0xffffffff,0x03020100,0x0b0a0908
-DB	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97
-DB	110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54
-DB	52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121
-DB	32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46
-DB	111,114,103,62,0
+	DB	83,72,65,50,53,54,32,98,108,111,99,107,32,116,114,97
+	DB	110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54
+	DB	52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121
+	DB	32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46
+	DB	111,114,103,62,0
 
 ALIGN	64
 sha256_block_data_order_shaext:
@@ -1846,169 +1846,169 @@ DB	102,15,56,0,223
 	paddd	xmm0,xmm3
 DB	102,15,56,0,231
 	movdqa	xmm10,xmm2
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	nop
 	movdqa	xmm9,xmm1
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((32-128))+rcx]
 	paddd	xmm0,xmm4
 DB	102,15,56,0,239
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	lea	rsi,[64+rsi]
-DB	15,56,204,220
-DB	15,56,203,202
+	DB	15,56,204,220
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((64-128))+rcx]
 	paddd	xmm0,xmm5
 DB	102,15,56,0,247
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm6
 DB	102,15,58,15,253,4
 	nop
 	paddd	xmm3,xmm7
-DB	15,56,204,229
-DB	15,56,203,202
+	DB	15,56,204,229
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((96-128))+rcx]
 	paddd	xmm0,xmm6
-DB	15,56,205,222
-DB	15,56,203,209
+	DB	15,56,205,222
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm3
 DB	102,15,58,15,254,4
 	nop
 	paddd	xmm4,xmm7
-DB	15,56,204,238
-DB	15,56,203,202
+	DB	15,56,204,238
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((128-128))+rcx]
 	paddd	xmm0,xmm3
-DB	15,56,205,227
-DB	15,56,203,209
+	DB	15,56,205,227
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm4
 DB	102,15,58,15,251,4
 	nop
 	paddd	xmm5,xmm7
-DB	15,56,204,243
-DB	15,56,203,202
+	DB	15,56,204,243
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((160-128))+rcx]
 	paddd	xmm0,xmm4
-DB	15,56,205,236
-DB	15,56,203,209
+	DB	15,56,205,236
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm5
 DB	102,15,58,15,252,4
 	nop
 	paddd	xmm6,xmm7
-DB	15,56,204,220
-DB	15,56,203,202
+	DB	15,56,204,220
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((192-128))+rcx]
 	paddd	xmm0,xmm5
-DB	15,56,205,245
-DB	15,56,203,209
+	DB	15,56,205,245
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm6
 DB	102,15,58,15,253,4
 	nop
 	paddd	xmm3,xmm7
-DB	15,56,204,229
-DB	15,56,203,202
+	DB	15,56,204,229
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((224-128))+rcx]
 	paddd	xmm0,xmm6
-DB	15,56,205,222
-DB	15,56,203,209
+	DB	15,56,205,222
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm3
 DB	102,15,58,15,254,4
 	nop
 	paddd	xmm4,xmm7
-DB	15,56,204,238
-DB	15,56,203,202
+	DB	15,56,204,238
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((256-128))+rcx]
 	paddd	xmm0,xmm3
-DB	15,56,205,227
-DB	15,56,203,209
+	DB	15,56,205,227
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm4
 DB	102,15,58,15,251,4
 	nop
 	paddd	xmm5,xmm7
-DB	15,56,204,243
-DB	15,56,203,202
+	DB	15,56,204,243
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((288-128))+rcx]
 	paddd	xmm0,xmm4
-DB	15,56,205,236
-DB	15,56,203,209
+	DB	15,56,205,236
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm5
 DB	102,15,58,15,252,4
 	nop
 	paddd	xmm6,xmm7
-DB	15,56,204,220
-DB	15,56,203,202
+	DB	15,56,204,220
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((320-128))+rcx]
 	paddd	xmm0,xmm5
-DB	15,56,205,245
-DB	15,56,203,209
+	DB	15,56,205,245
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm6
 DB	102,15,58,15,253,4
 	nop
 	paddd	xmm3,xmm7
-DB	15,56,204,229
-DB	15,56,203,202
+	DB	15,56,204,229
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((352-128))+rcx]
 	paddd	xmm0,xmm6
-DB	15,56,205,222
-DB	15,56,203,209
+	DB	15,56,205,222
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm3
 DB	102,15,58,15,254,4
 	nop
 	paddd	xmm4,xmm7
-DB	15,56,204,238
-DB	15,56,203,202
+	DB	15,56,204,238
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((384-128))+rcx]
 	paddd	xmm0,xmm3
-DB	15,56,205,227
-DB	15,56,203,209
+	DB	15,56,205,227
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm4
 DB	102,15,58,15,251,4
 	nop
 	paddd	xmm5,xmm7
-DB	15,56,204,243
-DB	15,56,203,202
+	DB	15,56,204,243
+	DB	15,56,203,202
 	movdqa	xmm0,XMMWORD[((416-128))+rcx]
 	paddd	xmm0,xmm4
-DB	15,56,205,236
-DB	15,56,203,209
+	DB	15,56,205,236
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	movdqa	xmm7,xmm5
 DB	102,15,58,15,252,4
-DB	15,56,203,202
+	DB	15,56,203,202
 	paddd	xmm6,xmm7
 
 	movdqa	xmm0,XMMWORD[((448-128))+rcx]
 	paddd	xmm0,xmm5
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
-DB	15,56,205,245
+	DB	15,56,205,245
 	movdqa	xmm7,xmm8
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	movdqa	xmm0,XMMWORD[((480-128))+rcx]
 	paddd	xmm0,xmm6
 	nop
-DB	15,56,203,209
+	DB	15,56,203,209
 	pshufd	xmm0,xmm0,0x0e
 	dec	rdx
 	nop
-DB	15,56,203,202
+	DB	15,56,203,202
 
 	paddd	xmm2,xmm10
 	paddd	xmm1,xmm9
@@ -4405,18 +4405,18 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_sha256_block_data_order:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue wrt ..imagebase,$L$epilogue wrt ..imagebase
 $L$SEH_info_sha256_block_data_order_shaext:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	shaext_handler wrt ..imagebase
 $L$SEH_info_sha256_block_data_order_ssse3:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_ssse3 wrt ..imagebase,$L$epilogue_ssse3 wrt ..imagebase
 $L$SEH_info_sha256_block_data_order_avx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/sha512-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/sha512-x86_64.asm
index 3668b4612..134d58047 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/sha512-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/sha512-x86_64.asm
@@ -1831,11 +1831,11 @@ K512:
 
 	DQ	0x0001020304050607,0x08090a0b0c0d0e0f
 	DQ	0x0001020304050607,0x08090a0b0c0d0e0f
-DB	83,72,65,53,49,50,32,98,108,111,99,107,32,116,114,97
-DB	110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54
-DB	52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121
-DB	32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46
-DB	111,114,103,62,0
+	DB	83,72,65,53,49,50,32,98,108,111,99,107,32,116,114,97
+	DB	110,115,102,111,114,109,32,102,111,114,32,120,56,54,95,54
+	DB	52,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121
+	DB	32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46
+	DB	111,114,103,62,0
 
 ALIGN	64
 sha512_block_data_order_avx:
@@ -3131,11 +3131,11 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_sha512_block_data_order:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue wrt ..imagebase,$L$epilogue wrt ..imagebase
 $L$SEH_info_sha512_block_data_order_avx:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$prologue_avx wrt ..imagebase,$L$epilogue_avx wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/vpaes-x86_64.asm b/generated-src/win-x86_64/crypto/fipsmodule/vpaes-x86_64.asm
index ca8939d98..3d3c528fe 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/vpaes-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/vpaes-x86_64.asm
@@ -1333,11 +1333,11 @@ $L$ctr_add_one:
 $L$ctr_add_two:
 	DQ	0x0000000000000000,0x0000000200000000
 
-DB	86,101,99,116,111,114,32,80,101,114,109,117,116,97,116,105
-DB	111,110,32,65,69,83,32,102,111,114,32,120,56,54,95,54
-DB	52,47,83,83,83,69,51,44,32,77,105,107,101,32,72,97
-DB	109,98,117,114,103,32,40,83,116,97,110,102,111,114,100,32
-DB	85,110,105,118,101,114,115,105,116,121,41,0
+	DB	86,101,99,116,111,114,32,80,101,114,109,117,116,97,116,105
+	DB	111,110,32,65,69,83,32,102,111,114,32,120,56,54,95,54
+	DB	52,47,83,83,83,69,51,44,32,77,105,107,101,32,72,97
+	DB	109,98,117,114,103,32,40,83,116,97,110,102,111,114,100,32
+	DB	85,110,105,118,101,114,115,105,116,121,41,0
 ALIGN	64
 
 EXTERN	__imp_RtlVirtualUnwind
@@ -1448,27 +1448,27 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_vpaes_set_encrypt_key:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$enc_key_body wrt ..imagebase,$L$enc_key_epilogue wrt ..imagebase
 $L$SEH_info_vpaes_set_decrypt_key:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$dec_key_body wrt ..imagebase,$L$dec_key_epilogue wrt ..imagebase
 $L$SEH_info_vpaes_encrypt:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$enc_body wrt ..imagebase,$L$enc_epilogue wrt ..imagebase
 $L$SEH_info_vpaes_decrypt:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$dec_body wrt ..imagebase,$L$dec_epilogue wrt ..imagebase
 $L$SEH_info_vpaes_cbc_encrypt:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$cbc_body wrt ..imagebase,$L$cbc_epilogue wrt ..imagebase
 $L$SEH_info_vpaes_ctr32_encrypt_blocks:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	se_handler wrt ..imagebase
 	DD	$L$ctr32_body wrt ..imagebase,$L$ctr32_epilogue wrt ..imagebase
 %endif
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont.asm b/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont.asm
index 7e0cf1b32..faadf51a0 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont.asm
@@ -1047,7 +1047,7 @@ $L$mulx4x_body:
 	mulx	r11,rax,QWORD[8+rcx]
 	adcx	r10,rax
 	adox	r11,r12
-DB	0xc4,0x62,0xfb,0xf6,0xa1,0x10,0x00,0x00,0x00
+	DB	0xc4,0x62,0xfb,0xf6,0xa1,0x10,0x00,0x00,0x00
 	mov	rdi,QWORD[48+rsp]
 	mov	QWORD[((-32))+rbx],r10
 	adcx	r11,rax
@@ -1072,7 +1072,7 @@ $L$mulx4x_1st:
 	mulx	rax,r12,QWORD[16+rsi]
 	adcx	r12,r14
 	mulx	r14,r13,QWORD[24+rsi]
-DB	0x67,0x67
+	DB	0x67,0x67
 	mov	rdx,r8
 	adcx	r13,rax
 	adcx	r14,rbp
@@ -1306,11 +1306,11 @@ $L$mulx4x_epilogue:
 	DB	0F3h,0C3h		;repret
 
 $L$SEH_end_bn_mulx4x_mont:
-DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
-DB	112,108,105,99,97,116,105,111,110,32,102,111,114,32,120,56
-DB	54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83
-DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
-DB	115,108,46,111,114,103,62,0
+	DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
+	DB	112,108,105,99,97,116,105,111,110,32,102,111,114,32,120,56
+	DB	54,95,54,52,44,32,67,82,89,80,84,79,71,65,77,83
+	DB	32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115
+	DB	115,108,46,111,114,103,62,0
 ALIGN	16
 EXTERN	__imp_RtlVirtualUnwind
 
@@ -1463,20 +1463,20 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_bn_mul_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
 $L$SEH_info_bn_mul4x_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$mul4x_body wrt ..imagebase,$L$mul4x_epilogue wrt ..imagebase
 $L$SEH_info_bn_sqr8x_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	sqr_handler wrt ..imagebase
 	DD	$L$sqr8x_prologue wrt ..imagebase,$L$sqr8x_body wrt ..imagebase,$L$sqr8x_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_mulx4x_mont:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	sqr_handler wrt ..imagebase
 	DD	$L$mulx4x_prologue wrt ..imagebase,$L$mulx4x_body wrt ..imagebase,$L$mulx4x_epilogue wrt ..imagebase
 ALIGN	8
diff --git a/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont5.asm b/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont5.asm
index c4e7fd885..f628a5708 100644
--- a/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont5.asm
+++ b/generated-src/win-x86_64/crypto/fipsmodule/x86_64-mont5.asm
@@ -102,7 +102,7 @@ $L$mul_body:
 	movdqa	xmm2,xmm1
 	paddd	xmm1,xmm0
 	pcmpeqd	xmm0,xmm5
-DB	0x67
+	DB	0x67
 	movdqa	xmm3,xmm4
 	paddd	xmm2,xmm1
 	pcmpeqd	xmm1,xmm5
@@ -166,7 +166,7 @@ DB	0x67
 	movdqa	XMMWORD[304+r10],xmm0
 
 	paddd	xmm3,xmm2
-DB	0x67
+	DB	0x67
 	pcmpeqd	xmm2,xmm5
 	movdqa	XMMWORD[320+r10],xmm1
 
@@ -487,7 +487,7 @@ $L$SEH_begin_bn_mul4x_mont_gather5:
 
 
 
-DB	0x67
+	DB	0x67
 	mov	rax,rsp
 
 $L$mul4x_enter:
@@ -508,7 +508,7 @@ $L$mul4x_enter:
 
 $L$mul4x_prologue:
 
-DB	0x67
+	DB	0x67
 	shl	r9d,3
 	lea	r10,[r9*2+r9]
 	neg	r9
@@ -607,11 +607,11 @@ mul4x_internal:
 
 	pshufd	xmm5,xmm5,0
 	movdqa	xmm4,xmm1
-DB	0x67,0x67
+	DB	0x67,0x67
 	movdqa	xmm2,xmm1
 	paddd	xmm1,xmm0
 	pcmpeqd	xmm0,xmm5
-DB	0x67
+	DB	0x67
 	movdqa	xmm3,xmm4
 	paddd	xmm2,xmm1
 	pcmpeqd	xmm1,xmm5
@@ -675,7 +675,7 @@ DB	0x67
 	movdqa	XMMWORD[304+r10],xmm0
 
 	paddd	xmm3,xmm2
-DB	0x67
+	DB	0x67
 	pcmpeqd	xmm2,xmm5
 	movdqa	XMMWORD[320+r10],xmm1
 
@@ -1538,7 +1538,7 @@ $L$sqr4x_inner:
 	add	r13,QWORD[rcx*1+rdi]
 	adc	r12,0
 
-DB	0x67
+	DB	0x67
 	mul	r14
 	add	r11,rax
 	mov	rax,rbx
@@ -1570,7 +1570,7 @@ DB	0x67
 	cmp	rcx,0
 	jne	NEAR $L$sqr4x_inner
 
-DB	0x67
+	DB	0x67
 	mul	r15
 	add	r13,rax
 	adc	rdx,0
@@ -1763,7 +1763,7 @@ $L$sqr4x_shift_n_add:
 	jnz	NEAR $L$sqr4x_shift_n_add
 
 	lea	r12,[r10*2+r14]
-DB	0x67
+	DB	0x67
 	shr	r10,63
 	lea	r13,[r11*2+rcx]
 	shr	r11,63
@@ -1805,7 +1805,7 @@ __bn_sqr8x_reduction:
 ALIGN	32
 $L$8x_reduction_loop:
 	lea	rdi,[r9*1+rdi]
-DB	0x66
+	DB	0x66
 	mov	rbx,QWORD[rdi]
 	mov	r9,QWORD[8+rdi]
 	mov	r10,QWORD[16+rdi]
@@ -1817,7 +1817,7 @@ DB	0x66
 	mov	QWORD[rdx],rax
 	lea	rdi,[64+rdi]
 
-DB	0x67
+	DB	0x67
 	mov	r8,rbx
 	imul	rbx,QWORD[((32+8))+rsp]
 	mov	rax,QWORD[rbp]
@@ -1901,7 +1901,7 @@ $L$8x_reduce:
 	cmp	rbp,QWORD[((0+8))+rsp]
 	jae	NEAR $L$8x_no_tail
 
-DB	0x66
+	DB	0x66
 	add	r8,QWORD[rdi]
 	adc	r9,QWORD[8+rdi]
 	adc	r10,QWORD[16+rdi]
@@ -2258,9 +2258,9 @@ mulx4x_internal:
 
 	pshufd	xmm5,xmm5,0
 	movdqa	xmm4,xmm1
-DB	0x67
+	DB	0x67
 	movdqa	xmm2,xmm1
-DB	0x67
+	DB	0x67
 	paddd	xmm1,xmm0
 	pcmpeqd	xmm0,xmm5
 	movdqa	xmm3,xmm4
@@ -2321,7 +2321,7 @@ DB	0x67
 	pcmpeqd	xmm0,xmm5
 	movdqa	XMMWORD[288+r10],xmm3
 	movdqa	xmm3,xmm4
-DB	0x67
+	DB	0x67
 	paddd	xmm2,xmm1
 	pcmpeqd	xmm1,xmm5
 	movdqa	XMMWORD[304+r10],xmm0
@@ -2434,7 +2434,7 @@ $L$mulx4x_1st:
 	mulx	rax,r12,QWORD[16+rsi]
 	adcx	r12,r14
 	mulx	r14,r13,QWORD[24+rsi]
-DB	0x67,0x67
+	DB	0x67,0x67
 	mov	rdx,r8
 	adcx	r13,rax
 	adcx	r14,rbp
@@ -2477,7 +2477,7 @@ ALIGN	32
 $L$mulx4x_outer:
 	lea	r10,[((16-256))+rbx]
 	pxor	xmm4,xmm4
-DB	0x67,0x67
+	DB	0x67,0x67
 	pxor	xmm5,xmm5
 	movdqa	xmm0,XMMWORD[((-128))+rdi]
 	movdqa	xmm1,XMMWORD[((-112))+rdi]
@@ -2863,9 +2863,9 @@ __bn_sqrx8x_internal:
 	jmp	NEAR $L$sqr8x_zero_start
 
 ALIGN	32
-DB	0x66,0x66,0x66,0x2e,0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00
+	DB	0x66,0x66,0x66,0x2e,0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00
 $L$sqrx8x_zero:
-DB	0x3e
+	DB	0x3e
 	movdqa	XMMWORD[rdi],xmm0
 	movdqa	XMMWORD[16+rdi],xmm0
 	movdqa	XMMWORD[32+rdi],xmm0
@@ -2899,10 +2899,10 @@ $L$sqrx8x_outer_loop:
 	mulx	rax,r9,QWORD[16+rsi]
 	adcx	r9,r10
 	adox	r11,rax
-DB	0xc4,0xe2,0xab,0xf6,0x86,0x18,0x00,0x00,0x00
+	DB	0xc4,0xe2,0xab,0xf6,0x86,0x18,0x00,0x00,0x00
 	adcx	r10,r11
 	adox	r12,rax
-DB	0xc4,0xe2,0xa3,0xf6,0x86,0x20,0x00,0x00,0x00
+	DB	0xc4,0xe2,0xa3,0xf6,0x86,0x20,0x00,0x00,0x00
 	adcx	r11,r12
 	adox	r13,rax
 	mulx	rax,r12,QWORD[40+rsi]
@@ -2929,13 +2929,13 @@ DB	0xc4,0xe2,0xa3,0xf6,0x86,0x20,0x00,0x00,0x00
 	mulx	rbx,r10,QWORD[32+rsi]
 	adcx	r9,r11
 	adox	r10,rax
-DB	0xc4,0xe2,0xa3,0xf6,0x86,0x28,0x00,0x00,0x00
+	DB	0xc4,0xe2,0xa3,0xf6,0x86,0x28,0x00,0x00,0x00
 	adcx	r10,r12
 	adox	r11,rbx
-DB	0xc4,0xe2,0x9b,0xf6,0x9e,0x30,0x00,0x00,0x00
+	DB	0xc4,0xe2,0x9b,0xf6,0x9e,0x30,0x00,0x00,0x00
 	adcx	r11,r13
 	adox	r12,r14
-DB	0xc4,0x62,0x93,0xf6,0xb6,0x38,0x00,0x00,0x00
+	DB	0xc4,0x62,0x93,0xf6,0xb6,0x38,0x00,0x00,0x00
 	mov	rdx,QWORD[16+rsi]
 	adcx	r12,rax
 	adox	r13,rbx
@@ -2953,11 +2953,11 @@ DB	0xc4,0x62,0x93,0xf6,0xb6,0x38,0x00,0x00,0x00
 	mulx	rbx,r10,QWORD[40+rsi]
 	adcx	r9,r11
 	adox	r10,rax
-DB	0xc4,0xe2,0xa3,0xf6,0x86,0x30,0x00,0x00,0x00
+	DB	0xc4,0xe2,0xa3,0xf6,0x86,0x30,0x00,0x00,0x00
 	adcx	r10,r12
 	adox	r11,r13
-DB	0xc4,0x62,0x9b,0xf6,0xae,0x38,0x00,0x00,0x00
-DB	0x3e
+	DB	0xc4,0x62,0x9b,0xf6,0xae,0x38,0x00,0x00,0x00
+	DB	0x3e
 	mov	rdx,QWORD[24+rsi]
 	adcx	r11,rbx
 	adox	r12,rax
@@ -3009,7 +3009,7 @@ DB	0x3e
 	adcx	r12,rax
 	adox	r13,rbp
 
-DB	0x67,0x67
+	DB	0x67,0x67
 	mulx	r14,r8,r8
 	adcx	r13,r8
 	adcx	r14,rbp
@@ -3059,7 +3059,7 @@ $L$sqrx8x_loop:
 	adcx	r10,rax
 	adox	r11,r12
 
-DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
+	DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
 	adcx	r11,rax
 	adox	r12,r13
 
@@ -3073,13 +3073,13 @@ DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
 	adcx	r13,rax
 	adox	r14,r15
 
-DB	0xc4,0x62,0xfb,0xf6,0xbd,0x38,0x00,0x00,0x00
+	DB	0xc4,0x62,0xfb,0xf6,0xbd,0x38,0x00,0x00,0x00
 	mov	rdx,QWORD[8+rcx*8+rsi]
 	adcx	r14,rax
 	adox	r15,rbx
 	adcx	r15,rbx
 
-DB	0x67
+	DB	0x67
 	inc	rcx
 	jnz	NEAR $L$sqrx8x_loop
 
@@ -3089,7 +3089,7 @@ DB	0x67
 	je	NEAR $L$sqrx8x_break
 
 	sub	rbx,QWORD[((16+8))+rsp]
-DB	0x66
+	DB	0x66
 	mov	rdx,QWORD[((-64))+rsi]
 	adcx	r8,QWORD[rdi]
 	adcx	r9,QWORD[8+rdi]
@@ -3100,7 +3100,7 @@ DB	0x66
 	adc	r14,QWORD[48+rdi]
 	adc	r15,QWORD[56+rdi]
 	lea	rdi,[64+rdi]
-DB	0x67
+	DB	0x67
 	sbb	rax,rax
 	xor	ebx,ebx
 	mov	QWORD[((16+8))+rsp],rax
@@ -3166,8 +3166,8 @@ $L$sqrx4x_shift_n_add:
 	mulx	rbx,rax,rdx
 	adox	r12,r12
 	adcx	rax,r10
-DB	0x48,0x8b,0x94,0x0e,0x08,0x00,0x00,0x00
-DB	0x4c,0x8b,0x97,0x20,0x00,0x00,0x00
+	DB	0x48,0x8b,0x94,0x0e,0x08,0x00,0x00,0x00
+	DB	0x4c,0x8b,0x97,0x20,0x00,0x00,0x00
 	adox	r13,r13
 	adcx	rbx,r11
 	mov	r11,QWORD[40+rdi]
@@ -3201,7 +3201,7 @@ DB	0x4c,0x8b,0x97,0x20,0x00,0x00,0x00
 	adox	r10,r10
 	adcx	rax,r12
 	jrcxz	$L$sqrx4x_shift_n_add_break
-DB	0x48,0x8b,0x94,0x0e,0x00,0x00,0x00,0x00
+	DB	0x48,0x8b,0x94,0x0e,0x00,0x00,0x00,0x00
 	adox	r11,r11
 	adcx	rbx,r13
 	mov	r12,QWORD[80+rdi]
@@ -3268,7 +3268,7 @@ $L$sqrx8x_reduce:
 	adcx	r10,rbx
 	adox	r11,r12
 
-DB	0xc4,0x62,0xe3,0xf6,0xa5,0x20,0x00,0x00,0x00
+	DB	0xc4,0x62,0xe3,0xf6,0xa5,0x20,0x00,0x00,0x00
 	mov	rax,rdx
 	mov	rdx,r8
 	adcx	r11,rbx
@@ -3292,7 +3292,7 @@ DB	0xc4,0x62,0xe3,0xf6,0xa5,0x20,0x00,0x00,0x00
 	adox	r15,rsi
 	adcx	r15,rsi
 
-DB	0x67,0x67,0x67
+	DB	0x67,0x67,0x67
 	inc	rcx
 	jnz	NEAR $L$sqrx8x_reduce
 
@@ -3337,7 +3337,7 @@ $L$sqrx8x_tail:
 	adcx	r10,rax
 	adox	r11,r12
 
-DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
+	DB	0xc4,0x62,0xfb,0xf6,0xa5,0x20,0x00,0x00,0x00
 	adcx	r11,rax
 	adox	r12,r13
 
@@ -3518,9 +3518,9 @@ bn_gather5:
 
 $L$SEH_begin_bn_gather5:
 
-DB	0x4c,0x8d,0x14,0x24
+	DB	0x4c,0x8d,0x14,0x24
 
-DB	0x48,0x81,0xec,0x08,0x01,0x00,0x00
+	DB	0x48,0x81,0xec,0x08,0x01,0x00,0x00
 	lea	rax,[$L$inc]
 	and	rsp,-16
 
@@ -3683,12 +3683,12 @@ ALIGN	64
 $L$inc:
 	DD	0,0,1,1
 	DD	2,2,2,2
-DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
-DB	112,108,105,99,97,116,105,111,110,32,119,105,116,104,32,115
-DB	99,97,116,116,101,114,47,103,97,116,104,101,114,32,102,111
-DB	114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79
-DB	71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111
-DB	112,101,110,115,115,108,46,111,114,103,62,0
+	DB	77,111,110,116,103,111,109,101,114,121,32,77,117,108,116,105
+	DB	112,108,105,99,97,116,105,111,110,32,119,105,116,104,32,115
+	DB	99,97,116,116,101,114,47,103,97,116,104,101,114,32,102,111
+	DB	114,32,120,56,54,95,54,52,44,32,67,82,89,80,84,79
+	DB	71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111
+	DB	112,101,110,115,115,108,46,111,114,103,62,0
 EXTERN	__imp_RtlVirtualUnwind
 
 ALIGN	16
@@ -3819,33 +3819,33 @@ ALIGN	4
 section	.xdata rdata align=8
 ALIGN	8
 $L$SEH_info_bn_mul_mont_gather5:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$mul_body wrt ..imagebase,$L$mul_body wrt ..imagebase,$L$mul_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_mul4x_mont_gather5:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$mul4x_prologue wrt ..imagebase,$L$mul4x_body wrt ..imagebase,$L$mul4x_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_power5:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$power5_prologue wrt ..imagebase,$L$power5_body wrt ..imagebase,$L$power5_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_mulx4x_mont_gather5:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$mulx4x_prologue wrt ..imagebase,$L$mulx4x_body wrt ..imagebase,$L$mulx4x_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_powerx5:
-DB	9,0,0,0
+	DB	9,0,0,0
 	DD	mul_handler wrt ..imagebase
 	DD	$L$powerx5_prologue wrt ..imagebase,$L$powerx5_body wrt ..imagebase,$L$powerx5_epilogue wrt ..imagebase
 ALIGN	8
 $L$SEH_info_bn_gather5:
-DB	0x01,0x0b,0x03,0x0a
-DB	0x0b,0x01,0x21,0x00
-DB	0x04,0xa3,0x00,0x00
+	DB	0x01,0x0b,0x03,0x0a
+	DB	0x0b,0x01,0x21,0x00
+	DB	0x04,0xa3,0x00,0x00
 ALIGN	8
 %endif
diff --git a/generated-src/win-x86_64/crypto/test/trampoline-x86_64.asm b/generated-src/win-x86_64/crypto/test/trampoline-x86_64.asm
index b5e60f704..ad36f4ab8 100644
--- a/generated-src/win-x86_64/crypto/test/trampoline-x86_64.asm
+++ b/generated-src/win-x86_64/crypto/test/trampoline-x86_64.asm
@@ -589,96 +589,96 @@ section	.xdata rdata align=8
 ALIGN	8
 $L$abi_test_trampoline_seh_info:
 
-DB	1
-DB	$L$abi_test_trampoline_seh_prolog_end-$L$abi_test_trampoline_seh_begin
-DB	38
-DB	0
-DB	$L$abi_test_trampoline_seh_prolog_xmm15-$L$abi_test_trampoline_seh_begin
-DB	248
+	DB	1
+	DB	$L$abi_test_trampoline_seh_prolog_end-$L$abi_test_trampoline_seh_begin
+	DB	38
+	DB	0
+	DB	$L$abi_test_trampoline_seh_prolog_xmm15-$L$abi_test_trampoline_seh_begin
+	DB	248
 	DW	20
-DB	$L$abi_test_trampoline_seh_prolog_xmm14-$L$abi_test_trampoline_seh_begin
-DB	232
+	DB	$L$abi_test_trampoline_seh_prolog_xmm14-$L$abi_test_trampoline_seh_begin
+	DB	232
 	DW	19
-DB	$L$abi_test_trampoline_seh_prolog_xmm13-$L$abi_test_trampoline_seh_begin
-DB	216
+	DB	$L$abi_test_trampoline_seh_prolog_xmm13-$L$abi_test_trampoline_seh_begin
+	DB	216
 	DW	18
-DB	$L$abi_test_trampoline_seh_prolog_xmm12-$L$abi_test_trampoline_seh_begin
-DB	200
+	DB	$L$abi_test_trampoline_seh_prolog_xmm12-$L$abi_test_trampoline_seh_begin
+	DB	200
 	DW	17
-DB	$L$abi_test_trampoline_seh_prolog_xmm11-$L$abi_test_trampoline_seh_begin
-DB	184
+	DB	$L$abi_test_trampoline_seh_prolog_xmm11-$L$abi_test_trampoline_seh_begin
+	DB	184
 	DW	16
-DB	$L$abi_test_trampoline_seh_prolog_xmm10-$L$abi_test_trampoline_seh_begin
-DB	168
+	DB	$L$abi_test_trampoline_seh_prolog_xmm10-$L$abi_test_trampoline_seh_begin
+	DB	168
 	DW	15
-DB	$L$abi_test_trampoline_seh_prolog_xmm9-$L$abi_test_trampoline_seh_begin
-DB	152
+	DB	$L$abi_test_trampoline_seh_prolog_xmm9-$L$abi_test_trampoline_seh_begin
+	DB	152
 	DW	14
-DB	$L$abi_test_trampoline_seh_prolog_xmm8-$L$abi_test_trampoline_seh_begin
-DB	136
+	DB	$L$abi_test_trampoline_seh_prolog_xmm8-$L$abi_test_trampoline_seh_begin
+	DB	136
 	DW	13
-DB	$L$abi_test_trampoline_seh_prolog_xmm7-$L$abi_test_trampoline_seh_begin
-DB	120
+	DB	$L$abi_test_trampoline_seh_prolog_xmm7-$L$abi_test_trampoline_seh_begin
+	DB	120
 	DW	12
-DB	$L$abi_test_trampoline_seh_prolog_xmm6-$L$abi_test_trampoline_seh_begin
-DB	104
+	DB	$L$abi_test_trampoline_seh_prolog_xmm6-$L$abi_test_trampoline_seh_begin
+	DB	104
 	DW	11
-DB	$L$abi_test_trampoline_seh_prolog_r15-$L$abi_test_trampoline_seh_begin
-DB	244
+	DB	$L$abi_test_trampoline_seh_prolog_r15-$L$abi_test_trampoline_seh_begin
+	DB	244
 	DW	21
-DB	$L$abi_test_trampoline_seh_prolog_r14-$L$abi_test_trampoline_seh_begin
-DB	228
+	DB	$L$abi_test_trampoline_seh_prolog_r14-$L$abi_test_trampoline_seh_begin
+	DB	228
 	DW	20
-DB	$L$abi_test_trampoline_seh_prolog_r13-$L$abi_test_trampoline_seh_begin
-DB	212
+	DB	$L$abi_test_trampoline_seh_prolog_r13-$L$abi_test_trampoline_seh_begin
+	DB	212
 	DW	19
-DB	$L$abi_test_trampoline_seh_prolog_r12-$L$abi_test_trampoline_seh_begin
-DB	196
+	DB	$L$abi_test_trampoline_seh_prolog_r12-$L$abi_test_trampoline_seh_begin
+	DB	196
 	DW	18
-DB	$L$abi_test_trampoline_seh_prolog_rsi-$L$abi_test_trampoline_seh_begin
-DB	100
+	DB	$L$abi_test_trampoline_seh_prolog_rsi-$L$abi_test_trampoline_seh_begin
+	DB	100
 	DW	17
-DB	$L$abi_test_trampoline_seh_prolog_rdi-$L$abi_test_trampoline_seh_begin
-DB	116
+	DB	$L$abi_test_trampoline_seh_prolog_rdi-$L$abi_test_trampoline_seh_begin
+	DB	116
 	DW	16
-DB	$L$abi_test_trampoline_seh_prolog_rbp-$L$abi_test_trampoline_seh_begin
-DB	84
+	DB	$L$abi_test_trampoline_seh_prolog_rbp-$L$abi_test_trampoline_seh_begin
+	DB	84
 	DW	15
-DB	$L$abi_test_trampoline_seh_prolog_rbx-$L$abi_test_trampoline_seh_begin
-DB	52
+	DB	$L$abi_test_trampoline_seh_prolog_rbx-$L$abi_test_trampoline_seh_begin
+	DB	52
 	DW	14
-DB	$L$abi_test_trampoline_seh_prolog_alloc-$L$abi_test_trampoline_seh_begin
-DB	1
+	DB	$L$abi_test_trampoline_seh_prolog_alloc-$L$abi_test_trampoline_seh_begin
+	DB	1
 	DW	43
 
 
 ALIGN	8
 $L$abi_test_bad_unwind_wrong_register_seh_info:
-DB	1
-DB	$L$abi_test_bad_unwind_wrong_register_seh_push_r13-$L$abi_test_bad_unwind_wrong_register_seh_begin
-DB	1
-DB	0
+	DB	1
+	DB	$L$abi_test_bad_unwind_wrong_register_seh_push_r13-$L$abi_test_bad_unwind_wrong_register_seh_begin
+	DB	1
+	DB	0
 
-DB	$L$abi_test_bad_unwind_wrong_register_seh_push_r13-$L$abi_test_bad_unwind_wrong_register_seh_begin
-DB	208
+	DB	$L$abi_test_bad_unwind_wrong_register_seh_push_r13-$L$abi_test_bad_unwind_wrong_register_seh_begin
+	DB	208
 
 ALIGN	8
 $L$abi_test_bad_unwind_temporary_seh_info:
-DB	1
-DB	$L$abi_test_bad_unwind_temporary_seh_push_r12-$L$abi_test_bad_unwind_temporary_seh_begin
-DB	1
-DB	0
+	DB	1
+	DB	$L$abi_test_bad_unwind_temporary_seh_push_r12-$L$abi_test_bad_unwind_temporary_seh_begin
+	DB	1
+	DB	0
 
-DB	$L$abi_test_bad_unwind_temporary_seh_push_r12-$L$abi_test_bad_unwind_temporary_seh_begin
-DB	192
+	DB	$L$abi_test_bad_unwind_temporary_seh_push_r12-$L$abi_test_bad_unwind_temporary_seh_begin
+	DB	192
 
 ALIGN	8
 $L$abi_test_bad_unwind_epilog_seh_info:
-DB	1
-DB	$L$abi_test_bad_unwind_epilog_seh_push_r12-$L$abi_test_bad_unwind_epilog_seh_begin
-DB	1
-DB	0
+	DB	1
+	DB	$L$abi_test_bad_unwind_epilog_seh_push_r12-$L$abi_test_bad_unwind_epilog_seh_begin
+	DB	1
+	DB	0
 
-DB	$L$abi_test_bad_unwind_epilog_seh_push_r12-$L$abi_test_bad_unwind_epilog_seh_begin
-DB	192
+	DB	$L$abi_test_bad_unwind_epilog_seh_push_r12-$L$abi_test_bad_unwind_epilog_seh_begin
+	DB	192
 %endif
