From a39896d3e8d6cd395478533f0c2186a9b26fbdb0 Mon Sep 17 00:00:00 2001
From: John Harrison <jargh@amazon.com>
Date: Fri, 3 Sep 2021 19:21:47 -0700
Subject: [PATCH] Remove constant expressions and make other small tweaks

This gets rid of explicit numeric expressions of the form "8*7",
as well as making a few other minor tweaks (none of them changing
the actual object files except for symbols). All these are aimed
at making subsequent text processing of the sources simpler.

s2n-bignum original commit: https://github.com/awslabs/s2n-bignum/commit/e636541dcb916f7ace10d08dbdd07f514d67294b
---
 arm/fastmul/bignum_kmul_16_32.S |  4 ++--
 arm/fastmul/bignum_kmul_32_64.S |  4 ++--
 arm/fastmul/bignum_ksqr_16_32.S |  2 +-
 arm/fastmul/bignum_ksqr_32_64.S |  4 ++--
 arm/p384/bignum_bigendian_6.S   | 14 +++++++-------
 5 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/arm/fastmul/bignum_kmul_16_32.S b/arm/fastmul/bignum_kmul_16_32.S
index 4f527800a..8d36251bf 100644
--- a/arm/fastmul/bignum_kmul_16_32.S
+++ b/arm/fastmul/bignum_kmul_16_32.S
@@ -67,7 +67,7 @@ bignum_kmul_16_32:
 // Compute absolute difference [t..] = |x_lo - x_hi|
 // and the sign s = sgn(x_lo - x_hi) as a bitmask (all 1s for negative)
 
-        ldp     x10, x11, [x, #0]
+        ldp     x10, x11, [x]
         ldp     x8, x9, [x, #64]
         subs    x10, x10, x8
         sbcs    x11, x11, x9
@@ -116,7 +116,7 @@ bignum_kmul_16_32:
 // Compute the other absolute difference [t+8..] = |y_hi - y_lo|
 // Collect the combined product sign bitmask (all 1s for negative) in s
 
-        ldp     x10, x11, [y, #0]
+        ldp     x10, x11, [y]
         ldp     x8, x9, [y, #64]
         subs    x10, x8, x10
         sbcs    x11, x9, x11
diff --git a/arm/fastmul/bignum_kmul_32_64.S b/arm/fastmul/bignum_kmul_32_64.S
index 4fbac3917..cc017f7a6 100644
--- a/arm/fastmul/bignum_kmul_32_64.S
+++ b/arm/fastmul/bignum_kmul_32_64.S
@@ -62,7 +62,7 @@ bignum_kmul_32_64:
 
 // Compute H = x_hi * y_hi in top half of buffer (size 16 x 16 -> 32)
 
-        add     x0, z, #8*2*K
+        add     x0, z, #16*K
         add     x1, x, #8*K
         add     x2, y, #8*K
         mov     x3, t
@@ -299,7 +299,7 @@ bignum_kmul_32_64:
         add     x0, t, #16*K
         mov     x1, t
         add     x2, t, #8*K
-        add     x3, t, #8*4*K
+        add     x3, t, #32*K
         bl      local_kmul_16_32
 
 // Add the interlocking H' and L_bot terms
diff --git a/arm/fastmul/bignum_ksqr_16_32.S b/arm/fastmul/bignum_ksqr_16_32.S
index ede9559f6..72b627087 100644
--- a/arm/fastmul/bignum_ksqr_16_32.S
+++ b/arm/fastmul/bignum_ksqr_16_32.S
@@ -61,7 +61,7 @@ bignum_ksqr_16_32:
 
 // Compute absolute difference [t..] = |x_lo - x_hi|
 
-        ldp     x10, x11, [x, #0]
+        ldp     x10, x11, [x]
         ldp     x8, x9, [x, #64]
         subs    x10, x10, x8
         sbcs    x11, x11, x9
diff --git a/arm/fastmul/bignum_ksqr_32_64.S b/arm/fastmul/bignum_ksqr_32_64.S
index 3a9d5895f..14d86042e 100644
--- a/arm/fastmul/bignum_ksqr_32_64.S
+++ b/arm/fastmul/bignum_ksqr_32_64.S
@@ -56,7 +56,7 @@ bignum_ksqr_32_64:
 
 // Compute H = x_hi * y_hi in top half of buffer (size 16 x 16 -> 32)
 
-        add     x0, z, #8*2*K
+        add     x0, z, #16*K
         add     x1, x, #8*K
         mov     x2, t
         bl      local_ksqr_16_32
@@ -190,7 +190,7 @@ bignum_ksqr_32_64:
 
         add     x0, t, #8*K
         mov     x1, t
-        add     x2, t, #8*3*K
+        add     x2, t, #24*K
         bl      local_ksqr_16_32
 
 // Add the interlocking H' and L_bot terms
diff --git a/arm/p384/bignum_bigendian_6.S b/arm/p384/bignum_bigendian_6.S
index cfbffcffe..cffdee925 100644
--- a/arm/p384/bignum_bigendian_6.S
+++ b/arm/p384/bignum_bigendian_6.S
@@ -64,7 +64,7 @@
         extr    dest, d, dest, #8;                                          \
         ldrb    dshort, [x, #8*i+1];                                        \
         extr    dest, d, dest, #8;                                          \
-        ldrb    dshort, [x, #8*i+0];                                        \
+        ldrb    dshort, [x, #8*i];                                        \
         extr    dest, d, dest, #8
 
 // The reads and writes are organized in mirror-image pairs (0-5, 1-4, 2-3)
@@ -79,22 +79,22 @@ bignum_tobytes_6:
 
                 accumdigit (a, 0)
                 accumdigit (c, 5)
-                str     a, [z, #8*5]
-                str     c, [z, #8*0]
+                str     a, [z, #40]
+                str     c, [z]
 
 // 1 and 4 words
 
                 accumdigit (a, 1)
                 accumdigit (c, 4)
-                str     a, [z, #8*4]
-                str     c, [z, #8*1]
+                str     a, [z, #32]
+                str     c, [z, #8]
 
 // 2 and 3 words
 
                 accumdigit (a, 2)
                 accumdigit (c, 3)
-                str     a, [z, #8*3]
-                str     c, [z, #8*2]
+                str     a, [z, #24]
+                str     c, [z, #16]
 
                 ret
 
