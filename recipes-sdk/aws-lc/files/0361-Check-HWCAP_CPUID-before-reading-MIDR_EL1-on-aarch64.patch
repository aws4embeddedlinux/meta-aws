From 24cb055cb48ae15b9b924ec939f4b993380723f7 Mon Sep 17 00:00:00 2001
From: Lily Barrowman <barrowmanlily@gmail.com>
Date: Fri, 12 May 2023 09:23:16 -0700
Subject: [PATCH] Check HWCAP_CPUID before reading MIDR_EL1 on aarch64 (#1006)

Valgrind does not support emulating the MIDR_EL1 aarch64 system
register, and will crash if an attempt is made to read it.

The fix is to simply check HWCAP_CPUID before reading MIDR_EL1.



---------

Co-authored-by: Lily Barrowman <lilybar@amazon.com>
---
 crypto/fipsmodule/cpucap/cpu_aarch64_linux.c | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/crypto/fipsmodule/cpucap/cpu_aarch64_linux.c b/crypto/fipsmodule/cpucap/cpu_aarch64_linux.c
index ef93ff06a..b30249e29 100644
--- a/crypto/fipsmodule/cpucap/cpu_aarch64_linux.c
+++ b/crypto/fipsmodule/cpucap/cpu_aarch64_linux.c
@@ -97,6 +97,7 @@ void OPENSSL_cpuid_setup(void) {
   static const unsigned long kSHA256 = 1 << 6;
   static const unsigned long kSHA512 = 1 << 21;
   static const unsigned long kSHA3 = 1 << 17;
+  static const unsigned long kCPUID = 1 << 11;
 
   uint64_t OPENSSL_arm_midr = 0;
 
@@ -127,11 +128,16 @@ void OPENSSL_cpuid_setup(void) {
     OPENSSL_armcap_P |= ARMV8_SHA3;
   }
 
-  // Check if the CPU model is Neoverse V1,
-  // which has a wide crypto/SIMD pipeline.
-  OPENSSL_arm_midr = armv8_cpuid_probe();
-  if (MIDR_IS_CPU_MODEL(OPENSSL_arm_midr, ARM_CPU_IMP_ARM, ARM_CPU_PART_V1)) {
-    OPENSSL_armcap_P |= ARMV8_NEOVERSE_V1;
+  // Before calling armv8_cpuid_probe and reading from MIDR_EL1 check that it
+  // is supported. As of Valgrind 3.21 trying to read from that register will
+  // cause Valgrind to crash.
+  if (hwcap & kCPUID) {
+    // Check if the CPU model is Neoverse V1,
+    // which has a wide crypto/SIMD pipeline.
+    OPENSSL_arm_midr = armv8_cpuid_probe();
+    if (MIDR_IS_CPU_MODEL(OPENSSL_arm_midr, ARM_CPU_IMP_ARM, ARM_CPU_PART_V1)) {
+      OPENSSL_armcap_P |= ARMV8_NEOVERSE_V1;
+    }
   }
 
   // OPENSSL_armcap is a 32-bit, unsigned value which may start with "0x" to
