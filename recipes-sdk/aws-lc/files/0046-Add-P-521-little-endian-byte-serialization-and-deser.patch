From 711062800446507fc17925e9010f911c2775fa19 Mon Sep 17 00:00:00 2001
From: John Harrison <jargh@amazon.com>
Date: Sat, 12 Feb 2022 20:35:52 -0800
Subject: [PATCH] Add P-521 little-endian byte serialization and
 deserialization

These map between 66-byte (528-bit) sequences and 9-word (576-bit)
bignums, in both cases the natural (or at least minimal) size for
521-bit numbers. Despite the naming, they are not truly specific
to P-521.

s2n-bignum original commit: https://github.com/awslabs/s2n-bignum/commit/548c74baef19d2af807cb7de0695a4a87bfbdf27
---
 arm/p521/Makefile                      |   2 +
 arm/p521/bignum_fromlebytes_p521.S     | 213 +++++++++++++++++++++++++
 arm/p521/bignum_tolebytes_p521.S       | 203 +++++++++++++++++++++++
 x86_att/p521/bignum_fromlebytes_p521.S |  72 +++++++++
 x86_att/p521/bignum_tolebytes_p521.S   |  71 +++++++++
 5 files changed, 561 insertions(+)
 create mode 100644 arm/p521/bignum_fromlebytes_p521.S
 create mode 100644 arm/p521/bignum_tolebytes_p521.S
 create mode 100644 x86_att/p521/bignum_fromlebytes_p521.S
 create mode 100644 x86_att/p521/bignum_tolebytes_p521.S

diff --git a/arm/p521/Makefile b/arm/p521/Makefile
index 8f9d2b6e3..ac9617fad 100644
--- a/arm/p521/Makefile
+++ b/arm/p521/Makefile
@@ -36,6 +36,7 @@ OBJ = bignum_add_p521.o \
       bignum_deamont_p521.o \
       bignum_demont_p521.o \
       bignum_double_p521.o \
+      bignum_fromlebytes_p521.o \
       bignum_half_p521.o \
       bignum_mod_n521_9.o \
       bignum_mod_p521_9.o \
@@ -50,6 +51,7 @@ OBJ = bignum_add_p521.o \
       bignum_sqr_p521.o \
       bignum_sqr_p521_alt.o \
       bignum_sub_p521.o \
+      bignum_tolebytes_p521.o \
       bignum_tomont_p521.o \
       bignum_triple_p521.o
 
diff --git a/arm/p521/bignum_fromlebytes_p521.S b/arm/p521/bignum_fromlebytes_p521.S
new file mode 100644
index 000000000..44a4b1fdb
--- /dev/null
+++ b/arm/p521/bignum_fromlebytes_p521.S
@@ -0,0 +1,213 @@
+/*
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "LICENSE" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+// ----------------------------------------------------------------------------
+// Convert little-endian bytes to 9-digit 528-bit bignum
+//
+//    extern void bignum_fromlebytes_p521
+//     (uint64_t z[static 9],uint8_t x[static 66])
+//
+// The result will be < 2^528 since it is translated from 66 bytes.
+// It is mainly intended for inputs x < p_521 < 2^521 < 2^528.
+//
+// Standard ARM ABI: X0 = z, X1 = x
+// ----------------------------------------------------------------------------
+
+        .globl  bignum_fromlebytes_p521
+        .text
+        .balign 4
+
+#define z x0
+#define x x1
+
+#define d x2
+#define dshort w2
+#define a x3
+
+bignum_fromlebytes_p521:
+
+// word 0
+
+                ldrb    dshort, [x]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #1]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #2]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #3]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #4]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #5]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #6]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #7]
+                extr    a, d, a, #8
+                str     a, [z]
+
+// word 1
+
+                ldrb    dshort, [x, #8]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #9]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #10]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #11]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #12]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #13]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #14]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #15]
+                extr    a, d, a, #8
+                str     a, [z, #8]
+
+// word 2
+
+                ldrb    dshort, [x, #16]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #17]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #18]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #19]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #20]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #21]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #22]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #23]
+                extr    a, d, a, #8
+                str     a, [z, #16]
+
+// word 3
+
+                ldrb    dshort, [x, #24]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #25]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #26]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #27]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #28]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #29]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #30]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #31]
+                extr    a, d, a, #8
+                str     a, [z, #24]
+
+// word 4
+
+                ldrb    dshort, [x, #32]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #33]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #34]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #35]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #36]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #37]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #38]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #39]
+                extr    a, d, a, #8
+                str     a, [z, #32]
+
+// word 5
+
+                ldrb    dshort, [x, #40]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #41]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #42]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #43]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #44]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #45]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #46]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #47]
+                extr    a, d, a, #8
+                str     a, [z, #40]
+
+// word 6
+
+                ldrb    dshort, [x, #48]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #49]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #50]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #51]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #52]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #53]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #54]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #55]
+                extr    a, d, a, #8
+                str     a, [z, #48]
+
+// word 7
+
+                ldrb    dshort, [x, #56]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #57]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #58]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #59]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #60]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #61]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #62]
+                extr    a, d, a, #8
+                ldrb    dshort, [x, #63]
+                extr    a, d, a, #8
+                str     a, [z, #56]
+
+// word 8
+
+                ldrb    dshort, [x, #64]
+                extr    a, d, xzr, #8
+                ldrb    dshort, [x, #65]
+                extr    a, d, a, #56
+                str     a, [z, #64]
+
+                ret
+
+#if defined(__linux__) && defined(__ELF__)
+.section .note.GNU-stack,"",%progbits
+#endif
diff --git a/arm/p521/bignum_tolebytes_p521.S b/arm/p521/bignum_tolebytes_p521.S
new file mode 100644
index 000000000..3945a0d9b
--- /dev/null
+++ b/arm/p521/bignum_tolebytes_p521.S
@@ -0,0 +1,203 @@
+/*
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "LICENSE" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+// ----------------------------------------------------------------------------
+// Convert 9-digit 528-bit bignum to little-endian bytes
+//
+//    extern void bignum_tolebytes_p521
+//     (uint8_t z[static 66], uint64_t x[static 9]);
+//
+// This is assuming the input x is < 2^528 so that it fits in 66 bytes.
+// In particular this holds if x < p_521 < 2^521 < 2^528.
+//
+// Standard ARM ABI: X0 = z, X1 = x
+// ----------------------------------------------------------------------------
+
+        .globl  bignum_tolebytes_p521
+        .text
+        .balign 4
+
+#define z x0
+#define x x1
+
+#define d x2
+#define dshort w2
+
+bignum_tolebytes_p521:
+
+// word 0
+
+                ldr     d, [x]
+                strb    dshort, [z]
+                lsr     d, d, #8
+                strb    dshort, [z, #1]
+                lsr     d, d, #8
+                strb    dshort, [z, #2]
+                lsr     d, d, #8
+                strb    dshort, [z, #3]
+                lsr     d, d, #8
+                strb    dshort, [z, #4]
+                lsr     d, d, #8
+                strb    dshort, [z, #5]
+                lsr     d, d, #8
+                strb    dshort, [z, #6]
+                lsr     d, d, #8
+                strb    dshort, [z, #7]
+
+// word 1
+
+                ldr     d, [x, #8]
+                strb    dshort, [z, #8]
+                lsr     d, d, #8
+                strb    dshort, [z, #9]
+                lsr     d, d, #8
+                strb    dshort, [z, #10]
+                lsr     d, d, #8
+                strb    dshort, [z, #11]
+                lsr     d, d, #8
+                strb    dshort, [z, #12]
+                lsr     d, d, #8
+                strb    dshort, [z, #13]
+                lsr     d, d, #8
+                strb    dshort, [z, #14]
+                lsr     d, d, #8
+                strb    dshort, [z, #15]
+
+// word 2
+
+                ldr     d, [x, #16]
+                strb    dshort, [z, #16]
+                lsr     d, d, #8
+                strb    dshort, [z, #17]
+                lsr     d, d, #8
+                strb    dshort, [z, #18]
+                lsr     d, d, #8
+                strb    dshort, [z, #19]
+                lsr     d, d, #8
+                strb    dshort, [z, #20]
+                lsr     d, d, #8
+                strb    dshort, [z, #21]
+                lsr     d, d, #8
+                strb    dshort, [z, #22]
+                lsr     d, d, #8
+                strb    dshort, [z, #23]
+
+// word 3
+
+                ldr     d, [x, #24]
+                strb    dshort, [z, #24]
+                lsr     d, d, #8
+                strb    dshort, [z, #25]
+                lsr     d, d, #8
+                strb    dshort, [z, #26]
+                lsr     d, d, #8
+                strb    dshort, [z, #27]
+                lsr     d, d, #8
+                strb    dshort, [z, #28]
+                lsr     d, d, #8
+                strb    dshort, [z, #29]
+                lsr     d, d, #8
+                strb    dshort, [z, #30]
+                lsr     d, d, #8
+                strb    dshort, [z, #31]
+
+// word 4
+
+                ldr     d, [x, #32]
+                strb    dshort, [z, #32]
+                lsr     d, d, #8
+                strb    dshort, [z, #33]
+                lsr     d, d, #8
+                strb    dshort, [z, #34]
+                lsr     d, d, #8
+                strb    dshort, [z, #35]
+                lsr     d, d, #8
+                strb    dshort, [z, #36]
+                lsr     d, d, #8
+                strb    dshort, [z, #37]
+                lsr     d, d, #8
+                strb    dshort, [z, #38]
+                lsr     d, d, #8
+                strb    dshort, [z, #39]
+
+// word 5
+
+                ldr     d, [x, #40]
+                strb    dshort, [z, #40]
+                lsr     d, d, #8
+                strb    dshort, [z, #41]
+                lsr     d, d, #8
+                strb    dshort, [z, #42]
+                lsr     d, d, #8
+                strb    dshort, [z, #43]
+                lsr     d, d, #8
+                strb    dshort, [z, #44]
+                lsr     d, d, #8
+                strb    dshort, [z, #45]
+                lsr     d, d, #8
+                strb    dshort, [z, #46]
+                lsr     d, d, #8
+                strb    dshort, [z, #47]
+
+// word 6
+
+                ldr     d, [x, #48]
+                strb    dshort, [z, #48]
+                lsr     d, d, #8
+                strb    dshort, [z, #49]
+                lsr     d, d, #8
+                strb    dshort, [z, #50]
+                lsr     d, d, #8
+                strb    dshort, [z, #51]
+                lsr     d, d, #8
+                strb    dshort, [z, #52]
+                lsr     d, d, #8
+                strb    dshort, [z, #53]
+                lsr     d, d, #8
+                strb    dshort, [z, #54]
+                lsr     d, d, #8
+                strb    dshort, [z, #55]
+
+// word 7
+
+                ldr     d, [x, #56]
+                strb    dshort, [z, #56]
+                lsr     d, d, #8
+                strb    dshort, [z, #57]
+                lsr     d, d, #8
+                strb    dshort, [z, #58]
+                lsr     d, d, #8
+                strb    dshort, [z, #59]
+                lsr     d, d, #8
+                strb    dshort, [z, #60]
+                lsr     d, d, #8
+                strb    dshort, [z, #61]
+                lsr     d, d, #8
+                strb    dshort, [z, #62]
+                lsr     d, d, #8
+                strb    dshort, [z, #63]
+
+// word 8
+
+                ldr     d, [x, #64]
+                strb    dshort, [z, #64]
+                lsr     d, d, #8
+                strb    dshort, [z, #65]
+
+                ret
+
+#if defined(__linux__) && defined(__ELF__)
+.section .note.GNU-stack,"",%progbits
+#endif
diff --git a/x86_att/p521/bignum_fromlebytes_p521.S b/x86_att/p521/bignum_fromlebytes_p521.S
new file mode 100644
index 000000000..6ca15f963
--- /dev/null
+++ b/x86_att/p521/bignum_fromlebytes_p521.S
@@ -0,0 +1,72 @@
+/*
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "LICENSE" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+// ----------------------------------------------------------------------------
+// Convert little-endian bytes to 9-digit 528-bit bignum
+//
+//    extern void bignum_fromlebytes_p521
+//     (uint64_t z[static 9],uint8_t x[static 66])
+//
+// The result will be < 2^528 since it is translated from 66 bytes.
+// It is mainly intended for inputs x < p_521 < 2^521 < 2^528.
+//
+// Since x86 is little-endian, this is just copying.
+//
+// Standard x86-64 ABI: RDI = z, RSI = x
+// ----------------------------------------------------------------------------
+
+
+        .globl  bignum_fromlebytes_p521
+        .text
+
+#define z %rdi
+#define x %rsi
+#define a %rax
+
+bignum_fromlebytes_p521:
+
+                movq    (x), a
+                movq    a, (z)
+
+                movq    8(x), a
+                movq    a, 8(z)
+
+                movq    16(x), a
+                movq    a, 16(z)
+
+                movq    24(x), a
+                movq    a, 24(z)
+
+                movq    32(x), a
+                movq    a, 32(z)
+
+                movq    40(x), a
+                movq    a, 40(z)
+
+                movq    48(x), a
+                movq    a, 48(z)
+
+                movq    56(x), a
+                movq    a, 56(z)
+
+                xorl    %eax, %eax
+                movw    64(x), %ax
+                movq    a, 64(z)
+
+                ret
+
+#if defined(__linux__) && defined(__ELF__)
+.section .note.GNU-stack,"",%progbits
+#endif
diff --git a/x86_att/p521/bignum_tolebytes_p521.S b/x86_att/p521/bignum_tolebytes_p521.S
new file mode 100644
index 000000000..64bb432bd
--- /dev/null
+++ b/x86_att/p521/bignum_tolebytes_p521.S
@@ -0,0 +1,71 @@
+/*
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "LICENSE" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+// ----------------------------------------------------------------------------
+// Convert 9-digit 528-bit bignum to little-endian bytes
+//
+//    extern void bignum_tolebytes_p521
+//     (uint8_t z[static 66], uint64_t x[static 9]);
+//
+// This is assuming the input x is < 2^528 so that it fits in 66 bytes.
+// In particular this holds if x < p_521 < 2^521 < 2^528.
+//
+// Since x86 is little-endian, this is just copying.
+//
+// Standard x86-64 ABI: RDI = z, RSI = x
+// ----------------------------------------------------------------------------
+
+
+        .globl  bignum_tolebytes_p521
+        .text
+
+#define z %rdi
+#define x %rsi
+#define a %rax
+
+bignum_tolebytes_p521:
+
+                movq    (x), a
+                movq    a, (z)
+
+                movq    8(x), a
+                movq    a, 8(z)
+
+                movq    16(x), a
+                movq    a, 16(z)
+
+                movq    24(x), a
+                movq    a, 24(z)
+
+                movq    32(x), a
+                movq    a, 32(z)
+
+                movq    40(x), a
+                movq    a, 40(z)
+
+                movq    48(x), a
+                movq    a, 48(z)
+
+                movq    56(x), a
+                movq    a, 56(z)
+
+                movq    64(x), a
+                movw    %ax, 64(z)
+
+                ret
+
+#if defined(__linux__) && defined(__ELF__)
+.section .note.GNU-stack,"",%progbits
+#endif
