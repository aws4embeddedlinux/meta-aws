From 814bdbcc458393071249673a6eeb8e32f5a88d44 Mon Sep 17 00:00:00 2001
From: John Harrison <jargh@amazon.com>
Date: Tue, 10 Jan 2023 16:31:41 -0800
Subject: [PATCH] Add SM2 field negation

And tweak the ARM implementations of analogous functions for
P-256 and P-384 to avoid a couple of instructions by using
immediates directly instead of loading constants.

s2n-bignum original commit: https://github.com/awslabs/s2n-bignum/commit/ed5fdd3c8822cd593248d38cea038f71c89fd5b6
---
 arm/p384/bignum_neg_p384.S | 17 +++++------------
 1 file changed, 5 insertions(+), 12 deletions(-)

diff --git a/arm/p384/bignum_neg_p384.S b/arm/p384/bignum_neg_p384.S
index 48efcb51b..24bdbb1b2 100644
--- a/arm/p384/bignum_neg_p384.S
+++ b/arm/p384/bignum_neg_p384.S
@@ -29,7 +29,6 @@
 #define d4 x8
 #define d5 x9
 
-
 S2N_BN_SYMBOL(bignum_neg_p384):
 
 // Load the 6 digits of x
@@ -49,21 +48,15 @@ S2N_BN_SYMBOL(bignum_neg_p384):
         cmp     p, #0
         csetm   p, ne
 
-// Load and mask the complicated lower three words of
-// p_384 = [-1;-1;-1;n2;n1;n0] and subtract, using mask itself for upper digits
+// Mask the complicated lower three words of p_384 = [-1;-1;-1;n2;n1;n0]
+// and subtract, using mask itself for upper digits
 
-        mov     t, #0x00000000ffffffff
-        and     t, t, p
+        and     t, p, #0x00000000ffffffff
         subs    d0, t, d0
-
-        mov     t, #0xffffffff00000000
-        and     t, t, p
+        and     t, p, #0xffffffff00000000
         sbcs    d1, t, d1
-
-        mov     t, #0xfffffffffffffffe
-        and     t, t, p
+        and     t, p, #0xfffffffffffffffe
         sbcs    d2, t, d2
-
         sbcs    d3, p, d3
         sbcs    d4, p, d4
         sbc     d5, p, d5
