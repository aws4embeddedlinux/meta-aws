From ba2e3928f4c19e2253b82ba5c2ec209b5b1e2d7e Mon Sep 17 00:00:00 2001
From: Samuel Chiang <sachiang@amazon.com>
Date: Wed, 8 Feb 2023 14:04:35 -0800
Subject: [PATCH] update ssm document to handle s3 files (#787)

---
 tests/ci/cdk/cdk/aws_lc_mac_arm_ci_stack.py     |  6 +++++-
 tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml | 17 ++++++++++++-----
 tests/ci/run_m1_ec2_instance.sh                 |  4 +++-
 3 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/tests/ci/cdk/cdk/aws_lc_mac_arm_ci_stack.py b/tests/ci/cdk/cdk/aws_lc_mac_arm_ci_stack.py
index 75bf8f2dc..956f9d3f5 100644
--- a/tests/ci/cdk/cdk/aws_lc_mac_arm_ci_stack.py
+++ b/tests/ci/cdk/cdk/aws_lc_mac_arm_ci_stack.py
@@ -7,7 +7,7 @@ import boto3
 from botocore.exceptions import ClientError
 from aws_cdk import core, aws_ec2 as ec2, aws_codebuild as codebuild, aws_iam as iam, aws_s3 as s3, aws_logs as logs
 from util.metadata import AWS_ACCOUNT, AWS_REGION, GITHUB_REPO_OWNER, GITHUB_REPO_NAME
-from util.iam_policies import code_build_batch_policy_in_json, ec2_policies_in_json, ssm_policies_in_json
+from util.iam_policies import code_build_batch_policy_in_json, ec2_policies_in_json, ssm_policies_in_json, s3_read_write_policy_in_json
 from util.build_spec_loader import BuildSpecLoader
 
 # detailed documentation can be found here: https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html
@@ -67,9 +67,13 @@ class AwsLcMacArmCIStack(core.Stack):
             build_spec=BuildSpecLoader.load(spec_file_path))
         project.enable_batch_builds()
 
+        # S3 bucket for testing internal fixes.
+        s3_read_write_policy = iam.PolicyDocument.from_json(s3_read_write_policy_in_json("aws-lc-codebuild"))
+        ec2_inline_policies = {"s3_read_write_policy": s3_read_write_policy}
         ec2_role = iam.Role(scope=self, id="{}-ec2-role".format(id),
                             role_name="{}-ec2-role".format(id),
                             assumed_by=iam.ServicePrincipal("ec2.amazonaws.com"),
+                            inline_policies=ec2_inline_policies,
                             managed_policies=[
                                 iam.ManagedPolicy.from_aws_managed_policy_name("AmazonSSMManagedInstanceCore"),
                                 iam.ManagedPolicy.from_aws_managed_policy_name("CloudWatchAgentServerPolicy")
diff --git a/tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml b/tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml
index 836ef2c49..bc5e3637c 100644
--- a/tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml
+++ b/tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml
@@ -15,12 +15,19 @@ mainSteps:
         - BUILD_ROOT=$(mktemp -d)
         - cd ${BUILD_ROOT}
         - export HOME="/var/root"
+        - export SOURCE={SOURCE}
         - trap "rm -rf ${BUILD_ROOT}" EXIT
-        - git clone {GITHUB_REPO} aws-lc-pr
-        - cd aws-lc-pr
-        # Fetch PR contents
-        - git fetch origin pull/{PR_NUM}/head:temp
-        - git checkout temp
+        # Check if the source code is on S3, otherwise treat the source as a PR.
+        - >
+          if [[ "${SOURCE:0:16}" == 'aws-lc-codebuild' ]]; then
+            aws s3api get-object --bucket {S3_BUCKET} --key "${SOURCE##{S3_BUCKET}/}" aws-lc-pr.zip
+            unzip aws-lc-pr.zip
+          else
+            git clone {SOURCE} aws-lc-pr
+            cd aws-lc-pr
+            git fetch origin pull/{PR_NUM}/head:temp
+            git checkout temp
+          fi
         - chmod +x ./tests/ci/run_posix_tests.sh
         - ./tests/ci/run_posix_tests.sh
         - chmod +x ./tests/ci/run_fips_tests.sh
diff --git a/tests/ci/run_m1_ec2_instance.sh b/tests/ci/run_m1_ec2_instance.sh
index c253825dc..7bac0d676 100755
--- a/tests/ci/run_m1_ec2_instance.sh
+++ b/tests/ci/run_m1_ec2_instance.sh
@@ -26,6 +26,7 @@ AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
 echo AWS Account ID: "${AWS_ACCOUNT_ID}"
 echo GitHub Repo Link: "${CODEBUILD_SOURCE_REPO_URL}"
 export cloudwatch_group_name="aws-lc-ci-macos-arm-cw-logs"
+export s3_bucket_name="aws-lc-codebuild"
 
 # get information for ec2 instances
 ec2_instance="$(aws ec2 describe-instances --filter "Name=tag:Name,Values=aws-lc-ci-macos-arm-ec2-instance" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].InstanceId --output text)"
@@ -34,7 +35,8 @@ generate_ssm_document_file() {
   # use sed to replace placeholder values inside preexisting document
   sed -e "s,{AWS_ACCOUNT_ID},${AWS_ACCOUNT_ID},g" \
     -e "s,{PR_NUM},${CODEBUILD_WEBHOOK_TRIGGER//pr\/},g" \
-    -e "s,{GITHUB_REPO},${CODEBUILD_SOURCE_REPO_URL},g" \
+    -e "s,{SOURCE},${CODEBUILD_SOURCE_REPO_URL},g" \
+    -e "s,{S3_BUCKET},${s3_bucket_name},g" \
     tests/ci/cdk/cdk/ssm/m1_tests_ssm_document.yaml \
     >tests/ci/cdk/cdk/ssm/macos_arm_ssm_document.yaml
 }
