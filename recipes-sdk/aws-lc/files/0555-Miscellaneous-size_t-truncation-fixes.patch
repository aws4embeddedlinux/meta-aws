From d8da86f10103af3118c037953efa5832e0e39116 Mon Sep 17 00:00:00 2001
From: David Benjamin <davidben@google.com>
Date: Tue, 23 May 2023 11:45:11 -0400
Subject: [PATCH] Miscellaneous size_t truncation fixes

Bug: 516
Change-Id: I3cc7e85687a29201a325b498eecf3694e0429ebc
Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/60067
Commit-Queue: David Benjamin <davidben@google.com>
Reviewed-by: Adam Langley <agl@google.com>
(cherry picked from commit 7e56051791944efa303930690a2089805385c983)
---
 crypto/x509/x509_time_test.cc | 11 ++++-------
 ssl/test/async_bio.cc         |  8 ++++----
 2 files changed, 8 insertions(+), 11 deletions(-)

diff --git a/crypto/x509/x509_time_test.cc b/crypto/x509/x509_time_test.cc
index c0327d28a..7abb10d1a 100644
--- a/crypto/x509/x509_time_test.cc
+++ b/crypto/x509/x509_time_test.cc
@@ -296,14 +296,11 @@ TEST(X509TimeTest, TestCmpTime) {
   for (auto &test : kX509CmpTests) {
     SCOPED_TRACE(test.data);
 
-    ASN1_TIME t;
+    bssl::UniquePtr<ASN1_STRING> t(ASN1_STRING_type_new(test.type));
+    ASSERT_TRUE(t);
+    ASSERT_TRUE(ASN1_STRING_set(t.get(), test.data, strlen(test.data)));
 
-    memset(&t, 0, sizeof(t));
-    t.type = test.type;
-    t.data = (unsigned char*) test.data;
-    t.length = strlen(test.data);
-
-    EXPECT_EQ(test.expected, X509_cmp_time_posix(&t, test.cmp_time));
+    EXPECT_EQ(test.expected, X509_cmp_time_posix(t.get(), test.cmp_time));
   }
 }
 
diff --git a/ssl/test/async_bio.cc b/ssl/test/async_bio.cc
index 89d66d778..9eae290f1 100644
--- a/ssl/test/async_bio.cc
+++ b/ssl/test/async_bio.cc
@@ -59,8 +59,8 @@ static int AsyncWrite(BIO *bio, const char *in, int inl) {
     return -1;
   }
 
-  if (!a->datagram && (size_t)inl > a->write_quota) {
-    inl = a->write_quota;
+  if (!a->datagram && static_cast<size_t>(inl) > a->write_quota) {
+    inl = static_cast<int>(a->write_quota);
   }
   int ret = BIO_write(bio->next_bio, in, inl);
   if (ret <= 0) {
@@ -85,8 +85,8 @@ static int AsyncRead(BIO *bio, char *out, int outl) {
     return -1;
   }
 
-  if (!a->datagram && (size_t)outl > a->read_quota) {
-    outl = a->read_quota;
+  if (!a->datagram && static_cast<size_t>(outl) > a->read_quota) {
+    outl = static_cast<int>(a->read_quota);
   }
   int ret = BIO_read(bio->next_bio, out, outl);
   if (ret <= 0) {
