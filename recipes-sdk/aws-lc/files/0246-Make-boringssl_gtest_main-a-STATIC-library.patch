From 12052dfc2d10ebc8c172d4736820b1a8b19fc7bb Mon Sep 17 00:00:00 2001
From: David Benjamin <davidben@google.com>
Date: Wed, 15 Feb 2023 11:04:01 -0500
Subject: [PATCH] Make boringssl_gtest_main a STATIC library

Prior to 3.12 (which we won't be requiring until July), OBJECT libraries
cannot be used with target_link_libraries. That means they cannot pick
up INTERFACE_INCLUDE_DIRECTORIES, which makes them pretty unusable in
the "modern CMake" style.

Just switch it to a static library to unbreak the build in CMake 3.10.

For some link ordering reason I don't understand, this also requires
explicitly linking boringssl_gtest to libcxx when we USE_CUSTOM_LIBCXX
is set.

Change-Id: Ia9d8351551f5da060248aa3ca73fe04473bf62aa
Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/57345
Commit-Queue: Bob Beck <bbe@google.com>
Reviewed-by: Bob Beck <bbe@google.com>
Auto-Submit: David Benjamin <davidben@google.com>
---
 CMakeLists.txt             | 3 +++
 crypto/CMakeLists.txt      | 8 +++-----
 crypto/test/CMakeLists.txt | 8 +-------
 ssl/CMakeLists.txt         | 6 ++----
 4 files changed, 9 insertions(+), 16 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index ba346b150..2868315ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -786,6 +786,9 @@ if(BUILD_TESTING)
   # Add minimal googletest targets. The provided one has many side-effects, and
   # googletest has a very straightforward build.
   add_library(boringssl_gtest third_party/googletest/src/gtest-all.cc)
+  if(USE_CUSTOM_LIBCXX)
+    target_link_libraries(boringssl_gtest libcxx)
+  endif()
   if(BUILD_SHARED_LIBS)
     # This is needed for the Windows build to correctly annotate GTest's API with __declspec(dllexport)
     target_compile_options(boringssl_gtest PRIVATE -DGTEST_CREATE_SHARED_LIBRARY=1)
diff --git a/crypto/CMakeLists.txt b/crypto/CMakeLists.txt
index e285da9f1..0ba347224 100644
--- a/crypto/CMakeLists.txt
+++ b/crypto/CMakeLists.txt
@@ -623,9 +623,9 @@ if(BUILD_TESTING)
 
   macro(add_test_executable executable_name test_file)
     message(STATUS "Generating test executable ${executable_name}.")
-    add_executable(${executable_name} ${test_file} $<TARGET_OBJECTS:boringssl_gtest_main>)
+    add_executable(${executable_name} ${test_file})
     target_compile_definitions(${executable_name} PRIVATE BORINGSSL_IMPLEMENTATION)
-    target_link_libraries(${executable_name} test_support_lib boringssl_gtest crypto)
+    target_link_libraries(${executable_name} test_support_lib boringssl_gtest_main crypto)
     add_dependencies(all_tests ${executable_name})
   endmacro()
 
@@ -733,11 +733,9 @@ if(BUILD_TESTING)
     decrepit/ripemd/ripemd_test.cc
 
     $<TARGET_OBJECTS:crypto_test_data>
-    $<TARGET_OBJECTS:boringssl_gtest_main>
-
   )
 
-  target_link_libraries(${CRYPTO_TEST_EXEC} test_support_lib boringssl_gtest crypto)
+  target_link_libraries(${CRYPTO_TEST_EXEC} test_support_lib boringssl_gtest_main crypto)
   if(WIN32)
     target_link_libraries(${CRYPTO_TEST_EXEC} ws2_32)
   endif()
diff --git a/crypto/test/CMakeLists.txt b/crypto/test/CMakeLists.txt
index 0ec0b8137..bdb8acbc2 100644
--- a/crypto/test/CMakeLists.txt
+++ b/crypto/test/CMakeLists.txt
@@ -20,11 +20,5 @@ if(WIN32)
 endif()
 target_link_libraries(test_support_lib boringssl_gtest crypto)
 
-add_library(
-  boringssl_gtest_main
-
-  OBJECT
-
-  gtest_main.cc
-)
+add_library(boringssl_gtest_main STATIC gtest_main.cc)
 target_link_libraries(boringssl_gtest_main boringssl_gtest crypto test_support_lib)
diff --git a/ssl/CMakeLists.txt b/ssl/CMakeLists.txt
index 57ab8502f..81353e76b 100644
--- a/ssl/CMakeLists.txt
+++ b/ssl/CMakeLists.txt
@@ -58,11 +58,9 @@ if(BUILD_TESTING)
     span_test.cc
     ssl_test.cc
     ssl_c_test.c
+ )
 
-    $<TARGET_OBJECTS:boringssl_gtest_main>
-  )
-
-  target_link_libraries(${SSL_TEST_EXEC} test_support_lib boringssl_gtest ssl crypto)
+  target_link_libraries(${SSL_TEST_EXEC} test_support_lib boringssl_gtest_main ssl crypto)
   if(WIN32)
     target_link_libraries(${SSL_TEST_EXEC} ws2_32)
   endif()
