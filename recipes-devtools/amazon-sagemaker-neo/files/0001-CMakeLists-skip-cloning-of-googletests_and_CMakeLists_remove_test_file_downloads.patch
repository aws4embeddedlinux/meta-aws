Index: git/CMakeLists.txt
===================================================================
--- git.orig/CMakeLists.txt
+++ git/CMakeLists.txt
@@ -392,269 +392,5 @@ install(FILES
   DESTINATION lib/cmake/dlr
 )
 
-# Tests
-if(DLR_BUILD_TESTS AND NOT(AAR_BUILD))
-  include(cmake/googletest.cmake)
-  if (WIN32)
-    include_directories(${DLFCN_WIN32}/src)
-    add_subdirectory(${DLFCN_WIN32})
-  endif()
-
-  fetch_googletest(
-    ${PROJECT_SOURCE_DIR}/cmake
-    ${PROJECT_BINARY_DIR}/googletest
-  )
-
-  enable_testing()
-  file(GLOB TEST_SRCS tests/cpp/*.cc)
-
-  if(NOT(ENABLE_DATATRANSFORM))
-    list(REMOVE_ITEM TEST_SRCS
-        ${CMAKE_CURRENT_SOURCE_DIR}/tests/cpp/dlr_data_transform_test.cc
-        ${CMAKE_CURRENT_SOURCE_DIR}/tests/cpp/dlr_pipeline_skl_xgb_test.cc)
-  endif()
-  if(WITH_TENSORFLOW2_LIB)
-    file(GLOB TENSORFLOW2_TEST_SRCS tests/cpp/dlr_tensorflow2/*.cc)
-    list(APPEND TEST_SRCS ${TENSORFLOW2_TEST_SRCS})
-  endif()
-  if(WITH_HEXAGON)
-    file(GLOB HEXAGON_TEST_SRCS tests/cpp/dlr_hexagon/*.cc)
-    list(APPEND TEST_SRCS ${HEXAGON_TEST_SRCS})
-  endif()
-  foreach(__srcpath ${TEST_SRCS})
-    get_filename_component(__srcname ${__srcpath} NAME)
-    string(REPLACE ".cc" "" __execname ${__srcname})
-    add_executable(${__execname} ${__srcpath})
-    target_compile_definitions(${__execname} PUBLIC DMLC_USE_LOGGING_LIBRARY=<tvm/runtime/logging.h>)
-    target_compile_definitions(${__execname} PRIVATE TVM_USE_LIBBACKTRACE=0)
-    target_link_libraries(${__execname} dlr gtest_main)
-    set_output_directory(${__execname} ${CMAKE_BINARY_DIR})
-    add_test(NAME ${__execname} COMMAND ${__execname})
-    message(STATUS "Added Test: " ${__execname})
-  endforeach()
-
-  file(GLOB TEST_DLSYM_SRCS tests/cpp/dlsym/*.cc)
-  foreach(__srcpath ${TEST_DLSYM_SRCS})
-    get_filename_component(__srcname ${__srcpath} NAME)
-    string(REPLACE ".cc" "" __execname ${__srcname})
-    add_executable(${__execname} ${__srcpath})
-    target_link_libraries(${__execname} gtest_main dl)
-    set_output_directory(${__execname} ${CMAKE_BINARY_DIR})
-    add_test(NAME ${__execname} COMMAND ${__execname})
-    message(STATUS "Added dlsym Test: " ${__execname})
-  endforeach()
-
-  set(CAT_IMAGE ${CMAKE_CURRENT_BINARY_DIR}/cat224-3.txt)
-  if(NOT EXISTS ${CAT_IMAGE})
-  download_file(
-    https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/tflite-models/cat224-3.txt
-    ${CAT_IMAGE}
-    SHA1
-    e35e82f3371bed37caa7ecece417f50876414077
-  )
-  endif()
-
-  set(STREET_IMAGE ${CMAKE_CURRENT_BINARY_DIR}/street_small.npy)
-  if(NOT EXISTS ${STREET_IMAGE})
-  download_file(
-    https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/test-data/street_small.npy
-    ${STREET_IMAGE}
-    SHA1
-    206d1a12646a5fe43d0877d38bd137c70a5adc3b
-  )
-  endif()
-
-  # Download compiled model for unit tests
-  set(RESNET_MODEL ${CMAKE_CURRENT_BINARY_DIR}/resnet_v1_5_50)
-  if(NOT IS_DIRECTORY ${RESNET_MODEL})
-    file(MAKE_DIRECTORY ${RESNET_MODEL})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/resnet_v1.5_50-ml_c4.tar.gz
-      /tmp/resnet_v1.5_50-ml_c4.tar.gz
-      SHA1
-      447c22239e63882a2bc754db550131756373d4df
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/resnet_v1.5_50-ml_c4.tar.gz
-                    WORKING_DIRECTORY ${RESNET_MODEL})
-    file(REMOVE /tmp/resnet_v1.5_50-ml_c4.tar.gz)
-  endif()
-
-  set(XGBOOST_TEST_MODEL ${CMAKE_CURRENT_BINARY_DIR}/xgboost_test)
-  if(NOT IS_DIRECTORY ${XGBOOST_TEST_MODEL})
-    file(MAKE_DIRECTORY ${XGBOOST_TEST_MODEL})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.10.0/xgboost-ml_m5.tar.gz
-      /tmp/xgboost-ml_m5.tar.gz
-      SHA1
-      1e45bb9d6108d70ac4ff37855cf13061d61ef742
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/xgboost-ml_m5.tar.gz
-                    WORKING_DIRECTORY ${XGBOOST_TEST_MODEL})
-    file(REMOVE /tmp/xgboost-ml_m5.tar.gz)
-  endif()
-
-  set(RELAYVM_MODEL ssd_mobilenet_v1_ppn_shared_box_predictor_300x300_coco14_sync_2018_07_03-LINUX_X86_64.tar.gz)
-  set(RELAYVM_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/ssd_mobilenet_v1)
-  if(NOT IS_DIRECTORY ${RELAYVM_MODEL_DIR})
-    file(MAKE_DIRECTORY ${RELAYVM_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.10.0/${RELAYVM_MODEL}
-      /tmp/${RELAYVM_MODEL}
-      SHA1
-      38111e6432d643122ebf6ed5493e415871dc3fa5
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${RELAYVM_MODEL}
-                    WORKING_DIRECTORY ${RELAYVM_MODEL_DIR})
-    file(REMOVE /tmp/${RELAYVM_MODEL})
-  endif()
-
-  set(AUTOML_MODEL automl-ml_m4.tar.gz)
-  set(AUTOML_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/automl)
-  if(NOT IS_DIRECTORY ${AUTOML_MODEL_DIR})
-    file(MAKE_DIRECTORY ${AUTOML_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.5.0/${AUTOML_MODEL}
-      /tmp/${AUTOML_MODEL}
-      SHA1
-      a17df0b2d980051fb39a72dc61265b97ea0e4639
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${AUTOML_MODEL}
-                    WORKING_DIRECTORY ${AUTOML_MODEL_DIR})
-    file(REMOVE /tmp/${AUTOML_MODEL})
-  endif()
-
-  set(AUTOML_STATIC_MODEL automl_static-ml_m4.tar.gz)
-  set(AUTOML_STATIC_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/automl_static)
-  if(NOT IS_DIRECTORY ${AUTOML_STATIC_MODEL_DIR})
-    file(MAKE_DIRECTORY ${AUTOML_STATIC_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.9.0/${AUTOML_STATIC_MODEL}
-      /tmp/${AUTOML_STATIC_MODEL}
-      SHA1
-      d776a30bcaeceff99844958fc88085972f5aec24
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${AUTOML_STATIC_MODEL}
-                    WORKING_DIRECTORY ${AUTOML_STATIC_MODEL_DIR})
-    file(REMOVE /tmp/${AUTOML_STATIC_MODEL})
-  endif()
-
-  set(PIPELINE_MODEL1 ${CMAKE_CURRENT_BINARY_DIR}/pipeline_model1)
-  if(NOT IS_DIRECTORY ${PIPELINE_MODEL1})
-    file(MAKE_DIRECTORY ${PIPELINE_MODEL1})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/pipeline_model1-LINUX_X86_64.tar.gz
-      /tmp/pipeline_model1-LINUX_X86_64.tar.gz
-      SHA1
-      b605cc76bb38b6462a1bd6881955cb5ae2de3218
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/pipeline_model1-LINUX_X86_64.tar.gz
-                    WORKING_DIRECTORY ${PIPELINE_MODEL1})
-    file(REMOVE /tmp/pipeline_model1-LINUX_X86_64.tar.gz)
-  endif()
-
-  set(PIPELINE_MODEL2 ${CMAKE_CURRENT_BINARY_DIR}/pipeline_model2)
-  if(NOT IS_DIRECTORY ${PIPELINE_MODEL2})
-    file(MAKE_DIRECTORY ${PIPELINE_MODEL2})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.5.0/pipeline_model2-LINUX_X86_64.tar.gz
-      /tmp/pipeline_model2-LINUX_X86_64.tar.gz
-      SHA1
-      4c480e66f243db9b0fdb5528babb606091eabaad
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/pipeline_model2-LINUX_X86_64.tar.gz
-                    WORKING_DIRECTORY ${PIPELINE_MODEL2})
-    file(REMOVE /tmp/pipeline_model2-LINUX_X86_64.tar.gz)
-  endif()
-
-  set(INVERSELABEL_MODEL inverselabel-ml_m4.tar.gz)
-  set(INVERSELABEL_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/inverselabel)
-  if(NOT IS_DIRECTORY ${INVERSELABEL_MODEL_DIR})
-    file(MAKE_DIRECTORY ${INVERSELABEL_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.5.0/${INVERSELABEL_MODEL}
-      /tmp/${INVERSELABEL_MODEL}
-      SHA1
-      055f9606c97d781f0468ad839ff42b3d41474315
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${INVERSELABEL_MODEL}
-                    WORKING_DIRECTORY ${INVERSELABEL_MODEL_DIR})
-    file(REMOVE /tmp/${INVERSELABEL_MODEL})
-  endif()
-
-  set(INPUTORDER_MODEL input_order-ml_m4.tar.gz)
-  set(INPUTORDER_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/input_order)
-  if(NOT IS_DIRECTORY ${INPUTORDER_MODEL_DIR})
-    file(MAKE_DIRECTORY ${INPUTORDER_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.9.0/${INPUTORDER_MODEL}
-      /tmp/${INPUTORDER_MODEL}
-      SHA1
-      e677130d4e47f0a5298f0280aa36a28ae9bb5ef1
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${INPUTORDER_MODEL}
-                    WORKING_DIRECTORY ${INPUTORDER_MODEL_DIR})
-    file(REMOVE /tmp/${INPUTORDER_MODEL})
-  endif()
-
-  set(INVERSELABEL_STATIC_MODEL inverselabel_static-ml_m4.tar.gz)
-  set(INVERSELABEL_STATIC_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/inverselabel_static)
-  if(NOT IS_DIRECTORY ${INVERSELABEL_STATIC_MODEL_DIR})
-    file(MAKE_DIRECTORY ${INVERSELABEL_STATIC_MODEL_DIR})
-    download_file(
-      https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/compiled-models/release-1.9.0/${INVERSELABEL_STATIC_MODEL}
-      /tmp/${INVERSELABEL_STATIC_MODEL}
-      SHA1
-      bc4b0d958a18579362c4255741fdb4b86ab92aad
-    )
-    # this is OS-agnostic
-    execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${INVERSELABEL_STATIC_MODEL}
-                    WORKING_DIRECTORY ${INVERSELABEL_STATIC_MODEL_DIR})
-    file(REMOVE /tmp/${INVERSELABEL_STATIC_MODEL})
-  endif()
-  if(WITH_TENSORFLOW2_LIB)
-    set(TF2_SAVED_MODEL imagenet_mobilenet_v2_100_224_classification.tar.gz)
-    set(TF2_SAVED_MODEL_DIR ${CMAKE_CURRENT_BINARY_DIR}/imagenet_mobilenet_v2)
-    if(NOT IS_DIRECTORY ${TF2_SAVED_MODEL_DIR})
-      file(MAKE_DIRECTORY ${TF2_SAVED_MODEL_DIR})
-      # Download Test Tensorflow model
-      download_file(
-        https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/tf2-models/${TF2_SAVED_MODEL}
-        /tmp/${TF2_SAVED_MODEL}
-        SHA1
-        2d183d967a671af1498261fdd050caa487d88e44
-      )
-      # this is OS-agnostic
-      execute_process(COMMAND ${CMAKE_COMMAND} -E tar -xf /tmp/${TF2_SAVED_MODEL}
-                      WORKING_DIRECTORY ${TF2_SAVED_MODEL_DIR})
-      #file(REMOVE /tmp/${TF2_SAVED_MODEL})
-    endif()
-  endif() # WITH_TENSORFLOW2_LIB
-  if(WITH_HEXAGON)
-      # Download Test Hexagon model for Android 64 aarch64
-      file(MAKE_DIRECTORY dlr_hexagon_model)
-      download_file(
-        https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/hexagon-models/android_ReleaseG_aarch64/mobilenet_v1_0.75_224_quant_hexagon_model.so
-        ./dlr_hexagon_model/mobilenet_v1_0.75_224_quant_hexagon_model.so
-        SHA1
-        989d6f1613e948e432a31d5b5741bff7f9a9bacb
-      )
-      # Download Hexagon NNLib for Hexagon V65
-      download_file(
-        https://neo-ai-dlr-test-artifacts.s3-us-west-2.amazonaws.com/hexagon-models/hexagon_ReleaseG_dynamic_toolv83_v65/libhexagon_nn_skel.so
-        ./dlr_hexagon_model/libhexagon_nn_skel.so
-        SHA1
-        6746c34f54aad3df24d9fc5f632ebd9dfc64ed69
-      )
-  endif() # WITH_HEXAGON
-endif()
 # Group sources
 #auto_source_group("${SOURCES}")
