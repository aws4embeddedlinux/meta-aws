Fix fleet provisioning circular dependency by removing service restart

Fleet provisioning was trying to restart greengrass-lite.target after
completing provisioning, which created a circular dependency:

Fleet Provisioning -> Start greengrass-lite.target -> Start local-deployment
-> Wait for certificate -> Fleet provisioning still running

This patch removes the service restart logic from fleet provisioning.
Instead, fleet provisioning will complete and exit cleanly, allowing
systemd's natural dependency system to handle service startup order.

The local-deployment service will start automatically when:
1. Fleet provisioning completes and exits
2. Certificate file exists (ConditionPathExists)
3. Required services are running

Upstream-Status: Pending
Signed-off-by: Amazon Q <q@amazon.com>

Index: greengrass-lite-2.2.1/modules/fleet-provisioning/src/entry.c
===================================================================
--- greengrass-lite-2.2.1.orig/modules/fleet-provisioning/src/entry.c
+++ greengrass-lite-2.2.1/modules/fleet-provisioning/src/entry.c
@@ -277,28 +277,8 @@ static GglError cleanup_actions(void) {
         return ret;
     }
 
-    GGL_LOGI("Restarting all greengrass services to apply changes");
-
-    const char *args_stop[]
-        = { "systemctl", "stop", "greengrass-lite.target", NULL };
-    ret = ggl_exec_command(args_stop);
-    if (ret != GGL_ERR_OK) {
-        GGL_LOGE("Failed to stop greengrass service");
-        return ret;
-    }
-    const char *args_reset[] = { "systemctl", "reset-failed", NULL };
-    ret = ggl_exec_command(args_reset);
-    if (ret != GGL_ERR_OK) {
-        GGL_LOGE("Failed to reset services run counter");
-        return ret;
-    }
-    const char *args_start[]
-        = { "systemctl", "start", "greengrass-lite.target", NULL };
-    ret = ggl_exec_command(args_start);
-    if (ret != GGL_ERR_OK) {
-        GGL_LOGE("Failed to restart greengrass service");
-        return ret;
-    }
+    GGL_LOGI("Fleet provisioning completed successfully. Systemd will handle service dependencies.");
+    GGL_LOGI("Certificate created at /var/lib/greengrass/provisioned-cert/certificate.pem.crt");
 
     return GGL_ERR_OK;
 }
